var cubee;
(function (cubee) {
    var Point2D = (function () {
        function Point2D(_x, _y) {
            this._x = _x;
            this._y = _y;
        }
        Object.defineProperty(Point2D.prototype, "x", {
            get: function () {
                return this._x;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Point2D.prototype, "y", {
            get: function () {
                return this._y;
            },
            enumerable: true,
            configurable: true
        });
        return Point2D;
    }());
    cubee.Point2D = Point2D;
})(cubee || (cubee = {}));
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var cubee;
(function (cubee) {
    var EventArgs = (function () {
        function EventArgs(sender) {
            this.sender = sender;
        }
        return EventArgs;
    }());
    cubee.EventArgs = EventArgs;
    var HtmlEventListenerCallback = (function () {
        function HtmlEventListenerCallback(_element, _eventType) {
            this._element = _element;
            this._eventType = _eventType;
        }
        HtmlEventListenerCallback.prototype.onAdded = function (listener) {
            listener.$$nativeListener = function (eventArgs) {
                listener(eventArgs);
            };
            this._element.addEventListener(this._eventType, listener.$$nativeListener);
        };
        HtmlEventListenerCallback.prototype.onRemoved = function (listener) {
            this._element.removeEventListener(this._eventType, listener.$$nativeListener);
        };
        return HtmlEventListenerCallback;
    }());
    cubee.HtmlEventListenerCallback = HtmlEventListenerCallback;
    var Event = (function () {
        function Event(_listenerCallback) {
            if (_listenerCallback === void 0) { _listenerCallback = null; }
            this._listenerCallback = _listenerCallback;
            this._listeners = [];
        }
        Event.prototype.addListener = function (listener) {
            if (listener == null) {
                throw "The listener parameter can not be null.";
            }
            if (this.hasListener(listener)) {
                return;
            }
            this._listeners.push(listener);
            if (this._listenerCallback != null) {
                this._listenerCallback.onAdded(listener);
            }
        };
        Event.prototype.removeListener = function (listener) {
            var idx = this._listeners.indexOf(listener);
            if (idx < 0) {
                return;
            }
            this._listeners.splice(idx, 1);
            if (this._listenerCallback != null) {
                this._listenerCallback.onRemoved(listener);
            }
        };
        Event.prototype.hasListener = function (listener) {
            return this._listeners.indexOf(listener) > -1;
        };
        Event.prototype.fireEvent = function (args) {
            for (var _i = 0, _a = this._listeners; _i < _a.length; _i++) {
                var l = _a[_i];
                var listener = l;
                listener(args);
            }
        };
        Object.defineProperty(Event.prototype, "listenerCallback", {
            get: function () {
                return this._listenerCallback;
            },
            set: function (value) {
                this._listenerCallback = value;
            },
            enumerable: true,
            configurable: true
        });
        return Event;
    }());
    cubee.Event = Event;
    var Timer = (function () {
        function Timer(func) {
            var _this = this;
            this.func = func;
            this.repeat = true;
            this.action = function () {
                _this.func();
                if (!_this.repeat) {
                    _this.token = null;
                }
            };
            if (func == null) {
                throw "The func parameter can not be null.";
            }
        }
        Timer.prototype.start = function (delay, repeat) {
            this.stop();
            this.repeat = repeat;
            if (this.repeat) {
                this.token = setInterval(this.func, delay);
            }
            else {
                this.token = setTimeout(this.func, delay);
            }
        };
        Timer.prototype.stop = function () {
            if (this.token != null) {
                clearInterval(this.token);
                this.token = null;
            }
        };
        Object.defineProperty(Timer.prototype, "Started", {
            get: function () {
                return this.token != null;
            },
            enumerable: true,
            configurable: true
        });
        return Timer;
    }());
    cubee.Timer = Timer;
    var EventQueue = (function () {
        function EventQueue() {
            var _this = this;
            this.queue = [];
            this.timer = null;
            this.timer = new Timer(function () {
                var size = _this.queue.length;
                try {
                    for (var i = 0; i < size; i++) {
                        var task = void 0;
                        task = _this.queue[0];
                        _this.queue.splice(0, 1);
                        if (task != null) {
                            task();
                        }
                    }
                }
                finally {
                    if (size > 0) {
                        _this.timer.start(0, false);
                    }
                    else {
                        _this.timer.start(50, false);
                    }
                }
            });
            this.timer.start(10, false);
        }
        Object.defineProperty(EventQueue, "Instance", {
            get: function () {
                if (EventQueue.instance == null) {
                    EventQueue.instance = new EventQueue();
                }
                return EventQueue.instance;
            },
            enumerable: true,
            configurable: true
        });
        EventQueue.prototype.invokeLater = function (task) {
            if (task == null) {
                throw "The task can not be null.";
            }
            this.queue.push(task);
        };
        EventQueue.prototype.invokePrior = function (task) {
            if (task == null) {
                throw "The task can not be null.";
            }
            this.queue.splice(0, 0, task);
        };
        return EventQueue;
    }());
    EventQueue.instance = null;
    cubee.EventQueue = EventQueue;
    var RunOnce = (function () {
        function RunOnce(func) {
            this.func = func;
            this.scheduled = false;
            if (func == null) {
                throw "The func parameter can not be null.";
            }
        }
        RunOnce.prototype.run = function () {
            var _this = this;
            if (this.scheduled) {
                return;
            }
            this.scheduled = true;
            EventQueue.Instance.invokeLater(function () {
                _this.scheduled = false;
                _this.func();
            });
        };
        return RunOnce;
    }());
    cubee.RunOnce = RunOnce;
    var ParentChangedEventArgs = (function (_super) {
        __extends(ParentChangedEventArgs, _super);
        function ParentChangedEventArgs(newParent, sender) {
            var _this = _super.call(this, sender) || this;
            _this.newParent = newParent;
            _this.sender = sender;
            return _this;
        }
        return ParentChangedEventArgs;
    }(EventArgs));
    cubee.ParentChangedEventArgs = ParentChangedEventArgs;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var Property = (function () {
        function Property(_value, _nullable, _readonly, _validator) {
            if (_nullable === void 0) { _nullable = true; }
            if (_readonly === void 0) { _readonly = false; }
            if (_validator === void 0) { _validator = null; }
            var _this = this;
            this._value = _value;
            this._nullable = _nullable;
            this._readonly = _readonly;
            this._validator = _validator;
            this._changeListeners = [];
            this._valid = false;
            this._id = "p" + Property._nextId++;
            this.bindListener = function () {
                _this.invalidateIfNeeded();
            };
            if (_value == null && _nullable == false) {
                throw "A nullable property can not be null.";
            }
            if (this._value != null && _validator != null) {
                this._value = _validator.validate(_value);
            }
            this.invalidate();
        }
        Object.defineProperty(Property.prototype, "id", {
            get: function () {
                return this._id;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Property.prototype, "valid", {
            get: function () {
                return this._valid;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Property.prototype, "value", {
            get: function () {
                return this.get();
            },
            set: function (newValue) {
                this.set(newValue);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Property.prototype, "nullable", {
            get: function () {
                return this._nullable;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Property.prototype, "readonly", {
            get: function () {
                return this._readonly;
            },
            enumerable: true,
            configurable: true
        });
        Property.prototype.initReadonlyBind = function (readonlyBind) {
            if (this._readonlyBind != null) {
                throw "The readonly bind is already initialized.";
            }
            this._readonlyBind = readonlyBind;
            if (readonlyBind != null) {
                readonlyBind.addChangeListener(this.bindListener);
            }
            this.invalidate();
        };
        Property.prototype.get = function () {
            this._valid = true;
            if (this._bindingSource != null) {
                if (this._validator != null) {
                    return this._validator.validate(this._bindingSource.getObjectValue());
                }
                return this._bindingSource.getObjectValue();
            }
            if (this._readonlyBind != null) {
                if (this._validator != null) {
                    return this._validator.validate(this._readonlyBind.getObjectValue());
                }
                return this._readonlyBind.getObjectValue();
            }
            return this._value;
        };
        Property.prototype.set = function (newValue) {
            if (this._readonly) {
                throw "Can not change the value of a readonly property.";
            }
            if (this.isBound()) {
                throw "Can not change the value of a bound property.";
            }
            if (!this._nullable && newValue == null) {
                throw "Can not set the value to null of a non nullable property.";
            }
            if (this._validator != null) {
                newValue = this._validator.validate(newValue);
            }
            if (this._value == newValue) {
                return;
            }
            if (this._value != null && this._value == newValue) {
                return;
            }
            this._value = newValue;
            this.invalidate();
        };
        Property.prototype.invalidate = function () {
            this._valid = false;
            this.fireChangeListeners();
        };
        Property.prototype.invalidateIfNeeded = function () {
            if (!this._valid) {
                return;
            }
            this.invalidate();
        };
        Property.prototype.fireChangeListeners = function () {
            var _this = this;
            this._changeListeners.forEach(function (listener) {
                listener(_this);
            });
        };
        Property.prototype.getObjectValue = function () {
            return this.get();
        };
        Property.prototype.addChangeListener = function (listener) {
            if (listener == null) {
                throw "The listener parameter can not be null.";
            }
            if (this.hasChangeListener(listener)) {
                return;
            }
            this._changeListeners.push(listener);
            this.get();
        };
        Property.prototype.removeChangeListener = function (listener) {
            var idx = this._changeListeners.indexOf(listener);
            if (idx < 0) {
                return;
            }
            this._changeListeners.splice(idx, 1);
        };
        Property.prototype.hasChangeListener = function (listener) {
            this._changeListeners.forEach(function (l) {
                if (l == listener) {
                    return true;
                }
            });
            return false;
        };
        Property.prototype.animate = function (pos, startValue, endValue) {
            if (pos < 0.5) {
                return startValue;
            }
            return endValue;
        };
        Property.prototype.bind = function (source) {
            if (source == null) {
                throw "The source can not be null.";
            }
            if (this.isBound()) {
                throw "This property is already bound.";
            }
            if (this._readonly) {
                throw "Can't bind a readonly property.";
            }
            this._bindingSource = source;
            this._bindingSource.addChangeListener(this.bindListener);
            this.invalidate();
        };
        Property.prototype.bidirectionalBind = function (other) {
            var _this = this;
            if (this.isBound()) {
                throw "This property is already bound.";
            }
            if (this._readonly) {
                throw "Can't bind a readonly property.";
            }
            if (other == null) {
                throw "The other parameter can not be null.";
            }
            if (other._readonly) {
                throw "Can not bind a property bidirectionally to a readonly property.";
            }
            if (other == this) {
                throw "Can not bind a property bidirectionally for themself.";
            }
            if (other.isBound()) {
                throw "The target property is already bound.";
            }
            this._bidirectionalBindProperty = other;
            this._bidirectionalChangeListenerOther = function () {
                _this.set(_this._bidirectionalBindProperty.get());
            };
            other.addChangeListener(this._bidirectionalChangeListenerOther);
            this._bidirectionalChangeListenerThis = function () {
                _this._bidirectionalBindProperty.set(_this.get());
            };
            this.addChangeListener(this._bidirectionalChangeListenerThis);
            other._bidirectionalBindProperty = this;
            other._bidirectionalChangeListenerOther = this._bidirectionalChangeListenerThis;
            other._bidirectionalChangeListenerThis = this._bidirectionalChangeListenerOther;
        };
        Property.prototype.unbind = function () {
            if (this._bindingSource != null) {
                this._bindingSource.removeChangeListener(this.bindListener);
                this._bindingSource = null;
                this.invalidate();
            }
            else if (this.isBidirectionalBound()) {
                this.removeChangeListener(this._bidirectionalChangeListenerThis);
                this._bidirectionalBindProperty.removeChangeListener(this._bidirectionalChangeListenerOther);
                this._bidirectionalBindProperty._bidirectionalBindProperty = null;
                this._bidirectionalBindProperty._bidirectionalChangeListenerOther = null;
                this._bidirectionalBindProperty._bidirectionalChangeListenerThis = null;
                this._bidirectionalBindProperty = null;
                this._bidirectionalChangeListenerOther = null;
                this._bidirectionalChangeListenerThis = null;
            }
        };
        Property.prototype.unbindTargets = function () {
            this._changeListeners = [];
        };
        Property.prototype.isBound = function () {
            return this._bindingSource != null;
        };
        Property.prototype.isBidirectionalBound = function () {
            return this._bidirectionalBindProperty != null;
        };
        Property.prototype.createPropertyLine = function (keyFrames) {
            return new PropertyLine(keyFrames);
        };
        Property.prototype.destroy = function () {
            this.unbind();
            this._changeListeners = [];
            this.bindListener = null;
        };
        return Property;
    }());
    Property._nextId = 0;
    cubee.Property = Property;
    var Expression = (function () {
        function Expression(func) {
            var activators = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                activators[_i - 1] = arguments[_i];
            }
            var _this = this;
            this._notifyListenersOnce = new cubee.RunOnce(function () {
                _this.fireChangeListeners();
            });
            this._bindingSources = [];
            this._bindingListener = function () {
                _this.invalidateIfNeeded();
            };
            this._changeListeners = [];
            this._valid = false;
            this._value = null;
            if (func == null) {
                throw "The 'func' parameter can not be null";
            }
            this._func = func;
            this.bind.apply(this, activators);
        }
        Object.defineProperty(Expression.prototype, "value", {
            get: function () {
                if (!this._valid) {
                    this._value = this._func();
                    this._valid = true;
                }
                return this._value;
            },
            enumerable: true,
            configurable: true
        });
        Expression.prototype.addChangeListener = function (listener) {
            if (listener == null) {
                throw "The listener parameter can not be null.";
            }
            if (this.hasChangeListener(listener)) {
                return;
            }
            this._changeListeners.push(listener);
            var x = this.value;
        };
        Expression.prototype.removeChangeListener = function (listener) {
            var _this = this;
            var index = this._changeListeners.indexOf(listener);
            if (index > -1) {
                this._changeListeners.splice(index, 1);
            }
            if (this._changeListeners.length < 1) {
                this._bindingSources.forEach(function (prop) {
                    prop.removeChangeListener(_this._bindingListener);
                });
            }
            this.invalidate();
        };
        Expression.prototype.hasChangeListener = function (listener) {
            return this._changeListeners.indexOf(listener) > -1;
        };
        Expression.prototype.getObjectValue = function () {
            return this.value;
        };
        Expression.prototype.bind = function () {
            var _this = this;
            var properties = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                properties[_i] = arguments[_i];
            }
            properties.forEach(function (prop) {
                prop.addChangeListener(_this._bindingListener);
                _this._bindingSources.push(prop);
            });
            this.invalidate();
        };
        Expression.prototype.unbindAll = function () {
            var _this = this;
            this._bindingSources.forEach(function (prop) {
                prop.removeChangeListener(_this._bindingListener);
            });
            this._bindingSources = [];
            this.invalidate();
        };
        Expression.prototype.unbind = function (property) {
            property.removeChangeListener(this._bindingListener);
            var index = this._bindingSources.indexOf(property);
            if (index > -1) {
                this._bindingSources.splice(index, 1);
            }
            this.invalidate();
        };
        Expression.prototype.invalidate = function () {
            this._valid = false;
            this._notifyListenersOnce.run();
        };
        Expression.prototype.invalidateIfNeeded = function () {
            if (!this._valid) {
                return;
            }
            this.invalidate();
        };
        Expression.prototype.fireChangeListeners = function () {
            var _this = this;
            this._changeListeners.forEach(function (listener) {
                listener(_this);
            });
        };
        return Expression;
    }());
    cubee.Expression = Expression;
    var KeyFrame = (function () {
        function KeyFrame(_time, _property, _endValue, _keyframeReachedListener, _interpolator) {
            if (_keyframeReachedListener === void 0) { _keyframeReachedListener = null; }
            if (_interpolator === void 0) { _interpolator = Interpolators.Linear; }
            this._time = _time;
            this._property = _property;
            this._endValue = _endValue;
            this._keyframeReachedListener = _keyframeReachedListener;
            this._interpolator = _interpolator;
            if (_time < 0) {
                throw "The time parameter can not be smaller than zero.";
            }
            if (_property == null) {
                throw "The property parameter can not be null.";
            }
            if (_property.readonly) {
                throw "Can't animate a read-only property.";
            }
            if (_endValue == null && !_property.nullable) {
                throw "Can't set null value to a non nullable property.";
            }
            if (_interpolator == null) {
                this._interpolator = Interpolators.Linear;
            }
        }
        Object.defineProperty(KeyFrame.prototype, "time", {
            get: function () {
                return this._time;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(KeyFrame.prototype, "property", {
            get: function () {
                return this._property;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(KeyFrame.prototype, "endValue", {
            get: function () {
                return this._endValue;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(KeyFrame.prototype, "interpolator", {
            get: function () {
                return this._interpolator;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(KeyFrame.prototype, "keyFrameReachedListener", {
            get: function () {
                return this._keyframeReachedListener;
            },
            enumerable: true,
            configurable: true
        });
        return KeyFrame;
    }());
    cubee.KeyFrame = KeyFrame;
    var PropertyLine = (function () {
        function PropertyLine(_keyFrames) {
            this._keyFrames = _keyFrames;
            this._startTime = -1;
            this._lastRunTime = -1;
            this._previousFrame = null;
            this._property = _keyFrames[0].property;
            var firstFrame = _keyFrames[0];
            if (firstFrame.time > 0) {
                _keyFrames.splice(0, 0, new KeyFrame(0, firstFrame.property, firstFrame.property.value));
            }
        }
        Object.defineProperty(PropertyLine.prototype, "startTime", {
            get: function () {
                return this._startTime;
            },
            set: function (startTime) {
                this._startTime = startTime;
            },
            enumerable: true,
            configurable: true
        });
        PropertyLine.prototype.animate = function () {
            var actTime = Date.now();
            if (actTime == this._startTime) {
                return false;
            }
            var nextFrame = null;
            var actFrame = null;
            for (var i = 0; i < this._keyFrames.length; i++) {
                var frame = this._keyFrames[i];
                var fr = frame;
                if (actTime >= this._startTime + fr.time) {
                    actFrame = frame;
                }
                else {
                    nextFrame = frame;
                    break;
                }
                if (this._startTime + fr.time > this._lastRunTime && this._startTime + fr.time <= actTime) {
                    if (fr.keyFrameReachedListener != null) {
                        fr.keyFrameReachedListener();
                    }
                }
            }
            if (actFrame != null) {
                if (nextFrame != null) {
                    var pos = ((actTime - this._startTime - actFrame.time)) / (nextFrame.time - actFrame.time);
                    actFrame.property.value = actFrame.property.animate(pos, actFrame.endValue, nextFrame.endValue);
                }
                else {
                    actFrame.property.value = actFrame.endValue;
                }
            }
            this._lastRunTime = actTime;
            return actTime >= this._startTime + this._keyFrames[this._keyFrames.length - 1].time;
        };
        return PropertyLine;
    }());
    cubee.PropertyLine = PropertyLine;
    var Interpolators = (function () {
        function Interpolators() {
        }
        Object.defineProperty(Interpolators, "Linear", {
            get: function () {
                return function (value) {
                    return value;
                };
            },
            enumerable: true,
            configurable: true
        });
        return Interpolators;
    }());
    cubee.Interpolators = Interpolators;
    var AAnimator = (function () {
        function AAnimator() {
            this.started = false;
        }
        AAnimator.animate = function () {
            for (var i = AAnimator.animators.length - 1; i >= 0; i--) {
                if (AAnimator.animators.length <= i) {
                    continue;
                }
                var animator = AAnimator.animators[i];
                try {
                    animator.onAnimate();
                }
                catch (t) {
                    new Console().error(t);
                }
            }
            if (AAnimator.animators.length > 0) {
                cubee.EventQueue.Instance.invokeLater(AAnimator.ANIMATOR_TASK);
            }
        };
        AAnimator.prototype.start = function () {
            if (this.started) {
                return;
            }
            AAnimator.animators.push(this);
            if (AAnimator.animators.length == 1) {
                cubee.EventQueue.Instance.invokeLater(AAnimator.ANIMATOR_TASK);
            }
            this.started = true;
        };
        AAnimator.prototype.stop = function () {
            if (!this.started) {
                return;
            }
            this.started = false;
            var idx = AAnimator.animators.indexOf(this);
            AAnimator.animators.splice(idx, 1);
        };
        Object.defineProperty(AAnimator.prototype, "Started", {
            get: function () {
                return this.started;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AAnimator.prototype, "Stopped", {
            get: function () {
                return !this.started;
            },
            enumerable: true,
            configurable: true
        });
        return AAnimator;
    }());
    AAnimator.animators = [];
    AAnimator.ANIMATOR_TASK = function () {
        AAnimator.animate();
    };
    cubee.AAnimator = AAnimator;
    var Timeline = (function (_super) {
        __extends(Timeline, _super);
        function Timeline(keyFrames) {
            var _this = _super.call(this) || this;
            _this.keyFrames = keyFrames;
            _this.propertyLines = [];
            _this.repeatCount = 0;
            _this.finishedEvent = new cubee.Event();
            return _this;
        }
        Timeline.createSimple = function (property, startValue, endValue, intervalMs) {
            return new Timeline([new KeyFrame(0, property, startValue), new KeyFrame(intervalMs, property, endValue)]);
        };
        Timeline.prototype.createPropertyLines = function () {
            var _this = this;
            var plMap = {};
            var keys = [];
            for (var i = 0; i < this.keyFrames.length; i++) {
                var keyFrame = this.keyFrames[i];
                var kf = keyFrame;
                var propertyLine = plMap[kf.property.id];
                if (propertyLine == null) {
                    propertyLine = [];
                    plMap[kf.property.id] = propertyLine;
                    keys.push(kf.property.id);
                }
                if (propertyLine.length > 0) {
                    if (propertyLine[propertyLine.length - 1].time >= kf.time) {
                        throw "The keyframes must be in ascending time order per property.";
                    }
                }
                propertyLine.push(keyFrame);
            }
            keys.forEach(function (key) {
                var propertyLine = plMap[key][0].property.createPropertyLine(plMap[key]);
                _this.propertyLines.push(propertyLine);
            });
        };
        Timeline.prototype.start = function (repeatCount) {
            if (repeatCount === void 0) { repeatCount = 0; }
            if (repeatCount == null) {
                repeatCount = 0;
            }
            repeatCount = repeatCount | 0;
            this.createPropertyLines();
            this.repeatCount = repeatCount;
            var startTime = Date.now();
            this.propertyLines.forEach(function (propertyLine) {
                var pl = propertyLine;
                pl.startTime = startTime;
            });
            _super.prototype.start.call(this);
        };
        Timeline.prototype.stop = function () {
            if (!this.Started) {
                return;
            }
            _super.prototype.stop.call(this);
            this.finishedEvent.fireEvent(new TimelineFinishedEventArgs(true));
        };
        Timeline.prototype.onAnimate = function () {
            var finished = true;
            this.propertyLines.forEach(function (propertyLine) {
                var pl = propertyLine;
                finished = finished && pl.animate();
            });
            if (finished) {
                if (this.repeatCount < 0) {
                    var startTime_1 = Date.now();
                    this.propertyLines.forEach(function (propertyLine) {
                        var pl = propertyLine;
                        pl.startTime = startTime_1;
                    });
                }
                else {
                    this.repeatCount--;
                    if (this.repeatCount > -1) {
                        var startTime_2 = Date.now();
                        this.propertyLines.forEach(function (propertyLine) {
                            var pl = propertyLine;
                            pl.startTime = startTime_2;
                        });
                    }
                    else {
                        _super.prototype.stop.call(this);
                        this.finishedEvent.fireEvent(new TimelineFinishedEventArgs(false));
                    }
                }
            }
        };
        Timeline.prototype.onFinishedEvent = function () {
            return this.finishedEvent;
        };
        return Timeline;
    }(AAnimator));
    cubee.Timeline = Timeline;
    var TimelineFinishedEventArgs = (function () {
        function TimelineFinishedEventArgs(stopped) {
            if (stopped === void 0) { stopped = false; }
            this.stopped = stopped;
        }
        Object.defineProperty(TimelineFinishedEventArgs.prototype, "Stopped", {
            get: function () {
                return this.stopped;
            },
            enumerable: true,
            configurable: true
        });
        return TimelineFinishedEventArgs;
    }());
    cubee.TimelineFinishedEventArgs = TimelineFinishedEventArgs;
    var NumberProperty = (function (_super) {
        __extends(NumberProperty, _super);
        function NumberProperty() {
            return _super.apply(this, arguments) || this;
        }
        NumberProperty.prototype.animate = function (pos, startValue, endValue) {
            return startValue + ((endValue - startValue) * pos);
        };
        return NumberProperty;
    }(Property));
    cubee.NumberProperty = NumberProperty;
    var StringProperty = (function (_super) {
        __extends(StringProperty, _super);
        function StringProperty() {
            return _super.apply(this, arguments) || this;
        }
        return StringProperty;
    }(Property));
    cubee.StringProperty = StringProperty;
    var PaddingProperty = (function (_super) {
        __extends(PaddingProperty, _super);
        function PaddingProperty() {
            return _super.apply(this, arguments) || this;
        }
        return PaddingProperty;
    }(Property));
    cubee.PaddingProperty = PaddingProperty;
    var BorderProperty = (function (_super) {
        __extends(BorderProperty, _super);
        function BorderProperty() {
            return _super.apply(this, arguments) || this;
        }
        return BorderProperty;
    }(Property));
    cubee.BorderProperty = BorderProperty;
    var BackgroundProperty = (function (_super) {
        __extends(BackgroundProperty, _super);
        function BackgroundProperty() {
            return _super.apply(this, arguments) || this;
        }
        return BackgroundProperty;
    }(Property));
    cubee.BackgroundProperty = BackgroundProperty;
    var BooleanProperty = (function (_super) {
        __extends(BooleanProperty, _super);
        function BooleanProperty() {
            return _super.apply(this, arguments) || this;
        }
        return BooleanProperty;
    }(Property));
    cubee.BooleanProperty = BooleanProperty;
    var ColorProperty = (function (_super) {
        __extends(ColorProperty, _super);
        function ColorProperty() {
            return _super.apply(this, arguments) || this;
        }
        return ColorProperty;
    }(Property));
    cubee.ColorProperty = ColorProperty;
    var Animator = (function () {
        function Animator() {
        }
        Animator.animateConditionally = function (property, condition, trueValue, falseValue, intervalMs) {
            var tlToTrue = Timeline.createSimple(property, falseValue, trueValue, intervalMs);
            var tlToFalse = Timeline.createSimple(property, trueValue, falseValue, intervalMs);
            condition.addChangeListener(function () {
                if (condition.getObjectValue()) {
                    tlToFalse.stop();
                    tlToTrue.stop();
                    tlToTrue.start();
                }
                else {
                    tlToFalse.stop();
                    tlToTrue.stop();
                    tlToFalse.start();
                }
            });
            if (condition.getObjectValue()) {
                property.value = trueValue;
            }
            else {
                property.value = falseValue;
            }
        };
        return Animator;
    }());
    cubee.Animator = Animator;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var ABackground = (function () {
        function ABackground() {
        }
        return ABackground;
    }());
    cubee.ABackground = ABackground;
    var Color = (function () {
        function Color(argb) {
            this._argb = 0;
            argb = argb | 0;
            this._argb = argb;
        }
        Object.defineProperty(Color, "TRANSPARENT", {
            get: function () {
                return Color._TRANSPARENT;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Color, "WHITE", {
            get: function () {
                return Color._WHITE;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Color, "BLACK", {
            get: function () {
                return Color._BLACK;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Color, "LIGHT_GRAY", {
            get: function () {
                return Color._LIGHT_GRAY;
            },
            enumerable: true,
            configurable: true
        });
        Color.argb = function (argb) {
            return new Color(argb);
        };
        Color.argb2 = function (alpha, red, green, blue) {
            alpha = this.fixComponent(alpha);
            red = this.fixComponent(red);
            green = this.fixComponent(green);
            blue = this.fixComponent(blue);
            return this.argb(alpha << 24
                | red << 16
                | green << 8
                | blue);
        };
        Color.rgb = function (rgb) {
            return this.argb(rgb | 0xff000000);
        };
        Color.rgb2 = function (red, green, blue) {
            return this.argb2(255, red, green, blue);
        };
        Color.fixComponent = function (component) {
            component = component | 0;
            if (component < 0) {
                return 0;
            }
            if (component > 255) {
                return 255;
            }
            return component;
        };
        Color.fadeColors = function (startColor, endColor, fadePosition) {
            return Color.argb2(this.mixComponent(startColor.alpha, endColor.alpha, fadePosition), this.mixComponent(startColor.red, endColor.red, fadePosition), this.mixComponent(startColor.green, endColor.green, fadePosition), this.mixComponent(startColor.blue, endColor.blue, fadePosition));
        };
        Color.mixComponent = function (startValue, endValue, pos) {
            var res = (startValue + ((endValue - startValue) * pos)) | 0;
            res = this.fixComponent(res);
            return res;
        };
        Object.defineProperty(Color.prototype, "argb", {
            get: function () {
                return this._argb;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Color.prototype, "alpha", {
            get: function () {
                return (this._argb >>> 24) & 0xff;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Color.prototype, "red", {
            get: function () {
                return (this._argb >>> 16) & 0xff;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Color.prototype, "green", {
            get: function () {
                return (this._argb >>> 8) & 0xff;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Color.prototype, "blue", {
            get: function () {
                return this._argb & 0xff;
            },
            enumerable: true,
            configurable: true
        });
        Color.prototype.fade = function (fadeColor, fadePosition) {
            return Color.fadeColors(this, fadeColor, fadePosition);
        };
        Color.prototype.toCSS = function () {
            return "rgba(" + this.red + ", " + this.green + ", " + this.blue + ", " + (this.alpha / 255.0) + ")";
        };
        return Color;
    }());
    Color._TRANSPARENT = Color.argb(0x00000000);
    Color._WHITE = Color.argb(0xffffffff);
    Color._BLACK = Color.argb(0xff000000);
    Color._LIGHT_GRAY = Color.argb(0xffcccccc);
    cubee.Color = Color;
    var ColorBackground = (function (_super) {
        __extends(ColorBackground, _super);
        function ColorBackground(color) {
            var _this = _super.call(this) || this;
            _this._color = null;
            _this._cache = null;
            _this._color = color;
            return _this;
        }
        Object.defineProperty(ColorBackground.prototype, "color", {
            get: function () {
                return this._color;
            },
            enumerable: true,
            configurable: true
        });
        ColorBackground.prototype.apply = function (element) {
            if (this._cache != null) {
                element.style.backgroundColor = this._cache;
            }
            else {
                if (this._color == null) {
                    element.style.removeProperty("backgroundColor");
                }
                else {
                    this._cache = this._color.toCSS();
                    element.style.backgroundColor = this._cache;
                }
            }
        };
        return ColorBackground;
    }(ABackground));
    cubee.ColorBackground = ColorBackground;
    var Padding = (function () {
        function Padding(_left, _top, _right, _bottom) {
            this._left = _left;
            this._top = _top;
            this._right = _right;
            this._bottom = _bottom;
        }
        Padding.create = function (padding) {
            return new Padding(padding, padding, padding, padding);
        };
        Object.defineProperty(Padding.prototype, "left", {
            get: function () {
                return this._left;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Padding.prototype, "top", {
            get: function () {
                return this._top;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Padding.prototype, "right", {
            get: function () {
                return this._right;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Padding.prototype, "bottom", {
            get: function () {
                return this._bottom;
            },
            enumerable: true,
            configurable: true
        });
        Padding.prototype.apply = function (element) {
            element.style.paddingLeft = this._left + "px";
            element.style.paddingTop = this._top + "px";
            element.style.paddingRight = this._right + "px";
            element.style.paddingBottom = this._bottom + "px";
        };
        return Padding;
    }());
    cubee.Padding = Padding;
    var Border = (function () {
        function Border(_leftWidth, _topWidth, _rightWidth, _bottomWidth, _leftColor, _topColor, _rightColor, _bottomColor, _topLeftRadius, _topRightRadius, _bottomLeftRadius, _bottomRightRadius) {
            this._leftWidth = _leftWidth;
            this._topWidth = _topWidth;
            this._rightWidth = _rightWidth;
            this._bottomWidth = _bottomWidth;
            this._leftColor = _leftColor;
            this._topColor = _topColor;
            this._rightColor = _rightColor;
            this._bottomColor = _bottomColor;
            this._topLeftRadius = _topLeftRadius;
            this._topRightRadius = _topRightRadius;
            this._bottomLeftRadius = _bottomLeftRadius;
            this._bottomRightRadius = _bottomRightRadius;
            if (this._leftColor == null) {
                this._leftColor = Color.TRANSPARENT;
            }
            if (this._topColor == null) {
                this._topColor = Color.TRANSPARENT;
            }
            if (this._rightColor == null) {
                this._rightColor = Color.TRANSPARENT;
            }
            if (this._bottomColor == null) {
                this._bottomColor = Color.TRANSPARENT;
            }
        }
        Border.create = function (width, color, radius) {
            return new Border(width, width, width, width, color, color, color, color, radius, radius, radius, radius);
        };
        Object.defineProperty(Border.prototype, "leftWidth", {
            get: function () {
                return this._leftWidth;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Border.prototype, "topWidth", {
            get: function () {
                return this._topWidth;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Border.prototype, "rightWidth", {
            get: function () {
                return this._rightWidth;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Border.prototype, "bottomWidth", {
            get: function () {
                return this._bottomWidth;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Border.prototype, "leftColor", {
            get: function () {
                return this._leftColor;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Border.prototype, "topColor", {
            get: function () {
                return this._topColor;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Border.prototype, "rightColor", {
            get: function () {
                return this._rightColor;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Border.prototype, "bottomColor", {
            get: function () {
                return this._bottomColor;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Border.prototype, "topLeftRadius", {
            get: function () {
                return this._topLeftRadius;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Border.prototype, "topRightRadius", {
            get: function () {
                return this._topRightRadius;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Border.prototype, "bottomLeftRadius", {
            get: function () {
                return this._bottomLeftRadius;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Border.prototype, "bottomRightRadius", {
            get: function () {
                return this._bottomRightRadius;
            },
            enumerable: true,
            configurable: true
        });
        Border.prototype.apply = function (element) {
            element.style.borderStyle = "solid";
            element.style.borderLeftColor = this._leftColor.toCSS();
            element.style.borderLeftWidth = this._leftWidth + "px";
            element.style.borderTopColor = this._topColor.toCSS();
            element.style.borderTopWidth = this._topWidth + "px";
            element.style.borderRightColor = this._rightColor.toCSS();
            element.style.borderRightWidth = this._rightWidth + "px";
            element.style.borderBottomColor = this._bottomColor.toCSS();
            element.style.borderBottomWidth = this._bottomWidth + "px";
            element.style.borderTopLeftRadius = this._topLeftRadius + "px";
            element.style.borderTopRightRadius = this._topRightRadius + "px";
            element.style.borderBottomLeftRadius = this._bottomLeftRadius + "px";
            element.style.borderBottomRightRadius = this._bottomRightRadius + "px";
        };
        return Border;
    }());
    cubee.Border = Border;
    var BoxShadow = (function () {
        function BoxShadow(_hPos, _vPos, _blur, _spread, _color, _inner) {
            this._hPos = _hPos;
            this._vPos = _vPos;
            this._blur = _blur;
            this._spread = _spread;
            this._color = _color;
            this._inner = _inner;
        }
        Object.defineProperty(BoxShadow.prototype, "hPos", {
            get: function () {
                return this._hPos;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BoxShadow.prototype, "vPos", {
            get: function () {
                return this._vPos;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BoxShadow.prototype, "blur", {
            get: function () {
                return this._blur;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BoxShadow.prototype, "spread", {
            get: function () {
                return this._spread;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BoxShadow.prototype, "color", {
            get: function () {
                return this._color;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BoxShadow.prototype, "inner", {
            get: function () {
                return this._inner;
            },
            enumerable: true,
            configurable: true
        });
        BoxShadow.prototype.apply = function (element) {
            element.style.boxShadow = this._hPos + "px " + this._vPos + "px " + this._blur + "px " + this._spread + "px "
                + this._color.toCSS() + (this._inner ? " inset" : "");
        };
        return BoxShadow;
    }());
    cubee.BoxShadow = BoxShadow;
    var ETextOverflow = (function () {
        function ETextOverflow(_css) {
            this._css = _css;
        }
        Object.defineProperty(ETextOverflow, "CLIP", {
            get: function () {
                return ETextOverflow._CLIP;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ETextOverflow, "ELLIPSIS", {
            get: function () {
                return ETextOverflow._ELLIPSIS;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ETextOverflow.prototype, "CSS", {
            get: function () {
                return this._css;
            },
            enumerable: true,
            configurable: true
        });
        ETextOverflow.prototype.apply = function (element) {
            element.style.textOverflow = this._css;
        };
        return ETextOverflow;
    }());
    ETextOverflow._CLIP = new ETextOverflow("clip");
    ETextOverflow._ELLIPSIS = new ETextOverflow("ellipsis");
    cubee.ETextOverflow = ETextOverflow;
    var ETextAlign = (function () {
        function ETextAlign(_css) {
            this._css = _css;
        }
        Object.defineProperty(ETextAlign, "LEFT", {
            get: function () {
                return ETextAlign._LEFT;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ETextAlign, "CENTER", {
            get: function () {
                return ETextAlign._CENTER;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ETextAlign, "RIGHT", {
            get: function () {
                return ETextAlign._RIGHT;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ETextAlign, "JUSTIFY", {
            get: function () {
                return ETextAlign._JUSTIFY;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ETextAlign.prototype, "CSS", {
            get: function () {
                return this._css;
            },
            enumerable: true,
            configurable: true
        });
        ETextAlign.prototype.apply = function (element) {
            element.style.textAlign = this._css;
        };
        return ETextAlign;
    }());
    ETextAlign._LEFT = new ETextAlign("left");
    ETextAlign._CENTER = new ETextAlign("center");
    ETextAlign._RIGHT = new ETextAlign("right");
    ETextAlign._JUSTIFY = new ETextAlign("justify");
    cubee.ETextAlign = ETextAlign;
    var EHAlign = (function () {
        function EHAlign(_css) {
            this._css = _css;
        }
        Object.defineProperty(EHAlign, "LEFT", {
            get: function () {
                return EHAlign._LEFT;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EHAlign, "CENTER", {
            get: function () {
                return EHAlign._CENTER;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EHAlign, "RIGHT", {
            get: function () {
                return EHAlign._RIGHT;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EHAlign.prototype, "CSS", {
            get: function () {
                return this._css;
            },
            enumerable: true,
            configurable: true
        });
        return EHAlign;
    }());
    EHAlign._LEFT = new EHAlign("left");
    EHAlign._CENTER = new EHAlign("center");
    EHAlign._RIGHT = new EHAlign("right");
    cubee.EHAlign = EHAlign;
    var EVAlign = (function () {
        function EVAlign(_css) {
            this._css = _css;
        }
        Object.defineProperty(EVAlign, "TOP", {
            get: function () {
                return EVAlign._TOP;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EVAlign, "MIDDLE", {
            get: function () {
                return EVAlign._MIDDLE;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EVAlign, "BOTTOM", {
            get: function () {
                return EVAlign._BOTTOM;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EVAlign.prototype, "CSS", {
            get: function () {
                return this._css;
            },
            enumerable: true,
            configurable: true
        });
        return EVAlign;
    }());
    EVAlign._TOP = new EVAlign("top");
    EVAlign._MIDDLE = new EVAlign("middle");
    EVAlign._BOTTOM = new EVAlign("bottom");
    cubee.EVAlign = EVAlign;
    var FontFamily = (function () {
        function FontFamily(_css) {
            this._css = _css;
            if (!FontFamily.initialized) {
                FontFamily.initFontContainerStyle();
            }
        }
        Object.defineProperty(FontFamily, "Arial", {
            get: function () {
                return FontFamily._arial;
            },
            enumerable: true,
            configurable: true
        });
        FontFamily.initFontContainerStyle = function () {
            var wnd = window;
            wnd.fontsStyle = document.createElement("style");
            wnd.fontsStyle.type = "text/css";
            var doc = document;
            doc.getElementsByTagName("head")[0].appendChild(wnd.fontsStyle);
        };
        FontFamily.registerFont = function (name, src, extra) {
            var ex = extra;
            if (ex == null) {
                ex = '';
            }
            var ct = "@font-face {font-family: '" + name + "'; src: url('" + src + "');" + ex + "}";
            var ih = window.fontsStyle.innerHTML;
            if (ih == null) {
                ih = '';
            }
            window.fontsStyle.innerHTML = ih + ct;
        };
        Object.defineProperty(FontFamily.prototype, "CSS", {
            get: function () {
                return this._css;
            },
            enumerable: true,
            configurable: true
        });
        FontFamily.prototype.apply = function (element) {
            element.style.fontFamily = this._css;
        };
        return FontFamily;
    }());
    FontFamily._arial = new FontFamily("Arial, Helvetica, sans-serif");
    FontFamily.initialized = false;
    cubee.FontFamily = FontFamily;
    var ECursor = (function () {
        function ECursor(_css) {
            this._css = _css;
        }
        Object.defineProperty(ECursor, "AUTO", {
            get: function () {
                return ECursor.auto;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ECursor, "POINTER", {
            get: function () {
                return ECursor.pointer;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ECursor.prototype, "css", {
            get: function () {
                return this._css;
            },
            enumerable: true,
            configurable: true
        });
        return ECursor;
    }());
    ECursor.auto = new ECursor("auto");
    ECursor.pointer = new ECursor("pointer");
    cubee.ECursor = ECursor;
    var EScrollBarPolicy;
    (function (EScrollBarPolicy) {
        EScrollBarPolicy[EScrollBarPolicy["VISIBLE"] = 0] = "VISIBLE";
        EScrollBarPolicy[EScrollBarPolicy["AUTO"] = 1] = "AUTO";
        EScrollBarPolicy[EScrollBarPolicy["HIDDEN"] = 2] = "HIDDEN";
    })(EScrollBarPolicy = cubee.EScrollBarPolicy || (cubee.EScrollBarPolicy = {}));
    var EPictureSizeMode;
    (function (EPictureSizeMode) {
        EPictureSizeMode[EPictureSizeMode["NORMAL"] = 0] = "NORMAL";
        EPictureSizeMode[EPictureSizeMode["CENTER"] = 1] = "CENTER";
        EPictureSizeMode[EPictureSizeMode["STRETCH"] = 2] = "STRETCH";
        EPictureSizeMode[EPictureSizeMode["FILL"] = 3] = "FILL";
        EPictureSizeMode[EPictureSizeMode["ZOOM"] = 4] = "ZOOM";
        EPictureSizeMode[EPictureSizeMode["FIT_WIDTH"] = 5] = "FIT_WIDTH";
        EPictureSizeMode[EPictureSizeMode["FIT_HEIGHT"] = 6] = "FIT_HEIGHT";
    })(EPictureSizeMode = cubee.EPictureSizeMode || (cubee.EPictureSizeMode = {}));
    var Image = (function () {
        function Image(_url) {
            var _this = this;
            this._url = _url;
            this._onLoad = new cubee.Event();
            this._width = 0;
            this._height = 0;
            this._loaded = false;
            if (_url == null) {
                throw "The url parameter can not be null.";
            }
            var e = document.createElement("img");
            e.addEventListener("load", function () {
                _this._width = e.width;
                _this._height = e.height;
                _this._loaded = true;
                _this._onLoad.fireEvent(new cubee.EventArgs(_this));
            });
            e.src = _url;
        }
        Object.defineProperty(Image.prototype, "url", {
            get: function () {
                return this._url;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Image.prototype, "onLoad", {
            get: function () {
                return this._onLoad;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Image.prototype, "width", {
            get: function () {
                return this._width;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Image.prototype, "height", {
            get: function () {
                return this._height;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Image.prototype, "loaded", {
            get: function () {
                return this._loaded;
            },
            enumerable: true,
            configurable: true
        });
        Image.prototype.apply = function (element) {
            element.setAttribute("src", this.url);
        };
        return Image;
    }());
    cubee.Image = Image;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var Rpc = (function () {
        function Rpc() {
        }
        Rpc.call = function (url, method, param, resultHandler, errorHandler) {
            var req = new XMLHttpRequest();
            req.onreadystatechange = function () {
                if (this.readyState == 4) {
                    if (this.status == 200) {
                        var json = this.responseText;
                        var result = JSON.parse(json);
                        resultHandler(result);
                    }
                    else if (this.status > 200 && this.status < 300) {
                        resultHandler(null);
                    }
                    else {
                        var json = this.responseText;
                        var errObj = JSON.parse(json);
                        var msg = errObj.error;
                        if (msg == null) {
                            msg = "<No error message>";
                        }
                        var error = new RpcError(this.status, msg);
                        errorHandler(error);
                    }
                }
            };
            req.open(method, url);
            req.setRequestHeader("Content-Type", "application/json");
            if (param != null) {
                req.send(JSON.stringify(param));
            }
            else {
                req.send();
            }
        };
        return Rpc;
    }());
    cubee.Rpc = Rpc;
    var RpcError = (function () {
        function RpcError(status, message) {
            this.status = status;
            this.message = message;
        }
        return RpcError;
    }());
    cubee.RpcError = RpcError;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var LayoutChildren = (function () {
        function LayoutChildren(parent) {
            this.parent = parent;
            this.children = [];
            this.parent = parent;
        }
        LayoutChildren.prototype.add = function (component) {
            if (component != null) {
                if (component.parent != null) {
                    throw "The component is already a child of a layout.";
                }
                component._setParent(this.parent);
                component.onParentChanged.fireEvent(new cubee.ParentChangedEventArgs(this.parent, component));
            }
            this.children.push(component);
            this.parent._onChildAdded(component);
        };
        LayoutChildren.prototype.insert = function (index, component) {
            var _this = this;
            if (component != null) {
                if (component.parent != null) {
                    throw "The component is already a child of a layout.";
                }
            }
            var newChildren = [];
            this.children.forEach(function (child) {
                newChildren.push(child);
            });
            newChildren.splice(index, 0, component);
            this.clear();
            newChildren.forEach(function (child) {
                _this.add(child);
            });
        };
        LayoutChildren.prototype.removeComponent = function (component) {
            var idx = this.children.indexOf(component);
            if (idx < 0) {
                throw "The given component isn't a child of this layout.";
            }
            this.removeIndex(idx);
        };
        LayoutChildren.prototype.removeIndex = function (index) {
            var removedComponent = this.children[index];
            if (removedComponent != null) {
                removedComponent._setParent(null);
                removedComponent.onParentChanged.fireEvent(new cubee.ParentChangedEventArgs(null, removedComponent));
            }
            this.parent._onChildRemoved(removedComponent, index);
        };
        LayoutChildren.prototype.clear = function () {
            this.children.forEach(function (child) {
                if (child != null) {
                    child._setParent(null);
                    child.onParentChanged.fireEvent(new cubee.ParentChangedEventArgs(null, child));
                }
            });
            this.children = [];
            this.parent._onChildrenCleared();
        };
        LayoutChildren.prototype.get = function (index) {
            return this.children[index];
        };
        LayoutChildren.prototype.indexOf = function (component) {
            return this.children.indexOf(component);
        };
        LayoutChildren.prototype.size = function () {
            return this.children.length;
        };
        return LayoutChildren;
    }());
    cubee.LayoutChildren = LayoutChildren;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var MouseEventTypes = (function () {
        function MouseEventTypes() {
        }
        return MouseEventTypes;
    }());
    MouseEventTypes.MOUSE_DOWN = 0;
    MouseEventTypes.MOUSE_MOVE = 1;
    MouseEventTypes.MOUSE_UP = 2;
    MouseEventTypes.MOUSE_ENTER = 3;
    MouseEventTypes.MOUSE_LEAVE = 4;
    MouseEventTypes.MOUSE_WHEEL = 5;
    cubee.MouseEventTypes = MouseEventTypes;
    var AComponent = (function () {
        function AComponent(rootElement) {
            var _this = this;
            this._translateX = new cubee.NumberProperty(0, false, false);
            this._translateY = new cubee.NumberProperty(0, false, false);
            this._rotate = new cubee.NumberProperty(0.0, false, false);
            this._scaleX = new cubee.NumberProperty(1.0, false, false);
            this._scaleY = new cubee.NumberProperty(1.0, false, false);
            this._transformCenterX = new cubee.NumberProperty(0.5, false, false);
            this._transformCenterY = new cubee.NumberProperty(0.5, false, false);
            this._padding = new cubee.PaddingProperty(null, true, false);
            this._border = new cubee.BorderProperty(null, true, false);
            this._measuredWidth = new cubee.NumberProperty(0, false, true);
            this._measuredHeight = new cubee.NumberProperty(0, false, true);
            this._clientWidth = new cubee.NumberProperty(0, false, true);
            this._clientHeight = new cubee.NumberProperty(0, false, true);
            this._boundsWidth = new cubee.NumberProperty(0, false, true);
            this._boundsHeight = new cubee.NumberProperty(0, false, true);
            this._boundsLeft = new cubee.NumberProperty(0, false, true);
            this._boundsTop = new cubee.NumberProperty(0, false, true);
            this._measuredWidthSetter = new cubee.NumberProperty(0, false, false);
            this._measuredHeightSetter = new cubee.NumberProperty(0, false, false);
            this._clientWidthSetter = new cubee.NumberProperty(0, false, false);
            this._clientHeightSetter = new cubee.NumberProperty(0, false, false);
            this._boundsWidthSetter = new cubee.NumberProperty(0, false, false);
            this._boundsHeightSetter = new cubee.NumberProperty(0, false, false);
            this._boundsLeftSetter = new cubee.NumberProperty(0, false, false);
            this._boundsTopSetter = new cubee.NumberProperty(0, false, false);
            this._cursor = new cubee.Property(cubee.ECursor.AUTO, false, false);
            this._pointerTransparent = new cubee.Property(false, false, false);
            this._handlePointer = new cubee.Property(true, false, false);
            this._visible = new cubee.Property(true, false, false);
            this._enabled = new cubee.Property(true, false, false);
            this._alpha = new cubee.NumberProperty(1.0, false, false);
            this._selectable = new cubee.Property(false, false, false);
            this._minWidth = new cubee.NumberProperty(null, true, false);
            this._minHeight = new cubee.NumberProperty(null, true, false);
            this._maxWidth = new cubee.NumberProperty(null, true, false);
            this._maxHeight = new cubee.NumberProperty(null, true, false);
            this._hovered = new cubee.Property(false, false, true);
            this._hoveredSetter = new cubee.Property(false, false, false);
            this._pressed = new cubee.Property(false, false, true);
            this._pressedSetter = new cubee.Property(false, false, false);
            this._onClick = new cubee.Event();
            this._onMouseDown = new cubee.Event();
            this._onMouseDrag = new cubee.Event();
            this._onMouseMove = new cubee.Event();
            this._onMouseUp = new cubee.Event();
            this._onMouseEnter = new cubee.Event();
            this._onMouseLeave = new cubee.Event();
            this._onMouseWheel = new cubee.Event();
            this._onKeyDown = new cubee.Event();
            this._onKeyPress = new cubee.Event();
            this._onKeyUp = new cubee.Event();
            this._onParentChanged = new cubee.Event();
            this._onContextMenu = new cubee.Event();
            this._left = 0;
            this._top = 0;
            this._needsLayout = true;
            this._transformChangedListener = function (sender) {
                _this.updateTransform();
                _this.requestLayout();
            };
            this._postConstructRunOnce = new cubee.RunOnce(function () {
                _this.postConstruct();
            });
            this._element = rootElement;
            this._element.setAttribute("data-cubee-component", this.getClassName());
            this._element.style.boxSizing = "border-box";
            this._element.setAttribute("draggable", "false");
            this._element.style.position = "absolute";
            this._element.style.outlineStyle = "none";
            this._element.style.outlineWidth = "0px";
            this._element.style.margin = "0px";
            this._element.style.pointerEvents = "all";
            this._translateX.addChangeListener(this._transformChangedListener);
            this._translateY.addChangeListener(this._transformChangedListener);
            this._rotate.addChangeListener(this._transformChangedListener);
            this._scaleX.addChangeListener(this._transformChangedListener);
            this._scaleY.addChangeListener(this._transformChangedListener);
            this._transformCenterX.addChangeListener(this._transformChangedListener);
            this._transformCenterY.addChangeListener(this._transformChangedListener);
            this._hovered.initReadonlyBind(this._hoveredSetter);
            this._pressed.initReadonlyBind(this._pressedSetter);
            this._padding.addChangeListener(function () {
                var p = _this._padding.value;
                if (p == null) {
                    _this._element.style.padding = "0px";
                }
                else {
                    p.apply(_this._element);
                }
                _this.requestLayout();
            });
            this._padding.invalidate();
            this._border.addChangeListener(function () {
                var b = _this._border.value;
                if (b == null) {
                    _this._element.style.removeProperty("borderStyle");
                    _this._element.style.removeProperty("borderColor");
                    _this._element.style.removeProperty("borderWidth");
                    _this._element.style.removeProperty("borderRadius");
                }
                else {
                    b.apply(_this._element);
                }
                _this.requestLayout();
            });
            this._cursor.addChangeListener(function () {
                _this._element.style.cursor = _this.cursor.css;
            });
            this._visible.addChangeListener(function () {
                if (_this._visible.value) {
                    _this._element.style.visibility = "visible";
                }
                else {
                    _this._element.style.visibility = "hidden";
                }
            });
            this._enabled.addChangeListener(function () {
                if (_this._enabled.value) {
                    _this._element.removeAttribute("disabled");
                }
                else {
                    _this._element.setAttribute("disabled", "true");
                }
            });
            this._alpha.addChangeListener(function () {
                _this._element.style.opacity = "" + _this._alpha.value;
            });
            this._selectable.addChangeListener(function () {
                if (_this._selectable.value) {
                    _this._element.style.removeProperty("mozUserSelect");
                    _this._element.style.removeProperty("khtmlUserSelect");
                    _this._element.style.removeProperty("webkitUserSelect");
                    _this._element.style.removeProperty("msUserSelect");
                    _this._element.style.removeProperty("userSelect");
                }
                else {
                    _this._element.style.setProperty("mozUserSelect", "none");
                    _this._element.style.setProperty("khtmlUserSelect", "none");
                    _this._element.style.setProperty("webkitUserSelect", "none");
                    _this._element.style.setProperty("msUserSelect", "none");
                    _this._element.style.setProperty("userSelect", "none");
                }
            });
            this._selectable.invalidate();
            this._minWidth.addChangeListener(function () {
                if (_this._minWidth.value == null) {
                    _this._element.style.removeProperty("minWidth");
                }
                else {
                    _this._element.style.setProperty("minWidth", _this._minWidth.value + "px");
                }
                _this.requestLayout();
            });
            this._minHeight.addChangeListener(function () {
                if (_this._minHeight.value == null) {
                    _this._element.style.removeProperty("minHeight");
                }
                else {
                    _this._element.style.setProperty("minHeight", _this._minHeight.value + "px");
                }
                _this.requestLayout();
            });
            this._maxWidth.addChangeListener(function () {
                if (_this._maxWidth.value == null) {
                    _this._element.style.removeProperty("maxWidth");
                }
                else {
                    _this._element.style.setProperty("maxWidth", _this._maxWidth.value + "px");
                }
                _this.requestLayout();
            });
            this._maxHeight.addChangeListener(function () {
                if (_this._maxHeight.value == null) {
                    _this._element.style.removeProperty("maxHeight");
                }
                else {
                    _this._element.style.setProperty("maxHeight", _this._maxHeight.value + "px");
                }
                _this.requestLayout();
            });
            this._handlePointer.addChangeListener(function () {
                if (!_this._handlePointer.value || _this._pointerTransparent.value) {
                    _this._element.style.setProperty("pointerEvents", "none");
                }
                else {
                    _this._element.style.removeProperty("pointerEvents");
                }
            });
            this._pointerTransparent.addChangeListener(function () {
                if (!_this._handlePointer.value || _this._pointerTransparent.value) {
                    _this._element.style.setProperty("pointerEvents", "none");
                }
                else {
                    _this._element.style.removeProperty("pointerEvents");
                }
            });
            this._measuredWidth.initReadonlyBind(this._measuredWidthSetter);
            this._measuredHeight.initReadonlyBind(this._measuredHeightSetter);
            this._clientWidth.initReadonlyBind(this._clientWidthSetter);
            this._clientHeight.initReadonlyBind(this._clientHeightSetter);
            this._boundsWidth.initReadonlyBind(this._boundsWidthSetter);
            this._boundsHeight.initReadonlyBind(this._boundsHeightSetter);
            this._boundsLeft.initReadonlyBind(this._boundsLeftSetter);
            this._boundsTop.initReadonlyBind(this._boundsTopSetter);
            this._onClick = new cubee.Event(new cubee.HtmlEventListenerCallback(this._element, "click"));
            this._onMouseDown = new cubee.Event(new cubee.HtmlEventListenerCallback(this._element, "mousedown"));
            this._onMouseMove = new cubee.Event(new cubee.HtmlEventListenerCallback(this._element, "mousemove"));
            this._onMouseUp = new cubee.Event(new cubee.HtmlEventListenerCallback(this._element, "mouseup"));
            this._onMouseEnter = new cubee.Event(new cubee.HtmlEventListenerCallback(this._element, "mouseenter"));
            this._onMouseLeave = new cubee.Event(new cubee.HtmlEventListenerCallback(this._element, "mouseleave"));
            this._onMouseWheel = new cubee.Event(new cubee.HtmlEventListenerCallback(this._element, "mousewheel"));
            this._onKeyDown = new cubee.Event(new cubee.HtmlEventListenerCallback(this._element, "keydown"));
            this._onKeyPress = new cubee.Event(new cubee.HtmlEventListenerCallback(this._element, "keypress"));
            this._onKeyUp = new cubee.Event(new cubee.HtmlEventListenerCallback(this._element, "keyup"));
            this._onContextMenu = new cubee.Event(new cubee.HtmlEventListenerCallback(this._element, "contextmenu"));
            this._onMouseEnter.addListener(function () {
                _this._hoveredSetter.value = true;
            });
            this._onMouseLeave.addListener(function () {
                _this._hoveredSetter.value = false;
            });
            this._onMouseDown.addListener(function () {
                _this._pressedSetter.value = true;
            });
            this._onMouseUp.addListener(function () {
                _this._pressedSetter.value = false;
            });
        }
        AComponent.prototype.getClassName = function () {
            var funcNameRegex = /function (.{1,})\(/;
            var results = (funcNameRegex).exec(this["constructor"].toString());
            return (results && results.length > 1) ? results[1] : "";
        };
        AComponent.prototype.invokePostConstruct = function () {
            this._postConstructRunOnce.run();
        };
        AComponent.prototype.postConstruct = function () {
        };
        AComponent.prototype.setCubeePanel = function (cubeePanel) {
            this._cubeePanel = cubeePanel;
        };
        AComponent.prototype.getCubeePanel = function () {
            if (this._cubeePanel != null) {
                return this._cubeePanel;
            }
            else if (this.parent != null) {
                return this.parent.getCubeePanel();
            }
            else {
                return null;
            }
        };
        AComponent.prototype.updateTransform = function () {
            var angle = this._rotate.value;
            angle = angle - (angle | 0);
            angle = angle * 360;
            var angleStr = angle + "deg";
            var centerX = (this._transformCenterX.value * 100) + "%";
            var centerY = (this._transformCenterY.value * 100) + "%";
            var sX = this._scaleX.value.toString();
            var sY = this._scaleY.value.toString();
            this._element.style.transformOrigin = centerX + " " + centerY;
            this._element.style.transform = "translate(" + (this._translateX.value | 0) + "px, " + (this._translateY.value | 0)
                + "px) rotate(" + angleStr + ") scaleX( " + sX + ") scaleY(" + sY + ")";
            this._element.style.backfaceVisibility = "hidden";
        };
        AComponent.prototype.requestLayout = function () {
            if (!this._needsLayout) {
                this._needsLayout = true;
                if (this._parent != null) {
                    this._parent.requestLayout();
                }
                else if (this._cubeePanel != null) {
                    this._cubeePanel.requestLayout();
                }
                else {
                    cubee.Popups._requestLayout();
                }
            }
        };
        AComponent.prototype.measure = function () {
            this.onMeasure();
        };
        AComponent.prototype.onMeasure = function () {
            var cw = this._element.clientWidth;
            var ch = this._element.clientHeight;
            var p = this._padding.value;
            if (p != null) {
                cw = cw - p.left - p.right;
                ch = ch - p.top - p.bottom;
            }
            this._clientWidthSetter.value = cw;
            this._clientHeightSetter.value = ch;
            var mw = this._element.offsetWidth;
            var mh = this._element.offsetHeight;
            this._measuredWidthSetter.value = mw;
            this._measuredHeightSetter.value = mh;
            var tcx = this._transformCenterX.value;
            var tcy = this._transformCenterY.value;
            var bx = 0;
            var by = 0;
            var bw = mw;
            var bh = mh;
            var tl = new cubee.Point2D(0, 0);
            var tr = new cubee.Point2D(mw, 0);
            var br = new cubee.Point2D(mw, mh);
            var bl = new cubee.Point2D(0, mh);
            var cx = (mw * tcx) | 0;
            var cy = (mh * tcy) | 0;
            var rot = this._rotate.value;
            if (rot != 0.0) {
                tl = this.rotatePoint(cx, cy, 0, 0, rot);
                tr = this.rotatePoint(cx, cy, bw, 0, rot);
                br = this.rotatePoint(cx, cy, bw, bh, rot);
                bl = this.rotatePoint(cx, cy, 0, bh, rot);
            }
            var sx = this._scaleX.value;
            var sy = this._scaleY.value;
            if (sx != 1.0 || sy != 1.0) {
                tl = this.scalePoint(cx, cy, tl.x, tl.y, sx, sy);
                tr = this.scalePoint(cx, cy, tr.x, tr.y, sx, sy);
                br = this.scalePoint(cx, cy, br.x, br.y, sx, sy);
                bl = this.scalePoint(cx, cy, bl.x, bl.y, sx, sy);
            }
            var minX = Math.min(Math.min(tl.x, tr.x), Math.min(br.x, bl.x));
            var minY = Math.min(Math.min(tl.y, tr.y), Math.min(br.y, bl.y));
            var maxX = Math.max(Math.max(tl.x, tr.x), Math.max(br.x, bl.x));
            var maxY = Math.max(Math.max(tl.y, tr.y), Math.max(br.y, bl.y));
            bw = maxX - minX;
            bh = maxY - minY;
            bx = minX;
            by = minY;
            this._boundsLeftSetter.value = bx;
            this._boundsTopSetter.value = by;
            this._boundsWidthSetter.value = bw;
            this._boundsHeightSetter.value = bh;
        };
        AComponent.prototype.scalePoint = function (centerX, centerY, pointX, pointY, scaleX, scaleY) {
            var resX = (centerX + ((pointX - centerX) * scaleX)) | 0;
            var resY = (centerY + ((pointY - centerY) * scaleY)) | 0;
            return new cubee.Point2D(resX, resY);
        };
        AComponent.prototype.rotatePoint = function (cx, cy, x, y, angle) {
            angle = (angle * 360) * (Math.PI / 180);
            x = x - cx;
            y = y - cy;
            var sin = Math.sin(angle);
            var cos = Math.cos(angle);
            var rx = ((cos * x) - (sin * y)) | 0;
            var ry = ((sin * x) + (cos * y)) | 0;
            rx = rx + cx;
            ry = ry + cy;
            return new cubee.Point2D(rx, ry);
        };
        Object.defineProperty(AComponent.prototype, "element", {
            get: function () {
                return this._element;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            enumerable: true,
            configurable: true
        });
        AComponent.prototype._setParent = function (parent) {
            this._parent = parent;
        };
        AComponent.prototype.layout = function () {
            this._needsLayout = false;
            this.measure();
        };
        Object.defineProperty(AComponent.prototype, "needsLayout", {
            get: function () {
                return this._needsLayout;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "TranslateX", {
            get: function () {
                return this._translateX;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "translateX", {
            get: function () {
                return this.TranslateX.value;
            },
            set: function (value) {
                this.TranslateX.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "TranslateY", {
            get: function () {
                return this._translateY;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "translateY", {
            get: function () {
                return this.TranslateY.value;
            },
            set: function (value) {
                this.TranslateY.value = value;
            },
            enumerable: true,
            configurable: true
        });
        AComponent.prototype.paddingProperty = function () {
            return this._padding;
        };
        Object.defineProperty(AComponent.prototype, "Padding", {
            get: function () {
                return this.paddingProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "padding", {
            get: function () {
                return this.Padding.value;
            },
            set: function (value) {
                this.Padding.value = value;
            },
            enumerable: true,
            configurable: true
        });
        AComponent.prototype.borderProperty = function () {
            return this._border;
        };
        Object.defineProperty(AComponent.prototype, "Border", {
            get: function () {
                return this.borderProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "border", {
            get: function () {
                return this.Border.value;
            },
            set: function (value) {
                this.Border.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "MeasuredWidth", {
            get: function () {
                return this._measuredWidth;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "measuredWidth", {
            get: function () {
                return this.MeasuredWidth.value;
            },
            set: function (value) {
                this.MeasuredWidth.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "MeasuredHeight", {
            get: function () {
                return this._measuredHeight;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "measuredHeight", {
            get: function () {
                return this.MeasuredHeight.value;
            },
            set: function (value) {
                this.MeasuredHeight.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "ClientWidth", {
            get: function () {
                return this._clientWidth;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "clientWidth", {
            get: function () {
                return this.ClientWidth.value;
            },
            set: function (value) {
                this.ClientWidth.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "ClientHeight", {
            get: function () {
                return this._clientHeight;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "clientHeight", {
            get: function () {
                return this.ClientHeight.value;
            },
            set: function (value) {
                this.ClientHeight.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "BoundsWidth", {
            get: function () {
                return this._boundsWidth;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "boundsWidth", {
            get: function () {
                return this.BoundsWidth.value;
            },
            set: function (value) {
                this.BoundsWidth.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "BoundsHeight", {
            get: function () {
                return this._boundsHeight;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "boundsHeight", {
            get: function () {
                return this.BoundsHeight.value;
            },
            set: function (value) {
                this.BoundsHeight.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "BoundsLeft", {
            get: function () {
                return this._boundsLeft;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "boundsLeft", {
            get: function () {
                return this.BoundsLeft.value;
            },
            set: function (value) {
                this.BoundsLeft.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "BoundsTop", {
            get: function () {
                return this._boundsTop;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "boundsTop", {
            get: function () {
                return this.BoundsTop.value;
            },
            set: function (value) {
                this.BoundsTop.value = value;
            },
            enumerable: true,
            configurable: true
        });
        AComponent.prototype.minWidthProperty = function () {
            return this._minWidth;
        };
        Object.defineProperty(AComponent.prototype, "MinWidth", {
            get: function () {
                return this.minWidthProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "minWidth", {
            get: function () {
                return this.MinWidth.value;
            },
            set: function (value) {
                this.MinWidth.value = value;
            },
            enumerable: true,
            configurable: true
        });
        AComponent.prototype.minHeightProperty = function () {
            return this._minHeight;
        };
        Object.defineProperty(AComponent.prototype, "MinHeight", {
            get: function () {
                return this.minHeightProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "minHeight", {
            get: function () {
                return this.MinHeight.value;
            },
            set: function (value) {
                this.MinHeight.value = value;
            },
            enumerable: true,
            configurable: true
        });
        AComponent.prototype.maxWidthProperty = function () {
            return this._maxWidth;
        };
        Object.defineProperty(AComponent.prototype, "MaxWidth", {
            get: function () {
                return this.maxWidthProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "maxWidth", {
            get: function () {
                return this.MaxWidth.value;
            },
            set: function (value) {
                this.MaxWidth.value = value;
            },
            enumerable: true,
            configurable: true
        });
        AComponent.prototype.maxHeightProperty = function () {
            return this._maxHeight;
        };
        Object.defineProperty(AComponent.prototype, "MaxHeight", {
            get: function () {
                return this.maxHeightProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "maxHeight", {
            get: function () {
                return this.MaxHeight.value;
            },
            set: function (value) {
                this.MaxHeight.value = value;
            },
            enumerable: true,
            configurable: true
        });
        AComponent.prototype.setPosition = function (left, top) {
            this._element.style.left = "" + left + "px";
            this._element.style.top = "" + top + "px";
            this._left = left;
            this._top = top;
        };
        AComponent.prototype._setLeft = function (left) {
            this._element.style.left = "" + left + "px";
            this._left = left;
        };
        AComponent.prototype._setTop = function (top) {
            this._element.style.top = "" + top + "px";
            this._top = top;
        };
        AComponent.prototype.setSize = function (width, height) {
            this._element.style.width = "" + width + "px";
            this._element.style.height = "" + height + "px";
        };
        Object.defineProperty(AComponent.prototype, "Cursor", {
            get: function () {
                return this._cursor;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "cursor", {
            get: function () {
                return this.Cursor.value;
            },
            set: function (value) {
                this.Cursor.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "PointerTransparent", {
            get: function () {
                return this._pointerTransparent;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "pointerTransparent", {
            get: function () {
                return this.PointerTransparent.value;
            },
            set: function (value) {
                this.PointerTransparent.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "Visible", {
            get: function () {
                return this._visible;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "visible", {
            get: function () {
                return this.Visible.value;
            },
            set: function (value) {
                this.Visible.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "onClick", {
            get: function () {
                return this._onClick;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "onContextMenu", {
            get: function () {
                return this._onContextMenu;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "onMouseDown", {
            get: function () {
                return this._onMouseDown;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "onMouseMove", {
            get: function () {
                return this._onMouseMove;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "onMouseUp", {
            get: function () {
                return this._onMouseUp;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "onMouseEnter", {
            get: function () {
                return this._onMouseEnter;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "onMouseLeave", {
            get: function () {
                return this._onMouseLeave;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "onMouseWheel", {
            get: function () {
                return this._onMouseWheel;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "onKeyDown", {
            get: function () {
                return this._onKeyDown;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "onKeyPress", {
            get: function () {
                return this._onKeyPress;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "onKeyUp", {
            get: function () {
                return this._onKeyUp;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "onParentChanged", {
            get: function () {
                return this._onParentChanged;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "Alpha", {
            get: function () {
                return this._alpha;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "alpha", {
            get: function () {
                return this.Alpha.value;
            },
            set: function (value) {
                this.Alpha.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "HandlePointer", {
            get: function () {
                return this._handlePointer;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "handlePointer", {
            get: function () {
                return this.HandlePointer.value;
            },
            set: function (value) {
                this.HandlePointer.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "Enabled", {
            get: function () {
                return this._enabled;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "enabled", {
            get: function () {
                return this.Enabled.value;
            },
            set: function (value) {
                this.Enabled.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "Selectable", {
            get: function () {
                return this._selectable;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "selectable", {
            get: function () {
                return this.Selectable.value;
            },
            set: function (value) {
                this.Selectable.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "left", {
            get: function () {
                return this._left;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "top", {
            get: function () {
                return this._top;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "Rotate", {
            get: function () {
                return this._rotate;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "rotate", {
            get: function () {
                return this.Rotate.value;
            },
            set: function (value) {
                this.Rotate.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "ScaleX", {
            get: function () {
                return this._scaleX;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "scaleX", {
            get: function () {
                return this.ScaleX.value;
            },
            set: function (value) {
                this.ScaleX.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "ScaleY", {
            get: function () {
                return this._scaleY;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "scaleY", {
            get: function () {
                return this.ScaleY.value;
            },
            set: function (value) {
                this.ScaleY.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "TransformCenterX", {
            get: function () {
                return this._transformCenterX;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "transformCenterX", {
            get: function () {
                return this.TransformCenterX.value;
            },
            set: function (value) {
                this.TransformCenterX.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "TransformCenterY", {
            get: function () {
                return this._transformCenterY;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "transformCenterY", {
            get: function () {
                return this.TransformCenterY.value;
            },
            set: function (value) {
                this.TransformCenterY.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "Hovered", {
            get: function () {
                return this._hovered;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "hovered", {
            get: function () {
                return this.Hovered.value;
            },
            set: function (value) {
                this.Hovered.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "Pressed", {
            get: function () {
                return this._pressed;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AComponent.prototype, "pressed", {
            get: function () {
                return this.Pressed.value;
            },
            set: function (value) {
                this.Pressed.value = value;
            },
            enumerable: true,
            configurable: true
        });
        return AComponent;
    }());
    cubee.AComponent = AComponent;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var ALayout = (function (_super) {
        __extends(ALayout, _super);
        function ALayout(element) {
            var _this = _super.call(this, element) || this;
            _this._children = new cubee.LayoutChildren(_this);
            return _this;
        }
        Object.defineProperty(ALayout.prototype, "children_inner", {
            get: function () {
                return this._children;
            },
            enumerable: true,
            configurable: true
        });
        ALayout.prototype.layout = function () {
            this._needsLayout = false;
            for (var i = 0; i < this.children_inner.size(); i++) {
                var child = this.children_inner.get(i);
                if (child != null) {
                    if (child.needsLayout) {
                        child.layout();
                    }
                }
            }
            this.onLayout();
            this.measure();
        };
        ALayout.prototype.getComponentsAtPosition = function (x, y) {
            var res = [];
            this.getComponentsAtPosition_impl(this, x, y, res);
            return res;
        };
        ALayout.prototype.getComponentsAtPosition_impl = function (root, x, y, result) {
            if (x >= 0 && x <= root.boundsWidth && y >= 0 && y <= root.boundsHeight) {
                result.splice(0, 0, root);
                for (var i = 0; i < root.children_inner.size(); i++) {
                    var component = root.children_inner.get(i);
                    if (component == null) {
                        continue;
                    }
                    var tx = x - component.left - component.translateX;
                    var ty = y - component.top - component.translateY;
                    if (component instanceof ALayout) {
                        this.getComponentsAtPosition_impl(component, tx, ty, result);
                    }
                    else {
                        if (tx >= 0 && tx <= component.boundsWidth && y >= 0 && y <= component.boundsHeight) {
                            result.splice(0, 0, component);
                        }
                    }
                }
            }
        };
        ALayout.prototype.setChildLeft = function (child, left) {
            child._setLeft(left);
        };
        ALayout.prototype.setChildTop = function (child, top) {
            child._setTop(top);
        };
        return ALayout;
    }(cubee.AComponent));
    cubee.ALayout = ALayout;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var AUserControl = (function (_super) {
        __extends(AUserControl, _super);
        function AUserControl() {
            var _this = _super.call(this, document.createElement("div")) || this;
            _this._width = new cubee.NumberProperty(null, true, false);
            _this._height = new cubee.NumberProperty(null, true, false);
            _this._background = new cubee.BackgroundProperty(new cubee.ColorBackground(cubee.Color.TRANSPARENT), true, false);
            _this._shadow = new cubee.Property(null, true, false);
            _this._draggable = new cubee.BooleanProperty(false);
            _this.element.style.overflowX = "hidden";
            _this.element.style.overflowY = "hidden";
            _this._width.addChangeListener(function () {
                if (_this._width.value == null) {
                    _this.element.style.removeProperty("width");
                }
                else {
                    _this.element.style.width = "" + _this._width.value + "px";
                }
                _this.requestLayout();
            });
            _this._width.invalidate();
            _this._height.addChangeListener(function () {
                if (_this._height.value == null) {
                    _this.element.style.removeProperty("height");
                }
                else {
                    _this.element.style.height = "" + _this._height.value + "px";
                }
                _this.requestLayout();
            });
            _this._height.invalidate();
            _this._background.addChangeListener(function () {
                _this.element.style.removeProperty("backgroundColor");
                _this.element.style.removeProperty("backgroundImage");
                _this.element.style.removeProperty("background");
                if (_this._background.value != null) {
                    _this._background.value.apply(_this.element);
                }
            });
            _this._background.invalidate();
            _this._shadow.addChangeListener(function () {
                if (_this._shadow.value == null) {
                    _this.element.style.removeProperty("boxShadow");
                }
                else {
                    _this._shadow.value.apply(_this.element);
                }
            });
            _this._draggable.addChangeListener(function () {
                if (_this._draggable.value) {
                    _this.element.setAttribute("draggable", "true");
                }
                else {
                    _this.element.setAttribute("draggable", "false");
                }
            });
            _this._draggable.invalidate();
            return _this;
        }
        AUserControl.prototype.widthProperty = function () {
            return this._width;
        };
        Object.defineProperty(AUserControl.prototype, "Width", {
            get: function () {
                return this.widthProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AUserControl.prototype, "width", {
            get: function () {
                return this.Width.value;
            },
            set: function (value) {
                this.Width.value = value;
            },
            enumerable: true,
            configurable: true
        });
        AUserControl.prototype.heightProperty = function () {
            return this._height;
        };
        Object.defineProperty(AUserControl.prototype, "Height", {
            get: function () {
                return this.heightProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AUserControl.prototype, "height", {
            get: function () {
                return this.Height.value;
            },
            set: function (value) {
                this.Height.value = value;
            },
            enumerable: true,
            configurable: true
        });
        AUserControl.prototype.backgroundProperty = function () {
            return this._background;
        };
        Object.defineProperty(AUserControl.prototype, "Background", {
            get: function () {
                return this.backgroundProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AUserControl.prototype, "background", {
            get: function () {
                return this.Background.value;
            },
            set: function (value) {
                this.Background.value = value;
            },
            enumerable: true,
            configurable: true
        });
        AUserControl.prototype.shadowProperty = function () {
            return this._shadow;
        };
        Object.defineProperty(AUserControl.prototype, "Shadow", {
            get: function () {
                return this.shadowProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AUserControl.prototype, "shadow", {
            get: function () {
                return this.Shadow.value;
            },
            set: function (value) {
                this.Shadow.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AUserControl.prototype, "Draggable", {
            get: function () {
                return this._draggable;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AUserControl.prototype, "draggable", {
            get: function () {
                return this.Draggable.value;
            },
            set: function (value) {
                this.Draggable.value = value;
            },
            enumerable: true,
            configurable: true
        });
        AUserControl.prototype._onChildAdded = function (child) {
            if (child != null) {
                this.element.appendChild(child.element);
            }
            this.requestLayout();
        };
        AUserControl.prototype._onChildRemoved = function (child, index) {
            if (child != null) {
                this.element.removeChild(child.element);
            }
            this.requestLayout();
        };
        AUserControl.prototype._onChildrenCleared = function () {
            var root = this.element;
            var e = this.element.firstElementChild;
            while (e != null) {
                root.removeChild(e);
                e = root.firstElementChild;
            }
            this.requestLayout();
        };
        AUserControl.prototype.onLayout = function () {
            if (this.width != null && this.height != null) {
                this.setSize(this.width, this.height);
            }
            else {
                var maxW = 0;
                var maxH = 0;
                for (var i = 0; i < this.children_inner.size(); i++) {
                    var component = this.children_inner.get(i);
                    var cW = component.boundsWidth + component.boundsLeft + component.translateX;
                    var cH = component.boundsHeight + component.boundsTop + component.translateY;
                    if (cW > maxW) {
                        maxW = cW;
                    }
                    if (cH > maxH) {
                        maxH = cH;
                    }
                }
                if (this.width != null) {
                    maxW = this.height;
                }
                else {
                    if (this.padding != null) {
                        maxW += this.padding.left + this.padding.right;
                    }
                    if (this.border != null) {
                        maxW += this.border.leftWidth + this.border.rightWidth;
                    }
                }
                if (this.height != null) {
                    maxH = this.height;
                }
                else {
                    if (this.padding != null) {
                        maxH += this.padding.top + this.padding.bottom;
                    }
                    if (this.border != null) {
                        maxH += this.border.topWidth + this.border.bottomWidth;
                    }
                }
                this.setSize(maxW, maxH);
            }
        };
        return AUserControl;
    }(cubee.ALayout));
    cubee.AUserControl = AUserControl;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var AView = (function (_super) {
        __extends(AView, _super);
        function AView(_model) {
            var _this = _super.call(this) || this;
            _this._model = _model;
            return _this;
        }
        Object.defineProperty(AView.prototype, "model", {
            get: function () {
                return this._model;
            },
            enumerable: true,
            configurable: true
        });
        return AView;
    }(cubee.AUserControl));
    cubee.AView = AView;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var Panel = (function (_super) {
        __extends(Panel, _super);
        function Panel() {
            return _super.apply(this, arguments) || this;
        }
        Panel.prototype.widthProperty = function () {
            return _super.prototype.widthProperty.call(this);
        };
        Object.defineProperty(Panel.prototype, "Width", {
            get: function () {
                return this.widthProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Panel.prototype, "width", {
            get: function () {
                return this.Width.value;
            },
            set: function (value) {
                this.Width.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Panel.prototype.heightProperty = function () {
            return _super.prototype.heightProperty.call(this);
        };
        Object.defineProperty(Panel.prototype, "Height", {
            get: function () {
                return this.heightProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Panel.prototype, "height", {
            get: function () {
                return this.Height.value;
            },
            set: function (value) {
                this.Height.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Panel.prototype.backgroundProperty = function () {
            return _super.prototype.backgroundProperty.call(this);
        };
        Object.defineProperty(Panel.prototype, "Background", {
            get: function () {
                return this.backgroundProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Panel.prototype, "background", {
            get: function () {
                return this.Background.value;
            },
            set: function (value) {
                this.Background.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Panel.prototype.shadowProperty = function () {
            return _super.prototype.shadowProperty.call(this);
        };
        Object.defineProperty(Panel.prototype, "Shadow", {
            get: function () {
                return this.shadowProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Panel.prototype, "shadow", {
            get: function () {
                return this.Shadow.value;
            },
            set: function (value) {
                this.Shadow.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Panel.prototype, "Padding", {
            get: function () {
                return this.paddingProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Panel.prototype, "padding", {
            get: function () {
                return this.Padding.value;
            },
            set: function (value) {
                this.Padding.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Panel.prototype, "Border", {
            get: function () {
                return this.borderProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Panel.prototype, "border", {
            get: function () {
                return this.Border.value;
            },
            set: function (value) {
                this.Border.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Panel.prototype, "children", {
            get: function () {
                return this.children_inner;
            },
            enumerable: true,
            configurable: true
        });
        return Panel;
    }(cubee.AUserControl));
    cubee.Panel = Panel;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var HBox = (function (_super) {
        __extends(HBox, _super);
        function HBox() {
            var _this = _super.call(this, document.createElement("div")) || this;
            _this._height = new cubee.NumberProperty(null, true, false);
            _this._cellWidths = [];
            _this._hAligns = [];
            _this._vAligns = [];
            _this.element.style.overflow = "hidden";
            _this.pointerTransparent = true;
            _this._height.addChangeListener(function () {
                _this.requestLayout();
            });
            return _this;
        }
        HBox.prototype.setCellWidth = function (indexOrComponent, cellHeight) {
            if (indexOrComponent instanceof cubee.AComponent) {
                this.setCellWidth(this.children_inner.indexOf(indexOrComponent), cellHeight);
                return;
            }
            this.setInList(this._cellWidths, indexOrComponent, cellHeight);
            this.requestLayout();
        };
        HBox.prototype.getCellWidth = function (indexOrComponent) {
            if (indexOrComponent instanceof cubee.AComponent) {
                return this.getCellWidth(this.children_inner.indexOf(indexOrComponent));
            }
            return this.getFromList(this._cellWidths, indexOrComponent);
        };
        HBox.prototype.setCellHAlign = function (indexOrComponent, hAlign) {
            if (indexOrComponent instanceof cubee.AComponent) {
                this.setCellHAlign(this.children_inner.indexOf(indexOrComponent), hAlign);
            }
            this.setInList(this._hAligns, indexOrComponent, hAlign);
            this.requestLayout();
        };
        HBox.prototype.getCellHAlign = function (indexOrComponent) {
            if (indexOrComponent instanceof cubee.AComponent) {
                return this.getCellHAlign(this.children_inner.indexOf(indexOrComponent));
            }
            return this.getFromList(this._hAligns, indexOrComponent);
        };
        HBox.prototype.setCellVAlign = function (indexOrComponent, vAlign) {
            if (indexOrComponent instanceof cubee.AComponent) {
                this.setCellVAlign(this.children_inner.indexOf(indexOrComponent), vAlign);
            }
            this.setInList(this._vAligns, indexOrComponent, vAlign);
            this.requestLayout();
        };
        HBox.prototype.getCellVAlign = function (indexOrComponent) {
            if (indexOrComponent instanceof cubee.AComponent) {
                return this.getCellVAlign(this.children_inner.indexOf(indexOrComponent));
            }
            return this.getFromList(this._vAligns, indexOrComponent);
        };
        HBox.prototype.setLastCellHAlign = function (hAlign) {
            this.setCellHAlign(this.children_inner.size() - 1, hAlign);
        };
        HBox.prototype.setLastCellVAlign = function (vAlign) {
            this.setCellVAlign(this.children_inner.size() - 1, vAlign);
        };
        HBox.prototype.setLastCellWidth = function (width) {
            this.setCellWidth(this.children_inner.size() - 1, width);
        };
        HBox.prototype.addEmptyCell = function (width) {
            this.children_inner.add(null);
            this.setCellWidth(this.children_inner.size() - 1, width);
        };
        HBox.prototype._onChildAdded = function (child) {
            if (child != null) {
                this.element.appendChild(child.element);
            }
            this.requestLayout();
        };
        HBox.prototype._onChildRemoved = function (child, index) {
            if (child != null) {
                this.element.removeChild(child.element);
            }
            this.removeFromList(this._hAligns, index);
            this.removeFromList(this._vAligns, index);
            this.removeFromList(this._cellWidths, index);
            this.requestLayout();
        };
        HBox.prototype._onChildrenCleared = function () {
            var root = this.element;
            var e = this.element.firstElementChild;
            while (e != null) {
                root.removeChild(e);
                e = root.firstElementChild;
            }
            this._hAligns = [];
            this._vAligns = [];
            this._cellWidths = [];
            this.requestLayout();
        };
        HBox.prototype.onLayout = function () {
            var maxHeight = -1;
            if (this.height != null) {
                maxHeight = this.height;
            }
            var actW = 0;
            var maxH = 0;
            for (var i = 0; i < this.children.size(); i++) {
                var childX = 0;
                var child = this.children.get(i);
                var cellW = this.getCellWidth(i);
                var hAlign = this.getCellHAlign(i);
                var realCellW = -1;
                if (cellW != null) {
                    realCellW = cellW;
                }
                if (child == null) {
                    if (realCellW > 0) {
                        actW += realCellW;
                    }
                }
                else {
                    var cw = child.boundsWidth;
                    var ch = child.boundsHeight;
                    var cl = child.translateX;
                    var ct = child.translateY;
                    var calculatedCellW = realCellW;
                    if (calculatedCellW < 0) {
                        calculatedCellW = cw + cl;
                    }
                    else if (calculatedCellW < cw) {
                        calculatedCellW = cw;
                    }
                    childX = actW - child.translateX;
                    if (hAlign == cubee.EHAlign.CENTER) {
                        childX += (calculatedCellW - cw) / 2;
                    }
                    else if (hAlign == cubee.EHAlign.RIGHT) {
                        childX += (calculatedCellW - cw);
                    }
                    child._setLeft(childX);
                    if (ch + ct > maxH) {
                        maxH = ch + ct;
                    }
                    actW += calculatedCellW;
                }
            }
            var realHeight = maxH;
            if (maxHeight > -1) {
                realHeight = maxHeight;
            }
            for (var i = 0; i < this.children.size(); i++) {
                var childY = 0;
                var child = this.children.get(i);
                if (child == null) {
                    continue;
                }
                var vAlign = this.getCellVAlign(i);
                var ch = child.boundsHeight;
                if (vAlign == cubee.EVAlign.MIDDLE) {
                    childY += (realHeight - ch) / 2;
                }
                else if (vAlign == cubee.EVAlign.BOTTOM) {
                    childY += (realHeight - ch);
                }
                child._setTop(childY);
            }
            this.setSize(actW, realHeight);
        };
        HBox.prototype.setInList = function (list, index, value) {
            while (list.length < index) {
                list.push(null);
            }
            list[index] = value;
        };
        HBox.prototype.getFromList = function (list, index) {
            if (list.length > index) {
                return list[index];
            }
            return null;
        };
        HBox.prototype.removeFromList = function (list, index) {
            if (list.length > index) {
                list.splice(index, 1);
            }
        };
        Object.defineProperty(HBox.prototype, "children", {
            get: function () {
                return this.children_inner;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(HBox.prototype, "Height", {
            get: function () {
                return this._height;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(HBox.prototype, "height", {
            get: function () {
                return this.Height.value;
            },
            set: function (value) {
                this.Height.value = value;
            },
            enumerable: true,
            configurable: true
        });
        return HBox;
    }(cubee.ALayout));
    cubee.HBox = HBox;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var VBox = (function (_super) {
        __extends(VBox, _super);
        function VBox() {
            var _this = _super.call(this, document.createElement("div")) || this;
            _this._width = new cubee.NumberProperty(null, true, false);
            _this._cellHeights = [];
            _this._hAligns = [];
            _this._vAligns = [];
            _this.element.style.overflow = "hidden";
            _this.pointerTransparent = true;
            _this._width.addChangeListener(function () {
                _this.requestLayout();
            });
            return _this;
        }
        Object.defineProperty(VBox.prototype, "children", {
            get: function () {
                return this.children_inner;
            },
            enumerable: true,
            configurable: true
        });
        VBox.prototype.setCellHeight = function (indexOrComponent, cellHeight) {
            if (indexOrComponent instanceof cubee.AComponent) {
                this.setCellHeight(this.children.indexOf(indexOrComponent), cellHeight);
                return;
            }
            this.setInList(this._cellHeights, indexOrComponent, cellHeight);
            this.requestLayout();
        };
        VBox.prototype.setInList = function (list, index, value) {
            while (list.length < index) {
                list.push(null);
            }
            list[index] = value;
        };
        VBox.prototype.getFromList = function (list, index) {
            if (list.length > index) {
                return list[index];
            }
            return null;
        };
        VBox.prototype.removeFromList = function (list, index) {
            if (list.length > index) {
                list.splice(index, 1);
            }
        };
        VBox.prototype.getCellHeight = function (indexOrComponent) {
            if (indexOrComponent instanceof cubee.AComponent) {
                return this.getCellHeight(this.children.indexOf(indexOrComponent));
            }
            return this.getFromList(this._cellHeights, indexOrComponent);
        };
        VBox.prototype.setCellHAlign = function (indexOrComponent, hAlign) {
            if (indexOrComponent instanceof cubee.AComponent) {
                this.setCellHAlign(this.children.indexOf(indexOrComponent), hAlign);
            }
            this.setInList(this._hAligns, indexOrComponent, hAlign);
            this.requestLayout();
        };
        VBox.prototype.getCellHAlign = function (indexOrComponent) {
            if (indexOrComponent instanceof cubee.AComponent) {
                return this.getCellHAlign(this.children.indexOf(indexOrComponent));
            }
            return this.getFromList(this._hAligns, indexOrComponent);
        };
        VBox.prototype.setCellVAlign = function (indexOrComponent, vAlign) {
            if (indexOrComponent instanceof cubee.AComponent) {
                this.setCellVAlign(this.children.indexOf(indexOrComponent), vAlign);
            }
            this.setInList(this._vAligns, indexOrComponent, vAlign);
            this.requestLayout();
        };
        VBox.prototype.getCellVAlign = function (indexOrComponent) {
            if (indexOrComponent instanceof cubee.AComponent) {
                return this.getCellVAlign(this.children.indexOf(indexOrComponent));
            }
            this.getFromList(this._vAligns, indexOrComponent);
        };
        VBox.prototype.setLastCellHAlign = function (hAlign) {
            this.setCellHAlign(this.children.size() - 1, hAlign);
        };
        VBox.prototype.setLastCellVAlign = function (vAlign) {
            this.setCellVAlign(this.children.size() - 1, vAlign);
        };
        VBox.prototype.setLastCellHeight = function (height) {
            this.setCellHeight(this.children.size() - 1, height);
        };
        VBox.prototype.addEmptyCell = function (height) {
            this.children.add(null);
            this.setCellHeight(this.children.size() - 1, height);
        };
        Object.defineProperty(VBox.prototype, "Width", {
            get: function () {
                return this._width;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VBox.prototype, "width", {
            get: function () {
                return this.Width.value;
            },
            set: function (value) {
                this.Width.value = value;
            },
            enumerable: true,
            configurable: true
        });
        VBox.prototype._onChildAdded = function (child) {
            if (child != null) {
                this.element.appendChild(child.element);
            }
            this.requestLayout();
        };
        VBox.prototype._onChildRemoved = function (child, index) {
            if (child != null) {
                this.element.removeChild(child.element);
            }
            this.removeFromList(this._hAligns, index);
            this.removeFromList(this._vAligns, index);
            this.removeFromList(this._cellHeights, index);
            this.requestLayout();
        };
        VBox.prototype._onChildrenCleared = function () {
            var root = this.element;
            var e = this.element.firstElementChild;
            while (e != null) {
                root.removeChild(e);
                e = root.firstElementChild;
            }
            this._hAligns = [];
            this._vAligns = [];
            this._cellHeights = [];
            this.requestLayout();
        };
        VBox.prototype.onLayout = function () {
            var maxWidth = -1;
            if (this.width != null) {
                maxWidth = this.width;
            }
            var actH = 0;
            var maxW = 0;
            for (var i = 0; i < this.children.size(); i++) {
                var childY = 0;
                var child = this.children.get(i);
                var cellH = this.getCellHeight(i);
                var vAlign = this.getCellVAlign(i);
                var realCellH = -1;
                if (cellH != null) {
                    realCellH = cellH;
                }
                if (child == null) {
                    if (realCellH > 0) {
                        actH += realCellH;
                    }
                }
                else {
                    var cw = child.boundsWidth;
                    var ch = child.boundsHeight;
                    var cl = child.translateX;
                    var ct = child.translateY;
                    var calculatedCellH = realCellH;
                    if (calculatedCellH < 0) {
                        calculatedCellH = ch + ct;
                    }
                    else if (calculatedCellH < ch) {
                        calculatedCellH = ch;
                    }
                    childY = actH - child.translateY;
                    if (vAlign == cubee.EVAlign.MIDDLE) {
                        childY += (calculatedCellH - ch) / 2;
                    }
                    else if (vAlign == cubee.EVAlign.BOTTOM) {
                        childY += (calculatedCellH - ch);
                    }
                    child._setTop(childY);
                    if (cw + cl > maxW) {
                        maxW = cw + cl;
                    }
                    actH += calculatedCellH;
                }
            }
            var realWidth = maxW;
            if (maxWidth > -1) {
                realWidth = maxWidth;
            }
            for (var i = 0; i < this.children.size(); i++) {
                var childX = 0;
                var child = this.children.get(i);
                if (child == null) {
                    continue;
                }
                var hAlign = this.getCellHAlign(i);
                var cw = child.boundsWidth;
                if (hAlign == cubee.EHAlign.CENTER) {
                    childX = (realWidth - cw) / 2;
                }
                else if (hAlign == cubee.EHAlign.RIGHT) {
                    childX = (realWidth - cw);
                }
                child._setLeft(childX);
            }
            this.setSize(realWidth, actH);
        };
        return VBox;
    }(cubee.ALayout));
    cubee.VBox = VBox;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var ScrollBox = (function (_super) {
        __extends(ScrollBox, _super);
        function ScrollBox() {
            var _this = _super.call(this) || this;
            _this._content = new cubee.Property(null);
            _this._hScrollPolicy = new cubee.Property(cubee.EScrollBarPolicy.AUTO, false);
            _this._vScrollPolicy = new cubee.Property(cubee.EScrollBarPolicy.AUTO, false);
            _this._scrollWidth = new cubee.NumberProperty(0, false, true);
            _this._scrollHeight = new cubee.NumberProperty(0, false, true);
            _this._hScrollPos = new cubee.NumberProperty(0, false, false);
            _this._vScrollPos = new cubee.NumberProperty(0, false, false);
            _this._maxHScrollPos = new cubee.NumberProperty(0, false, true);
            _this._maxVScrollPos = new cubee.NumberProperty(0, false, true);
            _this._maxHScrollPosWriter = new cubee.NumberProperty(0, false, false);
            _this._maxVScrollPosWriter = new cubee.NumberProperty(0, false, false);
            _this._calculateScrollWidthExp = new cubee.Expression(function () {
                if (_this.content == null) {
                    return 0;
                }
                return _this.content.boundsWidth;
            }, _this._content);
            _this._calculateScrollHeightExp = new cubee.Expression(function () {
                if (_this.content == null) {
                    return 0;
                }
                return _this.content.boundsHeight;
            }, _this._content);
            _this.element.style.removeProperty("overflow");
            _this._scrollWidth.initReadonlyBind(_this._calculateScrollWidthExp);
            _this._scrollHeight.initReadonlyBind(_this._calculateScrollHeightExp);
            _this._maxHScrollPos.initReadonlyBind(_this._maxHScrollPosWriter);
            _this._maxVScrollPos.initReadonlyBind(_this._maxVScrollPosWriter);
            _this._maxHScrollPosWriter.bind(new cubee.Expression(function () {
                return (_this.scrollWidth - _this.clientWidth);
            }, _this.ClientWidth, _this._scrollWidth));
            _this._maxVScrollPosWriter.bind(new cubee.Expression(function () {
                return (_this.scrollHeight - _this.clientHeight);
            }, _this.ClientHeight, _this._scrollHeight));
            _this._content.addChangeListener(function () {
                _this.children_inner.clear();
                _this._calculateScrollWidthExp.unbindAll();
                _this._calculateScrollWidthExp.bind(_this._content);
                if (_this._content.value != null) {
                    _this._calculateScrollWidthExp.bind(_this._content.value.BoundsWidth);
                }
                _this._calculateScrollHeightExp.unbindAll();
                _this._calculateScrollHeightExp.bind(_this._content);
                if (_this._content.value != null) {
                    _this._calculateScrollHeightExp.bind(_this._content.value.BoundsHeight);
                }
                if (_this._content.value != null) {
                    _this.children_inner.add(_this._content.value);
                }
            });
            _this.Content.invalidate();
            _this.element.addEventListener("scroll", function (evt) {
                _this.hScrollPos = _this.element.scrollLeft;
                _this.vScrollPos = _this.element.scrollTop;
            });
            _this._hScrollPos.addChangeListener(function () {
                _this.element.scrollLeft = _this.hScrollPos;
            });
            _this._hScrollPos.invalidate();
            _this._vScrollPos.addChangeListener(function () {
                _this.element.scrollTop = _this.vScrollPos;
            });
            _this._vScrollPos.invalidate();
            _this._hScrollPolicy.addChangeListener(function () {
                if (_this.hScrollPolicy == cubee.EScrollBarPolicy.AUTO) {
                    _this.element.style.overflowX = "auto";
                }
                else if (_this.hScrollPolicy == cubee.EScrollBarPolicy.HIDDEN) {
                    _this.element.style.overflowX = "hidden";
                }
                else if (_this.hScrollPolicy == cubee.EScrollBarPolicy.VISIBLE) {
                    _this.element.style.overflowX = "scroll";
                }
            });
            _this._hScrollPolicy.invalidate();
            _this._vScrollPolicy.addChangeListener(function () {
                if (_this.vScrollPolicy == cubee.EScrollBarPolicy.AUTO) {
                    _this.element.style.overflowY = "auto";
                }
                else if (_this.vScrollPolicy == cubee.EScrollBarPolicy.HIDDEN) {
                    _this.element.style.overflowY = "hidden";
                }
                else if (_this.vScrollPolicy == cubee.EScrollBarPolicy.VISIBLE) {
                    _this.element.style.overflowY = "scroll";
                }
            });
            _this._vScrollPolicy.invalidate();
            return _this;
        }
        ScrollBox.prototype.widthProperty = function () {
            return _super.prototype.widthProperty.call(this);
        };
        Object.defineProperty(ScrollBox.prototype, "Width", {
            get: function () {
                return this.widthProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "width", {
            get: function () {
                return this.Width.value;
            },
            set: function (value) {
                this.Width.value = value;
            },
            enumerable: true,
            configurable: true
        });
        ScrollBox.prototype.heightProperty = function () {
            return _super.prototype.heightProperty.call(this);
        };
        Object.defineProperty(ScrollBox.prototype, "Height", {
            get: function () {
                return this.heightProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "height", {
            get: function () {
                return this.Height.value;
            },
            set: function (value) {
                this.Height.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "Content", {
            get: function () {
                return this._content;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "content", {
            get: function () {
                return this.Content.value;
            },
            set: function (value) {
                this.Content.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "HScrollPolicy", {
            get: function () {
                return this._hScrollPolicy;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "hScrollPolicy", {
            get: function () {
                return this.HScrollPolicy.value;
            },
            set: function (value) {
                this.HScrollPolicy.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "VScrollPolicy", {
            get: function () {
                return this._vScrollPolicy;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "vScrollPolicy", {
            get: function () {
                return this.VScrollPolicy.value;
            },
            set: function (value) {
                this.VScrollPolicy.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "ScrollWidth", {
            get: function () {
                return this._scrollWidth;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "scrollWidth", {
            get: function () {
                return this.ScrollWidth.value;
            },
            set: function (value) {
                this.ScrollWidth.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "ScrollHeight", {
            get: function () {
                return this._scrollHeight;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "scrollHeight", {
            get: function () {
                return this.ScrollHeight.value;
            },
            set: function (value) {
                this.ScrollHeight.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "HScrollPos", {
            get: function () {
                return this._hScrollPos;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "hScrollPos", {
            get: function () {
                return this.HScrollPos.value;
            },
            set: function (value) {
                this.HScrollPos.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "VScrollPos", {
            get: function () {
                return this._vScrollPos;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "vScrollPos", {
            get: function () {
                return this.VScrollPos.value;
            },
            set: function (value) {
                this.VScrollPos.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "MaxHScrollPos", {
            get: function () {
                return this._maxHScrollPos;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "maxHScrollPos", {
            get: function () {
                return this.MaxHScrollPos.value;
            },
            set: function (value) {
                this.MaxHScrollPos.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "MaxVScrollPos", {
            get: function () {
                return this._maxVScrollPos;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ScrollBox.prototype, "maxVScrollPos", {
            get: function () {
                return this.MaxVScrollPos.value;
            },
            set: function (value) {
                this.MaxVScrollPos.value = value;
            },
            enumerable: true,
            configurable: true
        });
        return ScrollBox;
    }(cubee.AUserControl));
    cubee.ScrollBox = ScrollBox;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var Label = (function (_super) {
        __extends(Label, _super);
        function Label() {
            var _this = _super.call(this, document.createElement("div")) || this;
            _this._width = new cubee.NumberProperty(null, true, false);
            _this._height = new cubee.NumberProperty(null, true, false);
            _this._text = new cubee.StringProperty("", false, false);
            _this._textOverflow = new cubee.Property(cubee.ETextOverflow.CLIP, false, false);
            _this._foreColor = new cubee.ColorProperty(cubee.Color.BLACK, true, false);
            _this._textAlign = new cubee.Property(cubee.ETextAlign.LEFT, false, false);
            _this._verticalAlign = new cubee.Property(cubee.EVAlign.TOP, false, false);
            _this._italic = new cubee.BooleanProperty(false, false, false);
            _this._underline = new cubee.BooleanProperty(false, false, false);
            _this._fontSize = new cubee.NumberProperty(12, false, false);
            _this._fontFamily = new cubee.Property(cubee.FontFamily.Arial, false, false);
            _this._fontWeight = new cubee.Property(400, false, false, { validate: function (value) {
                    if (value < 901 && value > 1 && value % 100 == 0) {
                        return value;
                    }
                    return 400;
                } });
            _this._width.addChangeListener(function () {
                if (_this.width == null) {
                    _this.element.style.whiteSpace = "nowrap";
                    _this.element.style.overflowX = "visible";
                    _this.element.style.removeProperty("width");
                }
                else {
                    _this.element.style.whiteSpace = "normal";
                    _this.element.style.overflowX = "hidden";
                    _this.element.style.width = _this.width + "px";
                }
                _this.requestLayout();
            });
            _this._width.invalidate();
            _this._height.addChangeListener(function () {
                if (_this.height == null) {
                    _this.element.style.removeProperty("height");
                    _this.element.style.overflowY = "visible";
                }
                else {
                    _this.element.style.height = _this.height + "px";
                    _this.element.style.overflowY = "hidden";
                }
                _this.requestLayout();
            });
            _this._height.invalidate();
            _this._text.addChangeListener(function () {
                _this.element.innerHTML = _this.text;
                _this.requestLayout();
            });
            _this._text.invalidate();
            _this._textOverflow.addChangeListener(function () {
                _this.textOverflow.apply(_this.element);
                if (_this.textOverflow == cubee.ETextOverflow.ELLIPSIS) {
                    _this.element.style.whiteSpace = "nowrap";
                    _this.element.style.overflow = "hidden";
                }
                else {
                    _this.element.style.removeProperty("whiteSpace");
                    _this._width.invalidate();
                    _this._height.invalidate();
                }
                _this.requestLayout();
            });
            _this._textOverflow.invalidate();
            _this._foreColor.addChangeListener(function () {
                if (_this.foreColor == null) {
                    _this.element.style.color = "rgba(0,0,0,0.0)";
                }
                else {
                    _this.element.style.color = _this.foreColor.toCSS();
                }
            });
            _this._foreColor.invalidate();
            _this._textAlign.addChangeListener(function () {
                _this.textAlign.apply(_this.element);
            });
            _this._textAlign.invalidate();
            _this._verticalAlign.addChangeListener(function () {
                var ta = _this.verticalAlign;
                if (ta == cubee.EVAlign.TOP) {
                    _this.element.style.verticalAlign = "top";
                }
                else if (ta == cubee.EVAlign.MIDDLE) {
                    _this.element.style.verticalAlign = "middle";
                }
                else if (ta == cubee.EVAlign.BOTTOM) {
                    _this.element.style.verticalAlign = "bottom";
                }
            });
            _this._verticalAlign.invalidate();
            _this._underline.addChangeListener(function () {
                if (_this.underline) {
                    _this.element.style.textDecoration = "underline";
                }
                else {
                    _this.element.style.textDecoration = "none";
                }
                _this.requestLayout();
            });
            _this._underline.invalidate();
            _this._fontWeight.addChangeListener(function () {
                _this.element.style.fontWeight = "" + (_this._fontWeight.value | 0);
                _this.requestLayout();
            });
            _this._fontWeight.invalidate();
            _this._italic.addChangeListener(function () {
                if (_this.italic) {
                    _this.element.style.fontStyle = "italic";
                }
                else {
                    _this.element.style.fontStyle = "normal";
                }
                _this.requestLayout();
            });
            _this._italic.invalidate();
            _this._fontSize.addChangeListener(function () {
                _this.element.style.fontSize = _this.fontSize + "px";
                _this.requestLayout();
            });
            _this._fontSize.invalidate();
            _this._fontFamily.addChangeListener(function () {
                _this.fontFamily.apply(_this.element);
                _this.requestLayout();
            });
            _this._fontFamily.invalidate();
            return _this;
        }
        Object.defineProperty(Label.prototype, "Width", {
            get: function () {
                return this._width;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "width", {
            get: function () {
                return this.Width.value;
            },
            set: function (value) {
                this.Width.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "Height", {
            get: function () {
                return this._height;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "height", {
            get: function () {
                return this.Height.value;
            },
            set: function (value) {
                this.Height.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "Text", {
            get: function () {
                return this._text;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "text", {
            get: function () {
                return this.Text.value;
            },
            set: function (value) {
                this.Text.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "TextOverflow", {
            get: function () {
                return this._textOverflow;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "textOverflow", {
            get: function () {
                return this.TextOverflow.value;
            },
            set: function (value) {
                this.TextOverflow.value = value;
                this.Padding;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "ForeColor", {
            get: function () {
                return this._foreColor;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "foreColor", {
            get: function () {
                return this.ForeColor.value;
            },
            set: function (value) {
                this.ForeColor.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "VerticalAlign", {
            get: function () {
                return this._verticalAlign;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "verticalAlign", {
            get: function () {
                return this.VerticalAlign.value;
            },
            set: function (value) {
                this.VerticalAlign.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "FontWeight", {
            get: function () {
                return this._fontWeight;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "fontWeight", {
            get: function () {
                return this.FontWeight.value;
            },
            set: function (value) {
                this.FontWeight.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "Italic", {
            get: function () {
                return this._italic;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "italic", {
            get: function () {
                return this.Italic.value;
            },
            set: function (value) {
                this.Italic.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "Underline", {
            get: function () {
                return this._underline;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "underline", {
            get: function () {
                return this.Underline.value;
            },
            set: function (value) {
                this.Underline.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "TextAlign", {
            get: function () {
                return this._textAlign;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "textAlign", {
            get: function () {
                return this.TextAlign.value;
            },
            set: function (value) {
                this.TextAlign.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "FontSize", {
            get: function () {
                return this._fontSize;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "fontSize", {
            get: function () {
                return this.FontSize.value;
            },
            set: function (value) {
                this.FontSize.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "FontFamily", {
            get: function () {
                return this._fontFamily;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "fontFamily", {
            get: function () {
                return this.FontFamily.value;
            },
            set: function (value) {
                this.FontFamily.value = value;
            },
            enumerable: true,
            configurable: true
        });
        return Label;
    }(cubee.AComponent));
    cubee.Label = Label;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var Button = (function (_super) {
        __extends(Button, _super);
        function Button() {
            var _this = _super.call(this, document.createElement("button")) || this;
            _this._width = new cubee.NumberProperty(null, true, false);
            _this._height = new cubee.NumberProperty(null, true, false);
            _this._text = new cubee.StringProperty("", false, false);
            _this._textOverflow = new cubee.Property(cubee.ETextOverflow.CLIP, false, false);
            _this._foreColor = new cubee.ColorProperty(cubee.Color.BLACK, true, false);
            _this._textAlign = new cubee.Property(cubee.ETextAlign.CENTER, false, false);
            _this._verticalAlign = new cubee.Property(cubee.EVAlign.MIDDLE, false, false);
            _this._bold = new cubee.BooleanProperty(false, false, false);
            _this._italic = new cubee.BooleanProperty(false, false, false);
            _this._underline = new cubee.BooleanProperty(false, false, false);
            _this._fontSize = new cubee.NumberProperty(12, false, false);
            _this._fontFamily = new cubee.Property(cubee.FontFamily.Arial, false, false);
            _this._background = new cubee.BackgroundProperty(new cubee.ColorBackground(cubee.Color.TRANSPARENT), true, false);
            _this._shadow = new cubee.Property(null, true, false);
            _this.padding = cubee.Padding.create(10);
            _this._width.addChangeListener(function () {
                if (_this.width == null) {
                    _this.element.style.whiteSpace = "nowrap";
                    _this.element.style.overflowX = "visible";
                    _this.element.style.removeProperty("width");
                }
                else {
                    _this.element.style.whiteSpace = "normal";
                    _this.element.style.overflowX = "hidden";
                    _this.element.style.width = _this.width + "px";
                }
                _this.requestLayout();
            });
            _this._width.invalidate();
            _this._height.addChangeListener(function () {
                if (_this.height == null) {
                    _this.element.style.removeProperty("height");
                    _this.element.style.overflowY = "visible";
                }
                else {
                    _this.element.style.height = _this.height + "px";
                    _this.element.style.overflowY = "hidden";
                }
                _this.requestLayout();
            });
            _this._height.invalidate();
            _this._text.addChangeListener(function () {
                _this.element.innerHTML = _this.text;
                _this.requestLayout();
            });
            _this._text.invalidate();
            _this._textOverflow.addChangeListener(function () {
                _this.textOverflow.apply(_this.element);
                if (_this.textOverflow == cubee.ETextOverflow.ELLIPSIS) {
                    _this.element.style.whiteSpace = "nowrap";
                    _this.element.style.overflow = "hidden";
                }
                else {
                    _this.element.style.removeProperty("whiteSpace");
                    _this._width.invalidate();
                    _this._height.invalidate();
                }
                _this.requestLayout();
            });
            _this._textOverflow.invalidate();
            _this._foreColor.addChangeListener(function () {
                if (_this.foreColor == null) {
                    _this.element.style.color = "rgba(0,0,0,0.0)";
                }
                else {
                    _this.element.style.color = _this.foreColor.toCSS();
                }
            });
            _this._foreColor.invalidate();
            _this._textAlign.addChangeListener(function () {
                _this.textAlign.apply(_this.element);
            });
            _this._textAlign.invalidate();
            _this._verticalAlign.addChangeListener(function () {
                var ta = _this.verticalAlign;
                if (ta == cubee.EVAlign.TOP) {
                    _this.element.style.verticalAlign = "top";
                }
                else if (ta == cubee.EVAlign.MIDDLE) {
                    _this.element.style.verticalAlign = "middle";
                }
                else if (ta == cubee.EVAlign.BOTTOM) {
                    _this.element.style.verticalAlign = "bottom";
                }
            });
            _this._verticalAlign.invalidate();
            _this._underline.addChangeListener(function () {
                if (_this.underline) {
                    _this.element.style.textDecoration = "underline";
                }
                else {
                    _this.element.style.textDecoration = "none";
                }
                _this.requestLayout();
            });
            _this._underline.invalidate();
            _this._bold.addChangeListener(function () {
                if (_this.bold) {
                    _this.element.style.fontWeight = "bold";
                }
                else {
                    _this.element.style.fontWeight = "normal";
                }
                _this.requestLayout();
            });
            _this._bold.invalidate();
            _this._italic.addChangeListener(function () {
                if (_this.italic) {
                    _this.element.style.fontStyle = "italic";
                }
                else {
                    _this.element.style.fontStyle = "normal";
                }
                _this.requestLayout();
            });
            _this._italic.invalidate();
            _this._fontSize.addChangeListener(function () {
                _this.element.style.fontSize = _this.fontSize + "px";
                _this.requestLayout();
            });
            _this._fontSize.invalidate();
            _this._fontFamily.addChangeListener(function () {
                _this.fontFamily.apply(_this.element);
                _this.requestLayout();
            });
            _this._fontFamily.invalidate();
            _this._background.addChangeListener(function () {
                _this.element.style.removeProperty("backgroundColor");
                _this.element.style.removeProperty("backgroundImage");
                _this.element.style.removeProperty("background");
                if (_this._background.value != null) {
                    _this._background.value.apply(_this.element);
                }
            });
            _this._background.invalidate();
            _this._shadow.addChangeListener(function () {
                if (_this._shadow.value == null) {
                    _this.element.style.removeProperty("boxShadow");
                }
                else {
                    _this._shadow.value.apply(_this.element);
                }
            });
            _this._shadow.invalidate();
            _this.border = cubee.Border.create(1, cubee.Color.LIGHT_GRAY, 2);
            _this.fontSize = 14;
            _this.bold = true;
            _this.background = new cubee.ColorBackground(cubee.Color.WHITE);
            _this.shadow = new cubee.BoxShadow(1, 1, 5, 0, cubee.Color.LIGHT_GRAY, false);
            return _this;
        }
        Object.defineProperty(Button.prototype, "Width", {
            get: function () {
                return this._width;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "width", {
            get: function () {
                return this.Width.value;
            },
            set: function (value) {
                this.Width.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "Height", {
            get: function () {
                return this._height;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "height", {
            get: function () {
                return this.Height.value;
            },
            set: function (value) {
                this.Height.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "Text", {
            get: function () {
                return this._text;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "text", {
            get: function () {
                return this.Text.value;
            },
            set: function (value) {
                this.Text.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "TextOverflow", {
            get: function () {
                return this._textOverflow;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "textOverflow", {
            get: function () {
                return this.TextOverflow.value;
            },
            set: function (value) {
                this.TextOverflow.value = value;
                this.Padding;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ForeColor", {
            get: function () {
                return this._foreColor;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "foreColor", {
            get: function () {
                return this.ForeColor.value;
            },
            set: function (value) {
                this.ForeColor.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "VerticalAlign", {
            get: function () {
                return this._verticalAlign;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "verticalAlign", {
            get: function () {
                return this.VerticalAlign.value;
            },
            set: function (value) {
                this.VerticalAlign.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "Bold", {
            get: function () {
                return this._bold;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "bold", {
            get: function () {
                return this.Bold.value;
            },
            set: function (value) {
                this.Bold.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "Italic", {
            get: function () {
                return this._italic;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "italic", {
            get: function () {
                return this.Italic.value;
            },
            set: function (value) {
                this.Italic.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "Underline", {
            get: function () {
                return this._underline;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "underline", {
            get: function () {
                return this.Underline.value;
            },
            set: function (value) {
                this.Underline.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "TextAlign", {
            get: function () {
                return this._textAlign;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "textAlign", {
            get: function () {
                return this.TextAlign.value;
            },
            set: function (value) {
                this.TextAlign.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "FontSize", {
            get: function () {
                return this._fontSize;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "fontSize", {
            get: function () {
                return this.FontSize.value;
            },
            set: function (value) {
                this.FontSize.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "FontFamily", {
            get: function () {
                return this._fontFamily;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "fontFamily", {
            get: function () {
                return this.FontFamily.value;
            },
            set: function (value) {
                this.FontFamily.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "Background", {
            get: function () {
                return this._background;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "background", {
            get: function () {
                return this.Background.value;
            },
            set: function (value) {
                this.Background.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "Shadow", {
            get: function () {
                return this._shadow;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "shadow", {
            get: function () {
                return this.Shadow.value;
            },
            set: function (value) {
                this.Shadow.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "Padding", {
            get: function () {
                return this.paddingProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "padding", {
            get: function () {
                return this.Padding.value;
            },
            set: function (value) {
                this.Padding.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "Border", {
            get: function () {
                return this.borderProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "border", {
            get: function () {
                return this.Border.value;
            },
            set: function (value) {
                this.Border.value = value;
            },
            enumerable: true,
            configurable: true
        });
        return Button;
    }(cubee.AComponent));
    cubee.Button = Button;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var TextBox = (function (_super) {
        __extends(TextBox, _super);
        function TextBox() {
            var _this = _super.call(this, document.createElement("input")) || this;
            _this._width = new cubee.NumberProperty(null, true, false);
            _this._height = new cubee.NumberProperty(null, true, false);
            _this._text = new cubee.StringProperty("", false, false);
            _this._background = new cubee.BackgroundProperty(new cubee.ColorBackground(cubee.Color.WHITE), true, false);
            _this._foreColor = new cubee.ColorProperty(cubee.Color.BLACK, true, false);
            _this._textAlign = new cubee.Property(cubee.ETextAlign.LEFT, false, false);
            _this._verticalAlign = new cubee.Property(cubee.EVAlign.TOP, false, false);
            _this._bold = new cubee.BooleanProperty(false, false, false);
            _this._italic = new cubee.BooleanProperty(false, false, false);
            _this._underline = new cubee.BooleanProperty(false, false, false);
            _this._fontSize = new cubee.NumberProperty(12, false, false);
            _this._fontFamily = new cubee.Property(cubee.FontFamily.Arial, false, false);
            _this._placeholder = new cubee.StringProperty(null, true);
            _this.element.setAttribute("type", "text");
            _this.border = cubee.Border.create(1, cubee.Color.LIGHT_GRAY, 0);
            _this._width.addChangeListener(function () {
                if (_this.width == null) {
                    _this.element.style.removeProperty("width");
                }
                else {
                    _this.element.style.width = _this.width + "px";
                }
                _this.requestLayout();
            });
            _this._height.addChangeListener(function () {
                if (_this.height == null) {
                    _this.element.style.removeProperty("height");
                }
                else {
                    _this.element.style.height = _this.height + "px";
                }
                _this.requestLayout();
            });
            _this._text.addChangeListener(function () {
                if (_this.text != _this.element.getAttribute("value")) {
                    _this.element.setAttribute("value", _this.text);
                }
            });
            _this._foreColor.addChangeListener(function () {
                if (_this.foreColor == null) {
                    _this.element.style.color = "rgba(0,0,0, 0.0)";
                }
                else {
                    _this.element.style.color = _this.foreColor.toCSS();
                }
            });
            _this._foreColor.invalidate();
            _this._textAlign.addChangeListener(function () {
                _this.textAlign.apply(_this.element);
            });
            _this._textAlign.invalidate();
            _this._verticalAlign.addChangeListener(function () {
                var ta = _this.verticalAlign;
                if (ta == cubee.EVAlign.TOP) {
                    _this.element.style.verticalAlign = "top";
                }
                else if (ta == cubee.EVAlign.MIDDLE) {
                    _this.element.style.verticalAlign = "middle";
                }
                else if (ta == cubee.EVAlign.BOTTOM) {
                    _this.element.style.verticalAlign = "bottom";
                }
            });
            _this._verticalAlign.invalidate();
            _this._underline.addChangeListener(function () {
                if (_this.underline) {
                    _this.element.style.textDecoration = "underline";
                }
                else {
                    _this.element.style.textDecoration = "none";
                }
                _this.requestLayout();
            });
            _this._underline.invalidate();
            _this._bold.addChangeListener(function () {
                if (_this.bold) {
                    _this.element.style.fontWeight = "bold";
                }
                else {
                    _this.element.style.fontWeight = "normal";
                }
                _this.requestLayout();
            });
            _this._bold.invalidate();
            _this._italic.addChangeListener(function () {
                if (_this.italic) {
                    _this.element.style.fontStyle = "italic";
                }
                else {
                    _this.element.style.fontStyle = "normal";
                }
                _this.requestLayout();
            });
            _this._italic.invalidate();
            _this._fontSize.addChangeListener(function () {
                _this.element.style.fontSize = _this.fontSize + "px";
                _this.requestLayout();
            });
            _this._fontSize.invalidate();
            _this._fontFamily.addChangeListener(function () {
                _this.fontFamily.apply(_this.element);
                _this.requestLayout();
            });
            _this._fontFamily.invalidate();
            _this._background.addChangeListener(function () {
                if (_this.background == null) {
                    _this.element.style.removeProperty("backgroundColor");
                    _this.element.style.removeProperty("backgroundImage");
                }
                else {
                    _this.background.apply(_this.element);
                }
            });
            _this._background.invalidate();
            _this._placeholder.addChangeListener(function () {
                if (_this.placeholder == null) {
                    _this.element.removeAttribute("placeholder");
                }
                else {
                    _this.element.setAttribute("placeholder", _this.placeholder);
                }
            });
            _this.element.addEventListener("input", function () {
                _this.text = _this.element.value;
            });
            return _this;
        }
        Object.defineProperty(TextBox.prototype, "Width", {
            get: function () {
                return this._width;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "width", {
            get: function () {
                return this.Width.value;
            },
            set: function (value) {
                this.Width.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "Height", {
            get: function () {
                return this._height;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "height", {
            get: function () {
                return this.Height.value;
            },
            set: function (value) {
                this.Height.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "Text", {
            get: function () {
                return this._text;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "text", {
            get: function () {
                return this.Text.value;
            },
            set: function (value) {
                this.Text.value = value;
            },
            enumerable: true,
            configurable: true
        });
        TextBox.prototype.backgroundProperty = function () {
            return this._background;
        };
        Object.defineProperty(TextBox.prototype, "Background", {
            get: function () {
                return this.backgroundProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "background", {
            get: function () {
                return this.Background.value;
            },
            set: function (value) {
                this.Background.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "Padding", {
            get: function () {
                return this.paddingProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "padding", {
            get: function () {
                return this.Padding.value;
            },
            set: function (value) {
                this.Padding.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "Border", {
            get: function () {
                return this.borderProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "border", {
            get: function () {
                return this.Border.value;
            },
            set: function (value) {
                this.Border.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "ForeColor", {
            get: function () {
                return this._foreColor;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "foreColor", {
            get: function () {
                return this.ForeColor.value;
            },
            set: function (value) {
                this.ForeColor.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "TextAlign", {
            get: function () {
                return this._textAlign;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "textAlign", {
            get: function () {
                return this.TextAlign.value;
            },
            set: function (value) {
                this.TextAlign.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "VerticalAlign", {
            get: function () {
                return this._verticalAlign;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "verticalAlign", {
            get: function () {
                return this.VerticalAlign.value;
            },
            set: function (value) {
                this.VerticalAlign.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "Bold", {
            get: function () {
                return this._bold;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "bold", {
            get: function () {
                return this.Bold.value;
            },
            set: function (value) {
                this.Bold.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "Italic", {
            get: function () {
                return this._italic;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "italic", {
            get: function () {
                return this.Italic.value;
            },
            set: function (value) {
                this.Italic.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "Underline", {
            get: function () {
                return this._underline;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "underline", {
            get: function () {
                return this.Underline.value;
            },
            set: function (value) {
                this.Underline.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "FontSize", {
            get: function () {
                return this._fontSize;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "fontSize", {
            get: function () {
                return this.FontSize.value;
            },
            set: function (value) {
                this.FontSize.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "FontFamily", {
            get: function () {
                return this._fontFamily;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "fontFamily", {
            get: function () {
                return this.FontFamily.value;
            },
            set: function (value) {
                this.FontFamily.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "Placeholder", {
            get: function () {
                return this._placeholder;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextBox.prototype, "placeholder", {
            get: function () {
                return this.Placeholder.value;
            },
            set: function (value) {
                this.Placeholder.value = value;
            },
            enumerable: true,
            configurable: true
        });
        return TextBox;
    }(cubee.AComponent));
    cubee.TextBox = TextBox;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var PasswordBox = (function (_super) {
        __extends(PasswordBox, _super);
        function PasswordBox() {
            var _this = _super.call(this, document.createElement("input")) || this;
            _this._width = new cubee.NumberProperty(null, true, false);
            _this._height = new cubee.NumberProperty(null, true, false);
            _this._text = new cubee.StringProperty("", false, false);
            _this._background = new cubee.BackgroundProperty(new cubee.ColorBackground(cubee.Color.WHITE), true, false);
            _this._foreColor = new cubee.ColorProperty(cubee.Color.BLACK, true, false);
            _this._textAlign = new cubee.Property(cubee.ETextAlign.LEFT, false, false);
            _this._verticalAlign = new cubee.Property(cubee.EVAlign.TOP, false, false);
            _this._bold = new cubee.BooleanProperty(false, false, false);
            _this._italic = new cubee.BooleanProperty(false, false, false);
            _this._underline = new cubee.BooleanProperty(false, false, false);
            _this._fontSize = new cubee.NumberProperty(12, false, false);
            _this._fontFamily = new cubee.Property(cubee.FontFamily.Arial, false, false);
            _this._placeholder = new cubee.StringProperty(null, true);
            _this.element.setAttribute("type", "password");
            _this.border = cubee.Border.create(1, cubee.Color.LIGHT_GRAY, 0);
            _this._width.addChangeListener(function () {
                if (_this.width == null) {
                    _this.element.style.removeProperty("width");
                }
                else {
                    _this.element.style.width = _this.width + "px";
                }
                _this.requestLayout();
            });
            _this._height.addChangeListener(function () {
                if (_this.height == null) {
                    _this.element.style.removeProperty("height");
                }
                else {
                    _this.element.style.height = _this.height + "px";
                }
                _this.requestLayout();
            });
            _this._text.addChangeListener(function () {
                if (_this.text != _this.element.getAttribute("value")) {
                    _this.element.setAttribute("value", _this.text);
                }
            });
            _this._foreColor.addChangeListener(function () {
                if (_this.foreColor == null) {
                    _this.element.style.color = "rgba(0,0,0, 0.0)";
                }
                else {
                    _this.element.style.color = _this.foreColor.toCSS();
                }
            });
            _this._foreColor.invalidate();
            _this._textAlign.addChangeListener(function () {
                _this.textAlign.apply(_this.element);
            });
            _this._textAlign.invalidate();
            _this._verticalAlign.addChangeListener(function () {
                var ta = _this.verticalAlign;
                if (ta == cubee.EVAlign.TOP) {
                    _this.element.style.verticalAlign = "top";
                }
                else if (ta == cubee.EVAlign.MIDDLE) {
                    _this.element.style.verticalAlign = "middle";
                }
                else if (ta == cubee.EVAlign.BOTTOM) {
                    _this.element.style.verticalAlign = "bottom";
                }
            });
            _this._verticalAlign.invalidate();
            _this._underline.addChangeListener(function () {
                if (_this.underline) {
                    _this.element.style.textDecoration = "underline";
                }
                else {
                    _this.element.style.textDecoration = "none";
                }
                _this.requestLayout();
            });
            _this._underline.invalidate();
            _this._bold.addChangeListener(function () {
                if (_this.bold) {
                    _this.element.style.fontWeight = "bold";
                }
                else {
                    _this.element.style.fontWeight = "normal";
                }
                _this.requestLayout();
            });
            _this._bold.invalidate();
            _this._italic.addChangeListener(function () {
                if (_this.italic) {
                    _this.element.style.fontStyle = "italic";
                }
                else {
                    _this.element.style.fontStyle = "normal";
                }
                _this.requestLayout();
            });
            _this._italic.invalidate();
            _this._fontSize.addChangeListener(function () {
                _this.element.style.fontSize = _this.fontSize + "px";
                _this.requestLayout();
            });
            _this._fontSize.invalidate();
            _this._fontFamily.addChangeListener(function () {
                _this.fontFamily.apply(_this.element);
                _this.requestLayout();
            });
            _this._fontFamily.invalidate();
            _this._background.addChangeListener(function () {
                if (_this.background == null) {
                    _this.element.style.removeProperty("backgroundColor");
                    _this.element.style.removeProperty("backgroundImage");
                }
                else {
                    _this.background.apply(_this.element);
                }
            });
            _this._background.invalidate();
            _this._placeholder.addChangeListener(function () {
                if (_this.placeholder == null) {
                    _this.element.removeAttribute("placeholder");
                }
                else {
                    _this.element.setAttribute("placeholder", _this.placeholder);
                }
            });
            return _this;
        }
        Object.defineProperty(PasswordBox.prototype, "Width", {
            get: function () {
                return this._width;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "width", {
            get: function () {
                return this.Width.value;
            },
            set: function (value) {
                this.Width.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "Height", {
            get: function () {
                return this._height;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "height", {
            get: function () {
                return this.Height.value;
            },
            set: function (value) {
                this.Height.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "Text", {
            get: function () {
                return this._text;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "text", {
            get: function () {
                return this.Text.value;
            },
            set: function (value) {
                this.Text.value = value;
            },
            enumerable: true,
            configurable: true
        });
        PasswordBox.prototype.backgroundProperty = function () {
            return this._background;
        };
        Object.defineProperty(PasswordBox.prototype, "Background", {
            get: function () {
                return this.backgroundProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "background", {
            get: function () {
                return this.Background.value;
            },
            set: function (value) {
                this.Background.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "Padding", {
            get: function () {
                return this.paddingProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "padding", {
            get: function () {
                return this.Padding.value;
            },
            set: function (value) {
                this.Padding.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "Border", {
            get: function () {
                return this.borderProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "border", {
            get: function () {
                return this.Border.value;
            },
            set: function (value) {
                this.Border.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "ForeColor", {
            get: function () {
                return this._foreColor;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "foreColor", {
            get: function () {
                return this.ForeColor.value;
            },
            set: function (value) {
                this.ForeColor.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "TextAlign", {
            get: function () {
                return this._textAlign;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "textAlign", {
            get: function () {
                return this.TextAlign.value;
            },
            set: function (value) {
                this.TextAlign.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "VerticalAlign", {
            get: function () {
                return this._verticalAlign;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "verticalAlign", {
            get: function () {
                return this.VerticalAlign.value;
            },
            set: function (value) {
                this.VerticalAlign.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "Bold", {
            get: function () {
                return this._bold;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "bold", {
            get: function () {
                return this.Bold.value;
            },
            set: function (value) {
                this.Bold.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "Italic", {
            get: function () {
                return this._italic;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "italic", {
            get: function () {
                return this.Italic.value;
            },
            set: function (value) {
                this.Italic.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "Underline", {
            get: function () {
                return this._underline;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "underline", {
            get: function () {
                return this.Underline.value;
            },
            set: function (value) {
                this.Underline.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "FontSize", {
            get: function () {
                return this._fontSize;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "fontSize", {
            get: function () {
                return this.FontSize.value;
            },
            set: function (value) {
                this.FontSize.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "FontFamily", {
            get: function () {
                return this._fontFamily;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "fontFamily", {
            get: function () {
                return this.FontFamily.value;
            },
            set: function (value) {
                this.FontFamily.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "Placeholder", {
            get: function () {
                return this._placeholder;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PasswordBox.prototype, "placeholder", {
            get: function () {
                return this.Placeholder.value;
            },
            set: function (value) {
                this.Placeholder.value = value;
            },
            enumerable: true,
            configurable: true
        });
        return PasswordBox;
    }(cubee.AComponent));
    cubee.PasswordBox = PasswordBox;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var TextArea = (function (_super) {
        __extends(TextArea, _super);
        function TextArea() {
            var _this = _super.call(this, document.createElement("textarea")) || this;
            _this._width = new cubee.NumberProperty(null, true, false);
            _this._height = new cubee.NumberProperty(null, true, false);
            _this._text = new cubee.StringProperty("", false, false);
            _this._background = new cubee.BackgroundProperty(new cubee.ColorBackground(cubee.Color.WHITE), true, false);
            _this._foreColor = new cubee.ColorProperty(cubee.Color.BLACK, true, false);
            _this._textAlign = new cubee.Property(cubee.ETextAlign.LEFT, false, false);
            _this._verticalAlign = new cubee.Property(cubee.EVAlign.TOP, false, false);
            _this._bold = new cubee.BooleanProperty(false, false, false);
            _this._italic = new cubee.BooleanProperty(false, false, false);
            _this._underline = new cubee.BooleanProperty(false, false, false);
            _this._fontSize = new cubee.NumberProperty(12, false, false);
            _this._fontFamily = new cubee.Property(cubee.FontFamily.Arial, false, false);
            _this._placeholder = new cubee.StringProperty(null, true);
            _this.element.setAttribute("type", "text");
            _this.border = cubee.Border.create(1, cubee.Color.LIGHT_GRAY, 0);
            _this._width.addChangeListener(function () {
                if (_this.width == null) {
                    _this.element.style.removeProperty("width");
                }
                else {
                    _this.element.style.width = _this.width + "px";
                }
                _this.requestLayout();
            });
            _this._height.addChangeListener(function () {
                if (_this.height == null) {
                    _this.element.style.removeProperty("height");
                }
                else {
                    _this.element.style.height = _this.height + "px";
                }
                _this.requestLayout();
            });
            _this._text.addChangeListener(function () {
                if (_this.text != _this.element.innerHTML) {
                    _this.element.innerHTML = _this.text;
                }
            });
            _this._foreColor.addChangeListener(function () {
                if (_this.foreColor == null) {
                    _this.element.style.color = "rgba(0,0,0, 0.0)";
                }
                else {
                    _this.element.style.color = _this.foreColor.toCSS();
                }
            });
            _this._foreColor.invalidate();
            _this._textAlign.addChangeListener(function () {
                _this.textAlign.apply(_this.element);
            });
            _this._textAlign.invalidate();
            _this._verticalAlign.addChangeListener(function () {
                var ta = _this.verticalAlign;
                if (ta == cubee.EVAlign.TOP) {
                    _this.element.style.verticalAlign = "top";
                }
                else if (ta == cubee.EVAlign.MIDDLE) {
                    _this.element.style.verticalAlign = "middle";
                }
                else if (ta == cubee.EVAlign.BOTTOM) {
                    _this.element.style.verticalAlign = "bottom";
                }
            });
            _this._verticalAlign.invalidate();
            _this._underline.addChangeListener(function () {
                if (_this.underline) {
                    _this.element.style.textDecoration = "underline";
                }
                else {
                    _this.element.style.textDecoration = "none";
                }
                _this.requestLayout();
            });
            _this._underline.invalidate();
            _this._bold.addChangeListener(function () {
                if (_this.bold) {
                    _this.element.style.fontWeight = "bold";
                }
                else {
                    _this.element.style.fontWeight = "normal";
                }
                _this.requestLayout();
            });
            _this._bold.invalidate();
            _this._italic.addChangeListener(function () {
                if (_this.italic) {
                    _this.element.style.fontStyle = "italic";
                }
                else {
                    _this.element.style.fontStyle = "normal";
                }
                _this.requestLayout();
            });
            _this._italic.invalidate();
            _this._fontSize.addChangeListener(function () {
                _this.element.style.fontSize = _this.fontSize + "px";
                _this.requestLayout();
            });
            _this._fontSize.invalidate();
            _this._fontFamily.addChangeListener(function () {
                _this.fontFamily.apply(_this.element);
                _this.requestLayout();
            });
            _this._fontFamily.invalidate();
            _this._background.addChangeListener(function () {
                if (_this.background == null) {
                    _this.element.style.removeProperty("backgroundColor");
                    _this.element.style.removeProperty("backgroundImage");
                }
                else {
                    _this.background.apply(_this.element);
                }
            });
            _this._background.invalidate();
            _this._placeholder.addChangeListener(function () {
                if (_this.placeholder == null) {
                    _this.element.removeAttribute("placeholder");
                }
                else {
                    _this.element.setAttribute("placeholder", _this.placeholder);
                }
            });
            _this.element.addEventListener("input", function () {
                _this.text = _this.element.value;
            });
            return _this;
        }
        Object.defineProperty(TextArea.prototype, "Width", {
            get: function () {
                return this._width;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "width", {
            get: function () {
                return this.Width.value;
            },
            set: function (value) {
                this.Width.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "Height", {
            get: function () {
                return this._height;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "height", {
            get: function () {
                return this.Height.value;
            },
            set: function (value) {
                this.Height.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "Text", {
            get: function () {
                return this._text;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "text", {
            get: function () {
                return this.Text.value;
            },
            set: function (value) {
                this.Text.value = value;
            },
            enumerable: true,
            configurable: true
        });
        TextArea.prototype.backgroundProperty = function () {
            return this._background;
        };
        Object.defineProperty(TextArea.prototype, "Background", {
            get: function () {
                return this.backgroundProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "background", {
            get: function () {
                return this.Background.value;
            },
            set: function (value) {
                this.Background.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "Padding", {
            get: function () {
                return this.paddingProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "padding", {
            get: function () {
                return this.Padding.value;
            },
            set: function (value) {
                this.Padding.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "Border", {
            get: function () {
                return this.borderProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "border", {
            get: function () {
                return this.Border.value;
            },
            set: function (value) {
                this.Border.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "ForeColor", {
            get: function () {
                return this._foreColor;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "foreColor", {
            get: function () {
                return this.ForeColor.value;
            },
            set: function (value) {
                this.ForeColor.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "TextAlign", {
            get: function () {
                return this._textAlign;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "textAlign", {
            get: function () {
                return this.TextAlign.value;
            },
            set: function (value) {
                this.TextAlign.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "VerticalAlign", {
            get: function () {
                return this._verticalAlign;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "verticalAlign", {
            get: function () {
                return this.VerticalAlign.value;
            },
            set: function (value) {
                this.VerticalAlign.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "Bold", {
            get: function () {
                return this._bold;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "bold", {
            get: function () {
                return this.Bold.value;
            },
            set: function (value) {
                this.Bold.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "Italic", {
            get: function () {
                return this._italic;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "italic", {
            get: function () {
                return this.Italic.value;
            },
            set: function (value) {
                this.Italic.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "Underline", {
            get: function () {
                return this._underline;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "underline", {
            get: function () {
                return this.Underline.value;
            },
            set: function (value) {
                this.Underline.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "FontSize", {
            get: function () {
                return this._fontSize;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "fontSize", {
            get: function () {
                return this.FontSize.value;
            },
            set: function (value) {
                this.FontSize.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "FontFamily", {
            get: function () {
                return this._fontFamily;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "fontFamily", {
            get: function () {
                return this.FontFamily.value;
            },
            set: function (value) {
                this.FontFamily.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "Placeholder", {
            get: function () {
                return this._placeholder;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextArea.prototype, "placeholder", {
            get: function () {
                return this.Placeholder.value;
            },
            set: function (value) {
                this.Placeholder.value = value;
            },
            enumerable: true,
            configurable: true
        });
        return TextArea;
    }(cubee.AComponent));
    cubee.TextArea = TextArea;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var CheckBox = (function (_super) {
        __extends(CheckBox, _super);
        function CheckBox() {
            var _this = _super.call(this, document.createElement("input")) || this;
            _this._checked = new cubee.BooleanProperty(false, false);
            _this.element.setAttribute("type", "checkbox");
            _this._checked.addChangeListener(function () {
                var e = _this.element;
                e.checked = _this.checked;
            });
            _this.element.addEventListener("change", function () {
                _this.checked = _this.element.checked;
            });
            return _this;
        }
        Object.defineProperty(CheckBox.prototype, "Checked", {
            get: function () {
                return this._checked;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckBox.prototype, "checked", {
            get: function () {
                return this.Checked.value;
            },
            set: function (value) {
                this.Checked.value = value;
            },
            enumerable: true,
            configurable: true
        });
        return CheckBox;
    }(cubee.AComponent));
    cubee.CheckBox = CheckBox;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var ComboBox = (function (_super) {
        __extends(ComboBox, _super);
        function ComboBox() {
            var _this = _super.call(this, document.createElement("input")) || this;
            _this._selectedIndex = new cubee.NumberProperty(-1, false, false);
            _this._selectedItem = new cubee.Property(null, true, false);
            _this.items = [];
            _this._width = new cubee.NumberProperty(null, true, false);
            _this._height = new cubee.NumberProperty(null, true, false);
            _this._text = new cubee.StringProperty("", false, false);
            _this._background = new cubee.BackgroundProperty(new cubee.ColorBackground(cubee.Color.WHITE), true, false);
            _this._foreColor = new cubee.ColorProperty(cubee.Color.BLACK, true, false);
            _this._textAlign = new cubee.Property(cubee.ETextAlign.LEFT, false, false);
            _this._verticalAlign = new cubee.Property(cubee.EVAlign.TOP, false, false);
            _this._bold = new cubee.BooleanProperty(false, false, false);
            _this._italic = new cubee.BooleanProperty(false, false, false);
            _this._underline = new cubee.BooleanProperty(false, false, false);
            _this._fontSize = new cubee.NumberProperty(12, false, false);
            _this._fontFamily = new cubee.Property(cubee.FontFamily.Arial, false, false);
            _this._placeholder = new cubee.StringProperty(null, true);
            _this.element.setAttribute("type", "select");
            _this.border = cubee.Border.create(1, cubee.Color.LIGHT_GRAY, 0);
            _this._width.addChangeListener(function () {
                if (_this.width == null) {
                    _this.element.style.removeProperty("width");
                }
                else {
                    _this.element.style.width = _this.width + "px";
                }
                _this.requestLayout();
            });
            _this._height.addChangeListener(function () {
                if (_this.height == null) {
                    _this.element.style.removeProperty("height");
                }
                else {
                    _this.element.style.height = _this.height + "px";
                }
                _this.requestLayout();
            });
            _this._text.addChangeListener(function () {
                if (_this.text != _this.element.getAttribute("value")) {
                    _this.element.setAttribute("value", _this.text);
                }
            });
            _this._foreColor.addChangeListener(function () {
                if (_this.foreColor == null) {
                    _this.element.style.color = "rgba(0,0,0, 0.0)";
                }
                else {
                    _this.element.style.color = _this.foreColor.toCSS();
                }
            });
            _this._foreColor.invalidate();
            _this._textAlign.addChangeListener(function () {
                _this.textAlign.apply(_this.element);
            });
            _this._textAlign.invalidate();
            _this._verticalAlign.addChangeListener(function () {
                var ta = _this.verticalAlign;
                if (ta == cubee.EVAlign.TOP) {
                    _this.element.style.verticalAlign = "top";
                }
                else if (ta == cubee.EVAlign.MIDDLE) {
                    _this.element.style.verticalAlign = "middle";
                }
                else if (ta == cubee.EVAlign.BOTTOM) {
                    _this.element.style.verticalAlign = "bottom";
                }
            });
            _this._verticalAlign.invalidate();
            _this._underline.addChangeListener(function () {
                if (_this.underline) {
                    _this.element.style.textDecoration = "underline";
                }
                else {
                    _this.element.style.textDecoration = "none";
                }
                _this.requestLayout();
            });
            _this._underline.invalidate();
            _this._bold.addChangeListener(function () {
                if (_this.bold) {
                    _this.element.style.fontWeight = "bold";
                }
                else {
                    _this.element.style.fontWeight = "normal";
                }
                _this.requestLayout();
            });
            _this._bold.invalidate();
            _this._italic.addChangeListener(function () {
                if (_this.italic) {
                    _this.element.style.fontStyle = "italic";
                }
                else {
                    _this.element.style.fontStyle = "normal";
                }
                _this.requestLayout();
            });
            _this._italic.invalidate();
            _this._fontSize.addChangeListener(function () {
                _this.element.style.fontSize = _this.fontSize + "px";
                _this.requestLayout();
            });
            _this._fontSize.invalidate();
            _this._fontFamily.addChangeListener(function () {
                _this.fontFamily.apply(_this.element);
                _this.requestLayout();
            });
            _this._fontFamily.invalidate();
            _this._background.addChangeListener(function () {
                if (_this.background == null) {
                    _this.element.style.removeProperty("backgroundColor");
                    _this.element.style.removeProperty("backgroundImage");
                }
                else {
                    _this.background.apply(_this.element);
                }
            });
            _this._background.invalidate();
            _this._placeholder.addChangeListener(function () {
                if (_this.placeholder == null) {
                    _this.element.removeAttribute("placeholder");
                }
                else {
                    _this.element.setAttribute("placeholder", _this.placeholder);
                }
            });
            _this.element.addEventListener("change", function () {
                var val = _this.element.value;
                if (val == null || val == "") {
                    _this._selectedIndex.value = -1;
                    _this._selectedItem.value = null;
                }
                else {
                    _this._selectedIndex.value = parseInt(val);
                }
            });
            _this._selectedIndex.addChangeListener(function () {
            });
            _this._selectedItem.addChangeListener(function () {
                var item = _this._selectedItem.value;
                if (item == null) {
                    _this._selectedIndex.value = -1;
                    _this.element.value = null;
                }
                else {
                    var index = -1;
                    for (var i = 0; i < _this.items.length; i++) {
                        if (item == _this.items[i]) {
                            index = i;
                        }
                    }
                    if (index < 0) {
                        _this._selectedIndex.value = -1;
                        _this.element.value = null;
                    }
                    else {
                        _this._selectedIndex.value = index;
                        _this.element.value = "" + index;
                    }
                }
            });
            return _this;
        }
        Object.defineProperty(ComboBox.prototype, "Width", {
            get: function () {
                return this._width;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "width", {
            get: function () {
                return this.Width.value;
            },
            set: function (value) {
                this.Width.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "Height", {
            get: function () {
                return this._height;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "height", {
            get: function () {
                return this.Height.value;
            },
            set: function (value) {
                this.Height.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "Text", {
            get: function () {
                return this._text;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "text", {
            get: function () {
                return this.Text.value;
            },
            set: function (value) {
                this.Text.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "Background", {
            get: function () {
                return this._background;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "background", {
            get: function () {
                return this.Background.value;
            },
            set: function (value) {
                this.Background.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "ForeColor", {
            get: function () {
                return this._foreColor;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "foreColor", {
            get: function () {
                return this.ForeColor.value;
            },
            set: function (value) {
                this.ForeColor.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "TextAlign", {
            get: function () {
                return this._textAlign;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "textAlign", {
            get: function () {
                return this.TextAlign.value;
            },
            set: function (value) {
                this.TextAlign.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "VerticalAlign", {
            get: function () {
                return this._verticalAlign;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "verticalAlign", {
            get: function () {
                return this.VerticalAlign.value;
            },
            set: function (value) {
                this.VerticalAlign.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "Bold", {
            get: function () {
                return this._bold;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "bold", {
            get: function () {
                return this.Bold.value;
            },
            set: function (value) {
                this.Bold.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "Italic", {
            get: function () {
                return this._italic;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "italic", {
            get: function () {
                return this.Italic.value;
            },
            set: function (value) {
                this.Italic.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "Underline", {
            get: function () {
                return this._underline;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "underline", {
            get: function () {
                return this.Underline.value;
            },
            set: function (value) {
                this.Underline.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "FontSize", {
            get: function () {
                return this._fontSize;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "fontSize", {
            get: function () {
                return this.FontSize.value;
            },
            set: function (value) {
                this.FontSize.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "FontFamily", {
            get: function () {
                return this._fontFamily;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "fontFamily", {
            get: function () {
                return this.FontFamily.value;
            },
            set: function (value) {
                this.FontFamily.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "Placeholder", {
            get: function () {
                return this._placeholder;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "placeholder", {
            get: function () {
                return this.Placeholder.value;
            },
            set: function (value) {
                this.Placeholder.value = value;
            },
            enumerable: true,
            configurable: true
        });
        ComboBox.prototype.selectedIndexProperty = function () {
            return this._selectedIndex;
        };
        Object.defineProperty(ComboBox.prototype, "SelectedIndex", {
            get: function () {
                return this.selectedIndexProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "selectedIndex", {
            get: function () {
                return this.SelectedIndex.value;
            },
            set: function (value) {
                this.SelectedIndex.value = value;
            },
            enumerable: true,
            configurable: true
        });
        ComboBox.prototype.selectedItemProperty = function () {
            return this._selectedItem;
        };
        Object.defineProperty(ComboBox.prototype, "SelectedItem", {
            get: function () {
                return this.selectedItemProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBox.prototype, "selectedItem", {
            get: function () {
                return this.SelectedItem.value;
            },
            set: function (value) {
                this.SelectedItem.value = value;
            },
            enumerable: true,
            configurable: true
        });
        return ComboBox;
    }(cubee.AComponent));
    cubee.ComboBox = ComboBox;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var PictureBox = (function (_super) {
        __extends(PictureBox, _super);
        function PictureBox() {
            var _this = _super.call(this, document.createElement("div")) || this;
            _this._width = new cubee.NumberProperty(50, false, false);
            _this._height = new cubee.NumberProperty(50, false, false);
            _this._pictureSizeMode = new cubee.Property(cubee.EPictureSizeMode.NORMAL, false, false);
            _this._image = new cubee.Property(null, true, false);
            _this._background = new cubee.BackgroundProperty(null, true, false);
            _this._imgElement = null;
            _this.element.style.overflow = "hidden";
            _this._imgElement = document.createElement("img");
            _this._imgElement.style.position = "absolute";
            _this.element.appendChild(_this._imgElement);
            _this._width.addChangeListener(function () {
                _this.recalculateSize();
            });
            _this._width.invalidate();
            _this._height.addChangeListener(function () {
                _this.recalculateSize();
            });
            _this._height.invalidate();
            _this._pictureSizeMode.addChangeListener(function () {
                _this.recalculateSize();
            });
            _this._pictureSizeMode.invalidate();
            _this._image.addChangeListener(function () {
                if (_this._image.value != null) {
                    _this.image.apply(_this._imgElement);
                    if (!_this.image.loaded) {
                        _this.image.onLoad.addListener(function () {
                            _this.recalculateSize();
                        });
                    }
                }
                else {
                    _this._imgElement.setAttribute("src", "");
                }
                _this.recalculateSize();
            });
            _this._image.invalidate();
            _this._background.addChangeListener(function () {
                if (_this.background == null) {
                    _this.element.style.removeProperty("backgroundColor");
                    _this.element.style.removeProperty("backgroundImage");
                }
                else {
                    _this.background.apply(_this.element);
                }
            });
            _this._background.invalidate();
            return _this;
        }
        PictureBox.prototype.recalculateSize = function () {
            this.element.style.width = this.width + "px";
            this.element.style.height = this.height + "px";
            var psm = this.pictureSizeMode;
            var imgWidth = 0;
            var imgHeight = 0;
            var picWidth = this.width;
            var picHeight = this.height;
            var cx = 0;
            var cy = 0;
            var cw = 0;
            var ch = 0;
            var imgRatio = null;
            var picRatio = picWidth / picHeight;
            if (this.image != null) {
                imgWidth = this.image.width;
                imgHeight = this.image.height;
            }
            if (imgWidth == 0 || imgHeight == 0) {
            }
            else {
                imgRatio = imgWidth / imgHeight;
                if (psm == cubee.EPictureSizeMode.CENTER) {
                    cx = (imgWidth - picWidth) / 2;
                    cy = (imgHeight - picHeight) / 2;
                    cw = imgWidth;
                    ch = imgHeight;
                }
                else if (psm == cubee.EPictureSizeMode.FILL) {
                    if (imgRatio > picRatio) {
                        cy = 0;
                        ch = picHeight;
                        cw = (ch * imgRatio) | 0;
                        cx = (picWidth - cw) / 2;
                    }
                    else {
                        cx = 0;
                        cw = picWidth;
                        ch = (cw / imgRatio) | 0;
                        cy = (picHeight - ch) / 2;
                    }
                }
                else if (psm == cubee.EPictureSizeMode.FIT_HEIGHT) {
                    cy = 0;
                    ch = picHeight;
                    cw = (ch * imgRatio) | 0;
                    cx = (picWidth - cw) / 2;
                }
                else if (psm == cubee.EPictureSizeMode.FIT_WIDTH) {
                    cx = 0;
                    cw = picWidth;
                    ch = (cw / imgRatio) | 0;
                    cy = (picHeight - ch) / 2;
                }
                else if (psm == cubee.EPictureSizeMode.NORMAL) {
                    cx = 0;
                    cy = 0;
                    cw = imgWidth;
                    ch = imgHeight;
                }
                else if (psm == cubee.EPictureSizeMode.STRETCH) {
                    cx = 0;
                    cy = 0;
                    cw = picWidth;
                    ch = picHeight;
                }
                else if (psm == cubee.EPictureSizeMode.ZOOM) {
                    if (imgRatio > picRatio) {
                        cx = 0;
                        cw = picWidth;
                        ch = (cw / imgRatio) | 0;
                        cy = (picHeight - ch) / 2;
                    }
                    else {
                        cy = 0;
                        ch = picHeight;
                        cw = (ch * imgRatio) | 0;
                        cx = (picWidth - cw) / 2;
                    }
                }
            }
            this.element.style.left = cx + "px";
            this.element.style.top = cy + "px";
            this.element.style.width = cw + "px";
            this.element.style.height = ch + "px";
            this.requestLayout();
        };
        PictureBox.prototype.pictureSizeModeProperty = function () {
            return this._pictureSizeMode;
        };
        Object.defineProperty(PictureBox.prototype, "PictureSizeMode", {
            get: function () {
                return this.pictureSizeModeProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PictureBox.prototype, "pictureSizeMode", {
            get: function () {
                return this.PictureSizeMode.value;
            },
            set: function (value) {
                this.PictureSizeMode.value = value;
            },
            enumerable: true,
            configurable: true
        });
        PictureBox.prototype.widthProperty = function () {
            return this._width;
        };
        Object.defineProperty(PictureBox.prototype, "Width", {
            get: function () {
                return this.widthProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PictureBox.prototype, "width", {
            get: function () {
                return this.Width.value;
            },
            set: function (value) {
                this.Width.value = value;
            },
            enumerable: true,
            configurable: true
        });
        PictureBox.prototype.heightProperty = function () {
            return this._height;
        };
        Object.defineProperty(PictureBox.prototype, "Height", {
            get: function () {
                return this.heightProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PictureBox.prototype, "height", {
            get: function () {
                return this.Height.value;
            },
            set: function (value) {
                this.Height.value = value;
            },
            enumerable: true,
            configurable: true
        });
        PictureBox.prototype.paddingProperty = function () {
            return _super.prototype.paddingProperty.call(this);
        };
        Object.defineProperty(PictureBox.prototype, "Padding", {
            get: function () {
                return this.paddingProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PictureBox.prototype, "padding", {
            get: function () {
                return this.Padding.value;
            },
            set: function (value) {
                this.Padding.value = value;
            },
            enumerable: true,
            configurable: true
        });
        PictureBox.prototype.borderProperty = function () {
            return _super.prototype.borderProperty.call(this);
        };
        Object.defineProperty(PictureBox.prototype, "Border", {
            get: function () {
                return this.borderProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PictureBox.prototype, "border", {
            get: function () {
                return this.Border.value;
            },
            set: function (value) {
                this.Border.value = value;
            },
            enumerable: true,
            configurable: true
        });
        PictureBox.prototype.backgroundProperty = function () {
            return this._background;
        };
        Object.defineProperty(PictureBox.prototype, "Background", {
            get: function () {
                return this.backgroundProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PictureBox.prototype, "background", {
            get: function () {
                return this.Background.value;
            },
            set: function (value) {
                this.Background.value = value;
            },
            enumerable: true,
            configurable: true
        });
        PictureBox.prototype.imageProperty = function () {
            return this._image;
        };
        Object.defineProperty(PictureBox.prototype, "Image", {
            get: function () {
                return this.imageProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PictureBox.prototype, "image", {
            get: function () {
                return this.Image.value;
            },
            set: function (value) {
                this.Image.value = value;
            },
            enumerable: true,
            configurable: true
        });
        return PictureBox;
    }(cubee.AComponent));
    cubee.PictureBox = PictureBox;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var FAIcon = (function (_super) {
        __extends(FAIcon, _super);
        function FAIcon(icon) {
            var _this = _super.call(this) || this;
            _this._size = new cubee.NumberProperty(16, false, false);
            _this._color = new cubee.ColorProperty(cubee.Color.BLACK, false, false);
            _this._spin = new cubee.BooleanProperty(false, false, false);
            _this._icon = new cubee.Property(cubee.EIcon.BAN, false, false);
            _this._iElement = null;
            _this._changeListener = function () {
                _this.refreshStyle();
            };
            if (!FAIcon._initialized) {
                FAIcon.initFA();
            }
            if (icon == null) {
                throw "The icon parameter can not be null.";
            }
            _super.prototype.widthProperty.call(_this).bind(_this._size);
            _super.prototype.heightProperty.call(_this).bind(_this._size);
            _this.element.style.textAlign = "center";
            _this._icon.value = icon;
            _this._iElement = document.createElement("i");
            _this.element.appendChild(_this._iElement);
            _this._size.addChangeListener(_this._changeListener);
            _this._color.addChangeListener(_this._changeListener);
            _this._spin.addChangeListener(_this._changeListener);
            _this._icon.addChangeListener(_this._changeListener);
            _this.refreshStyle();
            return _this;
        }
        FAIcon.initFA = function () {
            FAIcon._initialized = true;
            var w = window;
            w.fastyle = document.createElement("link");
            w.fastyle.href = "//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css";
            w.fastyle.rel = "stylesheet";
            document.getElementsByTagName("head")[0].appendChild(w.fastyle);
        };
        FAIcon.prototype.refreshStyle = function () {
            this._iElement.className = "fa";
            if (this.icon != null) {
                this._iElement.className = "fa " + this._icon.value.className;
            }
            this._iElement.style.fontSize = this.size + "px";
            this._iElement.style.color = this._color.value.toCSS();
            if (this.spin) {
                this._iElement.className = this._iElement.className + " fa-spin";
            }
            this.element.style.lineHeight = this.size + "px";
            this._iElement.style.backfaceVisibility = "hidden";
        };
        FAIcon.prototype.colorProperty = function () {
            return this._color;
        };
        Object.defineProperty(FAIcon.prototype, "Color", {
            get: function () {
                return this.colorProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FAIcon.prototype, "color", {
            get: function () {
                return this.Color.value;
            },
            set: function (value) {
                this.Color.value = value;
            },
            enumerable: true,
            configurable: true
        });
        FAIcon.prototype.sizeProperty = function () {
            return this._size;
        };
        Object.defineProperty(FAIcon.prototype, "Size", {
            get: function () {
                return this.sizeProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FAIcon.prototype, "size", {
            get: function () {
                return this.Size.value;
            },
            set: function (value) {
                this.Size.value = value;
            },
            enumerable: true,
            configurable: true
        });
        FAIcon.prototype.spinProperty = function () {
            return this._spin;
        };
        Object.defineProperty(FAIcon.prototype, "Spin", {
            get: function () {
                return this.spinProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FAIcon.prototype, "spin", {
            get: function () {
                return this.Spin.value;
            },
            set: function (value) {
                this.Spin.value = value;
            },
            enumerable: true,
            configurable: true
        });
        FAIcon.prototype.iconProperty = function () {
            return this._icon;
        };
        Object.defineProperty(FAIcon.prototype, "Icon", {
            get: function () {
                return this.iconProperty();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FAIcon.prototype, "icon", {
            get: function () {
                return this.Icon.value;
            },
            set: function (value) {
                this.Icon.value = value;
            },
            enumerable: true,
            configurable: true
        });
        return FAIcon;
    }(cubee.AUserControl));
    FAIcon._initialized = false;
    cubee.FAIcon = FAIcon;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var EIcon = (function () {
        function EIcon(_value) {
            this._value = _value;
        }
        Object.defineProperty(EIcon, "_500PX", {
            get: function () { return EIcon.__500PX; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "AMAZON", {
            get: function () { return EIcon._AMAZON; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BALANCE_SCALE", {
            get: function () { return EIcon._BALANCE_SCALE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BATTERY_0", {
            get: function () { return EIcon._BATTERY_0; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BATTERY_1", {
            get: function () { return EIcon._BATTERY_1; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BATTERY_2", {
            get: function () { return EIcon._BATTERY_2; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BATTERY_3", {
            get: function () { return EIcon._BATTERY_3; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BATTERY_4", {
            get: function () { return EIcon._BATTERY_4; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BATTERY_EMPTY", {
            get: function () { return EIcon._BATTERY_EMPTY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BATTERY_FULL", {
            get: function () { return EIcon._BATTERY_FULL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BATTERY_HALF", {
            get: function () { return EIcon._BATTERY_HALF; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BATTERY_QUARTER", {
            get: function () { return EIcon._BATTERY_QUARTER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BATTERY_THREE_QUARTERS", {
            get: function () { return EIcon._BATTERY_THREE_QUARTERS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BLACK_TIE", {
            get: function () { return EIcon._BLACK_TIE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CALENDAR_CHECK_O", {
            get: function () { return EIcon._CALENDAR_CHECK_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CALENDAR_MINUS_O", {
            get: function () { return EIcon._CALENDAR_MINUS_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CALENDAR_PLUS_O", {
            get: function () { return EIcon._CALENDAR_PLUS_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CALENDAR_TIMES_O", {
            get: function () { return EIcon._CALENDAR_TIMES_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CC_DINERS_CLUB", {
            get: function () { return EIcon._CC_DINERS_CLUB; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CC_JCB", {
            get: function () { return EIcon._CC_JCB; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHROME", {
            get: function () { return EIcon._CHROME; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CLONE", {
            get: function () { return EIcon._CLONE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "COMMENTING", {
            get: function () { return EIcon._COMMENTING; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "COMMENTING_O", {
            get: function () { return EIcon._COMMENTING_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CONTAO", {
            get: function () { return EIcon._CONTAO; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CREATIVE_COMMONS", {
            get: function () { return EIcon._CREATIVE_COMMONS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EXPEDITEDSSL", {
            get: function () { return EIcon._EXPEDITEDSSL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FIREFOX", {
            get: function () { return EIcon._FIREFOX; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FONTICONS", {
            get: function () { return EIcon._FONTICONS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GENDERLESS", {
            get: function () { return EIcon._GENDERLESS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GET_POCKET", {
            get: function () { return EIcon._GET_POCKET; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GG", {
            get: function () { return EIcon._GG; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GG_CIRCLE", {
            get: function () { return EIcon._GG_CIRCLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HAND_GRAB_O", {
            get: function () { return EIcon._HAND_GRAB_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HAND_LIZARD_O", {
            get: function () { return EIcon._HAND_LIZARD_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HAND_PAPER_O", {
            get: function () { return EIcon._HAND_PAPER_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HAND_PEACE_O", {
            get: function () { return EIcon._HAND_PEACE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HAND_POINTER_O", {
            get: function () { return EIcon._HAND_POINTER_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HAND_ROCK_O", {
            get: function () { return EIcon._HAND_ROCK_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HAND_SCISSORS_O", {
            get: function () { return EIcon._HAND_SCISSORS_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HAND_SPOCK_O", {
            get: function () { return EIcon._HAND_SPOCK_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HAND_STOP_O", {
            get: function () { return EIcon._HAND_STOP_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HOURGLASS", {
            get: function () { return EIcon._HOURGLASS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HOURGLASS_1", {
            get: function () { return EIcon._HOURGLASS_1; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HOURGLASS_2", {
            get: function () { return EIcon._HOURGLASS_2; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HOURGLASS_3", {
            get: function () { return EIcon._HOURGLASS_3; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HOURGLASS_END", {
            get: function () { return EIcon._HOURGLASS_END; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HOURGLASS_HALF", {
            get: function () { return EIcon._HOURGLASS_HALF; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HOURGLASS_O", {
            get: function () { return EIcon._HOURGLASS_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HOURGLASS_START", {
            get: function () { return EIcon._HOURGLASS_START; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HOUZZ", {
            get: function () { return EIcon._HOUZZ; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "I_CURSOR", {
            get: function () { return EIcon._I_CURSOR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "INDUSTRY", {
            get: function () { return EIcon._INDUSTRY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "INTERNET_EXPLORER", {
            get: function () { return EIcon._INTERNET_EXPLORER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MAP", {
            get: function () { return EIcon._MAP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MAP_O", {
            get: function () { return EIcon._MAP_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MAP_PIN", {
            get: function () { return EIcon._MAP_PIN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MAP_SIGNS", {
            get: function () { return EIcon._MAP_SIGNS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MOUSE_POINTER", {
            get: function () { return EIcon._MOUSE_POINTER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "OBJECT_GROUP", {
            get: function () { return EIcon._OBJECT_GROUP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "OBJECT_UNGROUP", {
            get: function () { return EIcon._OBJECT_UNGROUP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ODNOKLASSNIKI", {
            get: function () { return EIcon._ODNOKLASSNIKI; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ODNOKLASSNIKI_SQUARE", {
            get: function () { return EIcon._ODNOKLASSNIKI_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "OPENCART", {
            get: function () { return EIcon._OPENCART; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "OPERA", {
            get: function () { return EIcon._OPERA; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "OPTIN_MONSTER", {
            get: function () { return EIcon._OPTIN_MONSTER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "REGISTERED", {
            get: function () { return EIcon._REGISTERED; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SAFARI", {
            get: function () { return EIcon._SAFARI; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STICKY_NOTE", {
            get: function () { return EIcon._STICKY_NOTE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STICKY_NOTE_O", {
            get: function () { return EIcon._STICKY_NOTE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TELEVISION", {
            get: function () { return EIcon._TELEVISION; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TRADEMARK", {
            get: function () { return EIcon._TRADEMARK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TRIPADVISOR", {
            get: function () { return EIcon._TRIPADVISOR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TV", {
            get: function () { return EIcon._TV; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "VIMEO", {
            get: function () { return EIcon._VIMEO; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "WIKIPEDIA_W", {
            get: function () { return EIcon._WIKIPEDIA_W; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "Y_COMBINATOR", {
            get: function () { return EIcon._Y_COMBINATOR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "YC", {
            get: function () { return EIcon._YC; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ADJUST", {
            get: function () { return EIcon._ADJUST; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ANCHOR", {
            get: function () { return EIcon._ANCHOR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARCHIVE", {
            get: function () { return EIcon._ARCHIVE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "AREA_CHART", {
            get: function () { return EIcon._AREA_CHART; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROWS", {
            get: function () { return EIcon._ARROWS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROWS_H", {
            get: function () { return EIcon._ARROWS_H; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROWS_V", {
            get: function () { return EIcon._ARROWS_V; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ASTERISK", {
            get: function () { return EIcon._ASTERISK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "AT", {
            get: function () { return EIcon._AT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "AUTOMOBILE", {
            get: function () { return EIcon._AUTOMOBILE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BAN", {
            get: function () { return EIcon._BAN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BANK", {
            get: function () { return EIcon._BANK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BAR_CHART", {
            get: function () { return EIcon._BAR_CHART; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BAR_CHART_O", {
            get: function () { return EIcon._BAR_CHART_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BARCODE", {
            get: function () { return EIcon._BARCODE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BARS", {
            get: function () { return EIcon._BARS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BED", {
            get: function () { return EIcon._BED; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BEER", {
            get: function () { return EIcon._BEER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BELL", {
            get: function () { return EIcon._BELL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BELL_O", {
            get: function () { return EIcon._BELL_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BELL_SLASH", {
            get: function () { return EIcon._BELL_SLASH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BELL_SLASH_O", {
            get: function () { return EIcon._BELL_SLASH_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BICYCLE", {
            get: function () { return EIcon._BICYCLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BINOCULARS", {
            get: function () { return EIcon._BINOCULARS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BIRTHDAY_CAKE", {
            get: function () { return EIcon._BIRTHDAY_CAKE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BOLT", {
            get: function () { return EIcon._BOLT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BOMB", {
            get: function () { return EIcon._BOMB; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BOOK", {
            get: function () { return EIcon._BOOK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BOOKMARK", {
            get: function () { return EIcon._BOOKMARK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BOOKMARK_O", {
            get: function () { return EIcon._BOOKMARK_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BRIEFCASE", {
            get: function () { return EIcon._BRIEFCASE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BUG", {
            get: function () { return EIcon._BUG; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BUILDING", {
            get: function () { return EIcon._BUILDING; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BUILDING_O", {
            get: function () { return EIcon._BUILDING_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BULLHORN", {
            get: function () { return EIcon._BULLHORN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BULLSEYE", {
            get: function () { return EIcon._BULLSEYE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BUS", {
            get: function () { return EIcon._BUS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CAB", {
            get: function () { return EIcon._CAB; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CALCULATOR", {
            get: function () { return EIcon._CALCULATOR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CALENDAR", {
            get: function () { return EIcon._CALENDAR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CAMERA", {
            get: function () { return EIcon._CAMERA; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CAMERA_RETRO", {
            get: function () { return EIcon._CAMERA_RETRO; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CAR", {
            get: function () { return EIcon._CAR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CARET_SQUARE_O_DOWN", {
            get: function () { return EIcon._CARET_SQUARE_O_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CARET_SQUARE_O_LEFT", {
            get: function () { return EIcon._CARET_SQUARE_O_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CARET_SQUARE_O_RIGHT", {
            get: function () { return EIcon._CARET_SQUARE_O_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CARET_SQUARE_O_UP", {
            get: function () { return EIcon._CARET_SQUARE_O_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CART_ARROW_DOWN", {
            get: function () { return EIcon._CART_ARROW_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CART_PLUS", {
            get: function () { return EIcon._CART_PLUS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CC", {
            get: function () { return EIcon._CC; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CERTIFICATE", {
            get: function () { return EIcon._CERTIFICATE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHECK", {
            get: function () { return EIcon._CHECK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHECK_CIRCLE", {
            get: function () { return EIcon._CHECK_CIRCLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHECK_CIRCLE_O", {
            get: function () { return EIcon._CHECK_CIRCLE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHECK_SQUARE", {
            get: function () { return EIcon._CHECK_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHECK_SQUARE_O", {
            get: function () { return EIcon._CHECK_SQUARE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHILD", {
            get: function () { return EIcon._CHILD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CIRCLE", {
            get: function () { return EIcon._CIRCLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CIRCLE_O", {
            get: function () { return EIcon._CIRCLE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CIRCLE_O_NOTCH", {
            get: function () { return EIcon._CIRCLE_O_NOTCH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CIRCLE_THIN", {
            get: function () { return EIcon._CIRCLE_THIN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CLOCK_O", {
            get: function () { return EIcon._CLOCK_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CLOSE", {
            get: function () { return EIcon._CLOSE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CLOUD", {
            get: function () { return EIcon._CLOUD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CLOUD_DOWNLOAD", {
            get: function () { return EIcon._CLOUD_DOWNLOAD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CLOUD_UPLOAD", {
            get: function () { return EIcon._CLOUD_UPLOAD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CODE", {
            get: function () { return EIcon._CODE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CODE_FORK", {
            get: function () { return EIcon._CODE_FORK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "COFFEE", {
            get: function () { return EIcon._COFFEE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "COG", {
            get: function () { return EIcon._COG; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "COGS", {
            get: function () { return EIcon._COGS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "COMMENT", {
            get: function () { return EIcon._COMMENT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "COMMENT_O", {
            get: function () { return EIcon._COMMENT_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "COMMENTS", {
            get: function () { return EIcon._COMMENTS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "COMMENTS_O", {
            get: function () { return EIcon._COMMENTS_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "COMPASS", {
            get: function () { return EIcon._COMPASS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "COPYRIGHT", {
            get: function () { return EIcon._COPYRIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CREDIT_CARD", {
            get: function () { return EIcon._CREDIT_CARD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CROP", {
            get: function () { return EIcon._CROP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CROSSHAIRS", {
            get: function () { return EIcon._CROSSHAIRS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CUBE", {
            get: function () { return EIcon._CUBE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CUBES", {
            get: function () { return EIcon._CUBES; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CUTLERY", {
            get: function () { return EIcon._CUTLERY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DASHBOARD", {
            get: function () { return EIcon._DASHBOARD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DATABASE", {
            get: function () { return EIcon._DATABASE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DESKTOP", {
            get: function () { return EIcon._DESKTOP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DIAMOND", {
            get: function () { return EIcon._DIAMOND; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DOT_CIRCLE_O", {
            get: function () { return EIcon._DOT_CIRCLE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DOWNLOAD", {
            get: function () { return EIcon._DOWNLOAD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EDIT", {
            get: function () { return EIcon._EDIT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ELLIPSIS_H", {
            get: function () { return EIcon._ELLIPSIS_H; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ELLIPSIS_V", {
            get: function () { return EIcon._ELLIPSIS_V; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ENVELOPE", {
            get: function () { return EIcon._ENVELOPE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ENVELOPE_O", {
            get: function () { return EIcon._ENVELOPE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ENVELOPE_SQUARE", {
            get: function () { return EIcon._ENVELOPE_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ERASER", {
            get: function () { return EIcon._ERASER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EXCHANGE", {
            get: function () { return EIcon._EXCHANGE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EXCLAMATION", {
            get: function () { return EIcon._EXCLAMATION; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EXCLAMATION_CIRCLE", {
            get: function () { return EIcon._EXCLAMATION_CIRCLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EXCLAMATION_TRIANGLE", {
            get: function () { return EIcon._EXCLAMATION_TRIANGLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EXTERNAL_LINK", {
            get: function () { return EIcon._EXTERNAL_LINK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EXTERNAL_LINK_SQUARE", {
            get: function () { return EIcon._EXTERNAL_LINK_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EYE", {
            get: function () { return EIcon._EYE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EYE_SLASH", {
            get: function () { return EIcon._EYE_SLASH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EYEDROPPER", {
            get: function () { return EIcon._EYEDROPPER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FAX", {
            get: function () { return EIcon._FAX; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FEED", {
            get: function () { return EIcon._FEED; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FEMALE", {
            get: function () { return EIcon._FEMALE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FIGHTER_JET", {
            get: function () { return EIcon._FIGHTER_JET; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_ARCHIVE_O", {
            get: function () { return EIcon._FILE_ARCHIVE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_AUDIO_O", {
            get: function () { return EIcon._FILE_AUDIO_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_CODE_O", {
            get: function () { return EIcon._FILE_CODE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_EXCEL_O", {
            get: function () { return EIcon._FILE_EXCEL_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_IMAGE_O", {
            get: function () { return EIcon._FILE_IMAGE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_MOVIE_O", {
            get: function () { return EIcon._FILE_MOVIE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_PDF_O", {
            get: function () { return EIcon._FILE_PDF_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_PHOTO_O", {
            get: function () { return EIcon._FILE_PHOTO_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_PICTURE_O", {
            get: function () { return EIcon._FILE_PICTURE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_POWERPOINT_O", {
            get: function () { return EIcon._FILE_POWERPOINT_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_SOUND_O", {
            get: function () { return EIcon._FILE_SOUND_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_VIDEO_O", {
            get: function () { return EIcon._FILE_VIDEO_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_WORD_O", {
            get: function () { return EIcon._FILE_WORD_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_ZIP_O", {
            get: function () { return EIcon._FILE_ZIP_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILM", {
            get: function () { return EIcon._FILM; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILTER", {
            get: function () { return EIcon._FILTER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FIRE", {
            get: function () { return EIcon._FIRE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FIRE_EXTINGUISHER", {
            get: function () { return EIcon._FIRE_EXTINGUISHER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FLAG", {
            get: function () { return EIcon._FLAG; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FLAG_CHECKERED", {
            get: function () { return EIcon._FLAG_CHECKERED; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FLAG_O", {
            get: function () { return EIcon._FLAG_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FLASH", {
            get: function () { return EIcon._FLASH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FLASK", {
            get: function () { return EIcon._FLASK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FOLDER", {
            get: function () { return EIcon._FOLDER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FOLDER_O", {
            get: function () { return EIcon._FOLDER_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FOLDER_OPEN", {
            get: function () { return EIcon._FOLDER_OPEN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FOLDER_OPEN_O", {
            get: function () { return EIcon._FOLDER_OPEN_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FROWN_O", {
            get: function () { return EIcon._FROWN_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FUTBOL_O", {
            get: function () { return EIcon._FUTBOL_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GAMEPAD", {
            get: function () { return EIcon._GAMEPAD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GAVEL", {
            get: function () { return EIcon._GAVEL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GEAR", {
            get: function () { return EIcon._GEAR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GEARS", {
            get: function () { return EIcon._GEARS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GIFT", {
            get: function () { return EIcon._GIFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GLASS", {
            get: function () { return EIcon._GLASS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GLOBE", {
            get: function () { return EIcon._GLOBE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GRADUATION_CAP", {
            get: function () { return EIcon._GRADUATION_CAP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GROUP", {
            get: function () { return EIcon._GROUP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HDD_O", {
            get: function () { return EIcon._HDD_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HEADPHONES", {
            get: function () { return EIcon._HEADPHONES; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HEART", {
            get: function () { return EIcon._HEART; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HEART_O", {
            get: function () { return EIcon._HEART_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HEARTBEAT", {
            get: function () { return EIcon._HEARTBEAT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HISTORY", {
            get: function () { return EIcon._HISTORY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HOME", {
            get: function () { return EIcon._HOME; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HOTEL", {
            get: function () { return EIcon._HOTEL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "IMAGE", {
            get: function () { return EIcon._IMAGE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "INBOX", {
            get: function () { return EIcon._INBOX; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "INFO", {
            get: function () { return EIcon._INFO; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "INFO_CIRCLE", {
            get: function () { return EIcon._INFO_CIRCLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "INSTITUTION", {
            get: function () { return EIcon._INSTITUTION; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "KEY", {
            get: function () { return EIcon._KEY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "KEYBOARD_O", {
            get: function () { return EIcon._KEYBOARD_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LANGUAGE", {
            get: function () { return EIcon._LANGUAGE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LAPTOP", {
            get: function () { return EIcon._LAPTOP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LEAF", {
            get: function () { return EIcon._LEAF; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LEGAL", {
            get: function () { return EIcon._LEGAL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LEMON_O", {
            get: function () { return EIcon._LEMON_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LEVEL_DOWN", {
            get: function () { return EIcon._LEVEL_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LEVEL_UP", {
            get: function () { return EIcon._LEVEL_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LIFE_BOUY", {
            get: function () { return EIcon._LIFE_BOUY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LIFE_BUOY", {
            get: function () { return EIcon._LIFE_BUOY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LIFE_RING", {
            get: function () { return EIcon._LIFE_RING; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LIFE_SAVER", {
            get: function () { return EIcon._LIFE_SAVER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LIGHTBULB_O", {
            get: function () { return EIcon._LIGHTBULB_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LINE_CHART", {
            get: function () { return EIcon._LINE_CHART; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LOCATION_ARROW", {
            get: function () { return EIcon._LOCATION_ARROW; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LOCK", {
            get: function () { return EIcon._LOCK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MAGIC", {
            get: function () { return EIcon._MAGIC; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MAGNET", {
            get: function () { return EIcon._MAGNET; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MAIL_FORWARD", {
            get: function () { return EIcon._MAIL_FORWARD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MAIL_REPLY", {
            get: function () { return EIcon._MAIL_REPLY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MAIL_REPLY_ALL", {
            get: function () { return EIcon._MAIL_REPLY_ALL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MALE", {
            get: function () { return EIcon._MALE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MAP_MARKER", {
            get: function () { return EIcon._MAP_MARKER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MEH_O", {
            get: function () { return EIcon._MEH_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MICROPHONE", {
            get: function () { return EIcon._MICROPHONE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MICROPHONE_SLASH", {
            get: function () { return EIcon._MICROPHONE_SLASH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MINUS", {
            get: function () { return EIcon._MINUS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MINUS_CIRCLE", {
            get: function () { return EIcon._MINUS_CIRCLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MINUS_SQUARE", {
            get: function () { return EIcon._MINUS_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MINUS_SQUARE_O", {
            get: function () { return EIcon._MINUS_SQUARE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MOBILE", {
            get: function () { return EIcon._MOBILE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MOBILE_PHONE", {
            get: function () { return EIcon._MOBILE_PHONE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MONEY", {
            get: function () { return EIcon._MONEY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MOON_O", {
            get: function () { return EIcon._MOON_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MORTAR_BOARD", {
            get: function () { return EIcon._MORTAR_BOARD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MOTORCYCLE", {
            get: function () { return EIcon._MOTORCYCLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MUSIC", {
            get: function () { return EIcon._MUSIC; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "NAVICON", {
            get: function () { return EIcon._NAVICON; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "NEWSPAPER_O", {
            get: function () { return EIcon._NEWSPAPER_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PAINT_BRUSH", {
            get: function () { return EIcon._PAINT_BRUSH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PAPER_PLANE", {
            get: function () { return EIcon._PAPER_PLANE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PAPER_PLANE_O", {
            get: function () { return EIcon._PAPER_PLANE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PAW", {
            get: function () { return EIcon._PAW; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PENCIL", {
            get: function () { return EIcon._PENCIL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PENCIL_SQUARE", {
            get: function () { return EIcon._PENCIL_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PENCIL_SQUARE_O", {
            get: function () { return EIcon._PENCIL_SQUARE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PHONE", {
            get: function () { return EIcon._PHONE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PHONE_SQUARE", {
            get: function () { return EIcon._PHONE_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PHOTO", {
            get: function () { return EIcon._PHOTO; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PICTURE_O", {
            get: function () { return EIcon._PICTURE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PIE_CHART", {
            get: function () { return EIcon._PIE_CHART; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PLANE", {
            get: function () { return EIcon._PLANE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PLUG", {
            get: function () { return EIcon._PLUG; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PLUS", {
            get: function () { return EIcon._PLUS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PLUS_CIRCLE", {
            get: function () { return EIcon._PLUS_CIRCLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PLUS_SQUARE", {
            get: function () { return EIcon._PLUS_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PLUS_SQUARE_O", {
            get: function () { return EIcon._PLUS_SQUARE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "POWER_OFF", {
            get: function () { return EIcon._POWER_OFF; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PRINT", {
            get: function () { return EIcon._PRINT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PUZZLE_PIECE", {
            get: function () { return EIcon._PUZZLE_PIECE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "QRCODE", {
            get: function () { return EIcon._QRCODE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "QUESTION", {
            get: function () { return EIcon._QUESTION; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "QUESTION_CIRCLE", {
            get: function () { return EIcon._QUESTION_CIRCLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "QUOTE_LEFT", {
            get: function () { return EIcon._QUOTE_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "QUOTE_RIGHT", {
            get: function () { return EIcon._QUOTE_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "RANDOM", {
            get: function () { return EIcon._RANDOM; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "RECYCLE", {
            get: function () { return EIcon._RECYCLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "REFRESH", {
            get: function () { return EIcon._REFRESH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "REMOVE", {
            get: function () { return EIcon._REMOVE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "REORDER", {
            get: function () { return EIcon._REORDER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "REPLY", {
            get: function () { return EIcon._REPLY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "REPLY_ALL", {
            get: function () { return EIcon._REPLY_ALL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "RETWEET", {
            get: function () { return EIcon._RETWEET; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ROAD", {
            get: function () { return EIcon._ROAD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ROCKET", {
            get: function () { return EIcon._ROCKET; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "RSS", {
            get: function () { return EIcon._RSS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "RSS_SQUARE", {
            get: function () { return EIcon._RSS_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SEARCH", {
            get: function () { return EIcon._SEARCH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SEARCH_MINUS", {
            get: function () { return EIcon._SEARCH_MINUS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SEARCH_PLUS", {
            get: function () { return EIcon._SEARCH_PLUS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SEND", {
            get: function () { return EIcon._SEND; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SEND_O", {
            get: function () { return EIcon._SEND_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SERVER", {
            get: function () { return EIcon._SERVER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SHARE", {
            get: function () { return EIcon._SHARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SHARE_ALT", {
            get: function () { return EIcon._SHARE_ALT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SHARE_ALT_SQUARE", {
            get: function () { return EIcon._SHARE_ALT_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SHARE_SQUARE", {
            get: function () { return EIcon._SHARE_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SHARE_SQUARE_O", {
            get: function () { return EIcon._SHARE_SQUARE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SHIELD", {
            get: function () { return EIcon._SHIELD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SHIP", {
            get: function () { return EIcon._SHIP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SHOPPING_CART", {
            get: function () { return EIcon._SHOPPING_CART; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SIGN_IN", {
            get: function () { return EIcon._SIGN_IN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SIGN_OUT", {
            get: function () { return EIcon._SIGN_OUT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SIGNAL", {
            get: function () { return EIcon._SIGNAL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SITEMAP", {
            get: function () { return EIcon._SITEMAP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SLIDERS", {
            get: function () { return EIcon._SLIDERS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SMILE_O", {
            get: function () { return EIcon._SMILE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SOCCER_BALL_O", {
            get: function () { return EIcon._SOCCER_BALL_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SORT", {
            get: function () { return EIcon._SORT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SORT_ALPHA_ASC", {
            get: function () { return EIcon._SORT_ALPHA_ASC; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SORT_ALPHA_DESC", {
            get: function () { return EIcon._SORT_ALPHA_DESC; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SORT_AMOUNT_ASC", {
            get: function () { return EIcon._SORT_AMOUNT_ASC; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SORT_AMOUNT_DESC", {
            get: function () { return EIcon._SORT_AMOUNT_DESC; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SORT_ASC", {
            get: function () { return EIcon._SORT_ASC; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SORT_DESC", {
            get: function () { return EIcon._SORT_DESC; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SORT_DOWN", {
            get: function () { return EIcon._SORT_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SORT_NUMERIC_ASC", {
            get: function () { return EIcon._SORT_NUMERIC_ASC; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SORT_NUMERIC_DESC", {
            get: function () { return EIcon._SORT_NUMERIC_DESC; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SORT_UP", {
            get: function () { return EIcon._SORT_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SPACE_SHUTTLE", {
            get: function () { return EIcon._SPACE_SHUTTLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SPINNER", {
            get: function () { return EIcon._SPINNER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SPOON", {
            get: function () { return EIcon._SPOON; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SQUARE", {
            get: function () { return EIcon._SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SQUARE_O", {
            get: function () { return EIcon._SQUARE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STAR", {
            get: function () { return EIcon._STAR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STAR_HALF", {
            get: function () { return EIcon._STAR_HALF; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STAR_HALF_EMPTY", {
            get: function () { return EIcon._STAR_HALF_EMPTY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STAR_HALF_FULL", {
            get: function () { return EIcon._STAR_HALF_FULL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STAR_HALF_O", {
            get: function () { return EIcon._STAR_HALF_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STAR_O", {
            get: function () { return EIcon._STAR_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STREET_VIEW", {
            get: function () { return EIcon._STREET_VIEW; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SUITCASE", {
            get: function () { return EIcon._SUITCASE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SUN_O", {
            get: function () { return EIcon._SUN_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SUPPORT", {
            get: function () { return EIcon._SUPPORT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TABLET", {
            get: function () { return EIcon._TABLET; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TACHOMETER", {
            get: function () { return EIcon._TACHOMETER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TAG", {
            get: function () { return EIcon._TAG; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TAGS", {
            get: function () { return EIcon._TAGS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TASKS", {
            get: function () { return EIcon._TASKS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TAXI", {
            get: function () { return EIcon._TAXI; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TERMINAL", {
            get: function () { return EIcon._TERMINAL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "THUMB_TACK", {
            get: function () { return EIcon._THUMB_TACK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "THUMBS_DOWN", {
            get: function () { return EIcon._THUMBS_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "THUMBS_O_DOWN", {
            get: function () { return EIcon._THUMBS_O_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "THUMBS_O_UP", {
            get: function () { return EIcon._THUMBS_O_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "THUMBS_UP", {
            get: function () { return EIcon._THUMBS_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TICKET", {
            get: function () { return EIcon._TICKET; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TIMES", {
            get: function () { return EIcon._TIMES; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TIMES_CIRCLE", {
            get: function () { return EIcon._TIMES_CIRCLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TIMES_CIRCLE_O", {
            get: function () { return EIcon._TIMES_CIRCLE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TINT", {
            get: function () { return EIcon._TINT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TOGGLE_DOWN", {
            get: function () { return EIcon._TOGGLE_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TOGGLE_LEFT", {
            get: function () { return EIcon._TOGGLE_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TOGGLE_OFF", {
            get: function () { return EIcon._TOGGLE_OFF; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TOGGLE_ON", {
            get: function () { return EIcon._TOGGLE_ON; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TOGGLE_RIGHT", {
            get: function () { return EIcon._TOGGLE_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TOGGLE_UP", {
            get: function () { return EIcon._TOGGLE_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TRASH", {
            get: function () { return EIcon._TRASH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TRASH_O", {
            get: function () { return EIcon._TRASH_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TREE", {
            get: function () { return EIcon._TREE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TROPHY", {
            get: function () { return EIcon._TROPHY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TRUCK", {
            get: function () { return EIcon._TRUCK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TTY", {
            get: function () { return EIcon._TTY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "UMBRELLA", {
            get: function () { return EIcon._UMBRELLA; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "UNIVERSITY", {
            get: function () { return EIcon._UNIVERSITY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "UNLOCK", {
            get: function () { return EIcon._UNLOCK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "UNLOCK_ALT", {
            get: function () { return EIcon._UNLOCK_ALT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "UNSORTED", {
            get: function () { return EIcon._UNSORTED; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "UPLOAD", {
            get: function () { return EIcon._UPLOAD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "USER", {
            get: function () { return EIcon._USER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "USER_PLUS", {
            get: function () { return EIcon._USER_PLUS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "USER_SECRET", {
            get: function () { return EIcon._USER_SECRET; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "USER_TIMES", {
            get: function () { return EIcon._USER_TIMES; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "USERS", {
            get: function () { return EIcon._USERS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "VIDEO_CAMERA", {
            get: function () { return EIcon._VIDEO_CAMERA; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "VOLUME_DOWN", {
            get: function () { return EIcon._VOLUME_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "VOLUME_OFF", {
            get: function () { return EIcon._VOLUME_OFF; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "VOLUME_UP", {
            get: function () { return EIcon._VOLUME_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "WARNING", {
            get: function () { return EIcon._WARNING; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "WHEELCHAIR", {
            get: function () { return EIcon._WHEELCHAIR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "WIFI", {
            get: function () { return EIcon._WIFI; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "WRENCH", {
            get: function () { return EIcon._WRENCH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HAND_O_DOWN", {
            get: function () { return EIcon._HAND_O_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HAND_O_LEFT", {
            get: function () { return EIcon._HAND_O_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HAND_O_RIGHT", {
            get: function () { return EIcon._HAND_O_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HAND_O_UP", {
            get: function () { return EIcon._HAND_O_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "AMBULANCE", {
            get: function () { return EIcon._AMBULANCE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SUBWAY", {
            get: function () { return EIcon._SUBWAY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TRAIN", {
            get: function () { return EIcon._TRAIN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "INTERSEX", {
            get: function () { return EIcon._INTERSEX; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MARS", {
            get: function () { return EIcon._MARS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MARS_DOUBLE", {
            get: function () { return EIcon._MARS_DOUBLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MARS_STROKE", {
            get: function () { return EIcon._MARS_STROKE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MARS_STROKE_H", {
            get: function () { return EIcon._MARS_STROKE_H; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MARS_STROKE_V", {
            get: function () { return EIcon._MARS_STROKE_V; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MERCURY", {
            get: function () { return EIcon._MERCURY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "NEUTER", {
            get: function () { return EIcon._NEUTER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TRANSGENDER", {
            get: function () { return EIcon._TRANSGENDER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TRANSGENDER_ALT", {
            get: function () { return EIcon._TRANSGENDER_ALT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "VENUS", {
            get: function () { return EIcon._VENUS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "VENUS_DOUBLE", {
            get: function () { return EIcon._VENUS_DOUBLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "VENUS_MARS", {
            get: function () { return EIcon._VENUS_MARS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE", {
            get: function () { return EIcon._FILE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_O", {
            get: function () { return EIcon._FILE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_TEXT", {
            get: function () { return EIcon._FILE_TEXT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILE_TEXT_O", {
            get: function () { return EIcon._FILE_TEXT_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CC_AMEX", {
            get: function () { return EIcon._CC_AMEX; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CC_DISCOVER", {
            get: function () { return EIcon._CC_DISCOVER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CC_MASTERCARD", {
            get: function () { return EIcon._CC_MASTERCARD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CC_PAYPAL", {
            get: function () { return EIcon._CC_PAYPAL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CC_STRIPE", {
            get: function () { return EIcon._CC_STRIPE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CC_VISA", {
            get: function () { return EIcon._CC_VISA; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GOOGLE_WALLET", {
            get: function () { return EIcon._GOOGLE_WALLET; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PAYPAL", {
            get: function () { return EIcon._PAYPAL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BITCOIN", {
            get: function () { return EIcon._BITCOIN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BTC", {
            get: function () { return EIcon._BTC; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CNY", {
            get: function () { return EIcon._CNY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DOLLAR", {
            get: function () { return EIcon._DOLLAR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EUR", {
            get: function () { return EIcon._EUR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EURO", {
            get: function () { return EIcon._EURO; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GBP", {
            get: function () { return EIcon._GBP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ILS", {
            get: function () { return EIcon._ILS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "INR", {
            get: function () { return EIcon._INR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "JPY", {
            get: function () { return EIcon._JPY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "KRW", {
            get: function () { return EIcon._KRW; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "RMB", {
            get: function () { return EIcon._RMB; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ROUBLE", {
            get: function () { return EIcon._ROUBLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "RUB", {
            get: function () { return EIcon._RUB; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "RUBLE", {
            get: function () { return EIcon._RUBLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "RUPEE", {
            get: function () { return EIcon._RUPEE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SHEKEL", {
            get: function () { return EIcon._SHEKEL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SHEQEL", {
            get: function () { return EIcon._SHEQEL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TRY", {
            get: function () { return EIcon._TRY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TURKISH_LIRA", {
            get: function () { return EIcon._TURKISH_LIRA; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "USD", {
            get: function () { return EIcon._USD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "WON", {
            get: function () { return EIcon._WON; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "YEN", {
            get: function () { return EIcon._YEN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ALIGN_CENTER", {
            get: function () { return EIcon._ALIGN_CENTER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ALIGN_JUSTIFY", {
            get: function () { return EIcon._ALIGN_JUSTIFY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ALIGN_LEFT", {
            get: function () { return EIcon._ALIGN_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ALIGN_RIGHT", {
            get: function () { return EIcon._ALIGN_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BOLD", {
            get: function () { return EIcon._BOLD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHAIN", {
            get: function () { return EIcon._CHAIN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHAIN_BROKEN", {
            get: function () { return EIcon._CHAIN_BROKEN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CLIPBOARD", {
            get: function () { return EIcon._CLIPBOARD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "COLUMNS", {
            get: function () { return EIcon._COLUMNS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "COPY", {
            get: function () { return EIcon._COPY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CUT", {
            get: function () { return EIcon._CUT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DEDENT", {
            get: function () { return EIcon._DEDENT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FILES_O", {
            get: function () { return EIcon._FILES_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FLOPPY_O", {
            get: function () { return EIcon._FLOPPY_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FONT", {
            get: function () { return EIcon._FONT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HEADER", {
            get: function () { return EIcon._HEADER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "INDENT", {
            get: function () { return EIcon._INDENT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ITALIC", {
            get: function () { return EIcon._ITALIC; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LINK", {
            get: function () { return EIcon._LINK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LIST", {
            get: function () { return EIcon._LIST; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LIST_ALT", {
            get: function () { return EIcon._LIST_ALT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LIST_OL", {
            get: function () { return EIcon._LIST_OL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LIST_UL", {
            get: function () { return EIcon._LIST_UL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "OUTDENT", {
            get: function () { return EIcon._OUTDENT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PAPERCLIP", {
            get: function () { return EIcon._PAPERCLIP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PARAGRAPH", {
            get: function () { return EIcon._PARAGRAPH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PASTE", {
            get: function () { return EIcon._PASTE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "REPEAT", {
            get: function () { return EIcon._REPEAT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ROTATE_LEFT", {
            get: function () { return EIcon._ROTATE_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ROTATE_RIGHT", {
            get: function () { return EIcon._ROTATE_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SAVE", {
            get: function () { return EIcon._SAVE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SCISSORS", {
            get: function () { return EIcon._SCISSORS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STRIKETHROUGH", {
            get: function () { return EIcon._STRIKETHROUGH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SUBSCRIPT", {
            get: function () { return EIcon._SUBSCRIPT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SUPERSCRIPT", {
            get: function () { return EIcon._SUPERSCRIPT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TABLE", {
            get: function () { return EIcon._TABLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TEXT_HEIGHT", {
            get: function () { return EIcon._TEXT_HEIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TEXT_WIDTH", {
            get: function () { return EIcon._TEXT_WIDTH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TH", {
            get: function () { return EIcon._TH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TH_LARGE", {
            get: function () { return EIcon._TH_LARGE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TH_LIST", {
            get: function () { return EIcon._TH_LIST; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "UNDERLINE", {
            get: function () { return EIcon._UNDERLINE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "UNDO", {
            get: function () { return EIcon._UNDO; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "UNLINK", {
            get: function () { return EIcon._UNLINK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ANGLE_DOUBLE_DOWN", {
            get: function () { return EIcon._ANGLE_DOUBLE_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ANGLE_DOUBLE_LEFT", {
            get: function () { return EIcon._ANGLE_DOUBLE_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ANGLE_DOUBLE_RIGHT", {
            get: function () { return EIcon._ANGLE_DOUBLE_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ANGLE_DOUBLE_UP", {
            get: function () { return EIcon._ANGLE_DOUBLE_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ANGLE_DOWN", {
            get: function () { return EIcon._ANGLE_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ANGLE_LEFT", {
            get: function () { return EIcon._ANGLE_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ANGLE_RIGHT", {
            get: function () { return EIcon._ANGLE_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ANGLE_UP", {
            get: function () { return EIcon._ANGLE_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROW_CIRCLE_DOWN", {
            get: function () { return EIcon._ARROW_CIRCLE_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROW_CIRCLE_LEFT", {
            get: function () { return EIcon._ARROW_CIRCLE_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROW_CIRCLE_O_DOWN", {
            get: function () { return EIcon._ARROW_CIRCLE_O_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROW_CIRCLE_O_LEFT", {
            get: function () { return EIcon._ARROW_CIRCLE_O_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROW_CIRCLE_O_RIGHT", {
            get: function () { return EIcon._ARROW_CIRCLE_O_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROW_CIRCLE_O_UP", {
            get: function () { return EIcon._ARROW_CIRCLE_O_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROW_CIRCLE_RIGHT", {
            get: function () { return EIcon._ARROW_CIRCLE_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROW_CIRCLE_UP", {
            get: function () { return EIcon._ARROW_CIRCLE_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROW_DOWN", {
            get: function () { return EIcon._ARROW_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROW_LEFT", {
            get: function () { return EIcon._ARROW_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROW_RIGHT", {
            get: function () { return EIcon._ARROW_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROW_UP", {
            get: function () { return EIcon._ARROW_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ARROWS_ALT", {
            get: function () { return EIcon._ARROWS_ALT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CARET_DOWN", {
            get: function () { return EIcon._CARET_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CARET_LEFT", {
            get: function () { return EIcon._CARET_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CARET_RIGHT", {
            get: function () { return EIcon._CARET_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CARET_UP", {
            get: function () { return EIcon._CARET_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHEVRON_CIRCLE_DOWN", {
            get: function () { return EIcon._CHEVRON_CIRCLE_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHEVRON_CIRCLE_LEFT", {
            get: function () { return EIcon._CHEVRON_CIRCLE_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHEVRON_CIRCLE_RIGHT", {
            get: function () { return EIcon._CHEVRON_CIRCLE_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHEVRON_CIRCLE_UP", {
            get: function () { return EIcon._CHEVRON_CIRCLE_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHEVRON_DOWN", {
            get: function () { return EIcon._CHEVRON_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHEVRON_LEFT", {
            get: function () { return EIcon._CHEVRON_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHEVRON_RIGHT", {
            get: function () { return EIcon._CHEVRON_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CHEVRON_UP", {
            get: function () { return EIcon._CHEVRON_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LONG_ARROW_DOWN", {
            get: function () { return EIcon._LONG_ARROW_DOWN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LONG_ARROW_LEFT", {
            get: function () { return EIcon._LONG_ARROW_LEFT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LONG_ARROW_RIGHT", {
            get: function () { return EIcon._LONG_ARROW_RIGHT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LONG_ARROW_UP", {
            get: function () { return EIcon._LONG_ARROW_UP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BACKWARD", {
            get: function () { return EIcon._BACKWARD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "COMPRESS", {
            get: function () { return EIcon._COMPRESS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EJECT", {
            get: function () { return EIcon._EJECT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EXPAND", {
            get: function () { return EIcon._EXPAND; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FAST_BACKWARD", {
            get: function () { return EIcon._FAST_BACKWARD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FAST_FORWARD", {
            get: function () { return EIcon._FAST_FORWARD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FORWARD", {
            get: function () { return EIcon._FORWARD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PAUSE", {
            get: function () { return EIcon._PAUSE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PLAY", {
            get: function () { return EIcon._PLAY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PLAY_CIRCLE", {
            get: function () { return EIcon._PLAY_CIRCLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PLAY_CIRCLE_O", {
            get: function () { return EIcon._PLAY_CIRCLE_O; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STEP_BACKWARD", {
            get: function () { return EIcon._STEP_BACKWARD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STEP_FORWARD", {
            get: function () { return EIcon._STEP_FORWARD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STOP", {
            get: function () { return EIcon._STOP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "YOUTUBE_PLAY", {
            get: function () { return EIcon._YOUTUBE_PLAY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ADN", {
            get: function () { return EIcon._ADN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ANDROID", {
            get: function () { return EIcon._ANDROID; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "ANGELLIST", {
            get: function () { return EIcon._ANGELLIST; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "APPLE", {
            get: function () { return EIcon._APPLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BEHANCE", {
            get: function () { return EIcon._BEHANCE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BEHANCE_SQUARE", {
            get: function () { return EIcon._BEHANCE_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BITBUCKET", {
            get: function () { return EIcon._BITBUCKET; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BITBUCKET_SQUARE", {
            get: function () { return EIcon._BITBUCKET_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "BUYSELLADS", {
            get: function () { return EIcon._BUYSELLADS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CODEPEN", {
            get: function () { return EIcon._CODEPEN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CONNECTDEVELOP", {
            get: function () { return EIcon._CONNECTDEVELOP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "CSS3", {
            get: function () { return EIcon._CSS3; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DASHCUBE", {
            get: function () { return EIcon._DASHCUBE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DELICIOUS", {
            get: function () { return EIcon._DELICIOUS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DEVIANTART", {
            get: function () { return EIcon._DEVIANTART; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DIGG", {
            get: function () { return EIcon._DIGG; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DRIBBBLE", {
            get: function () { return EIcon._DRIBBBLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DROPBOX", {
            get: function () { return EIcon._DROPBOX; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "DRUPAL", {
            get: function () { return EIcon._DRUPAL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "EMPIRE", {
            get: function () { return EIcon._EMPIRE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FACEBOOK", {
            get: function () { return EIcon._FACEBOOK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FACEBOOK_F", {
            get: function () { return EIcon._FACEBOOK_F; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FACEBOOK_OFFICIAL", {
            get: function () { return EIcon._FACEBOOK_OFFICIAL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FACEBOOK_SQUARE", {
            get: function () { return EIcon._FACEBOOK_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FLICKR", {
            get: function () { return EIcon._FLICKR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FORUMBEE", {
            get: function () { return EIcon._FORUMBEE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "FOURSQUARE", {
            get: function () { return EIcon._FOURSQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GE", {
            get: function () { return EIcon._GE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GIT", {
            get: function () { return EIcon._GIT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GIT_SQUARE", {
            get: function () { return EIcon._GIT_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GITHUB", {
            get: function () { return EIcon._GITHUB; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GITHUB_ALT", {
            get: function () { return EIcon._GITHUB_ALT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GITHUB_SQUARE", {
            get: function () { return EIcon._GITHUB_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GITTIP", {
            get: function () { return EIcon._GITTIP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GOOGLE", {
            get: function () { return EIcon._GOOGLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GOOGLE_PLUS", {
            get: function () { return EIcon._GOOGLE_PLUS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GOOGLE_PLUS_SQUARE", {
            get: function () { return EIcon._GOOGLE_PLUS_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "GRATIPAY", {
            get: function () { return EIcon._GRATIPAY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HACKER_NEWS", {
            get: function () { return EIcon._HACKER_NEWS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "HTML5", {
            get: function () { return EIcon._HTML5; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "INSTAGRAM", {
            get: function () { return EIcon._INSTAGRAM; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "IOXHOST", {
            get: function () { return EIcon._IOXHOST; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "JOOMLA", {
            get: function () { return EIcon._JOOMLA; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "JSFIDDLE", {
            get: function () { return EIcon._JSFIDDLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LASTFM", {
            get: function () { return EIcon._LASTFM; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LASTFM_SQUARE", {
            get: function () { return EIcon._LASTFM_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LEANPUB", {
            get: function () { return EIcon._LEANPUB; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LINKEDIN", {
            get: function () { return EIcon._LINKEDIN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LINKEDIN_SQUARE", {
            get: function () { return EIcon._LINKEDIN_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "LINUX", {
            get: function () { return EIcon._LINUX; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MAXCDN", {
            get: function () { return EIcon._MAXCDN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MEANPATH", {
            get: function () { return EIcon._MEANPATH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "MEDIUM", {
            get: function () { return EIcon._MEDIUM; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "OPENID", {
            get: function () { return EIcon._OPENID; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PAGELINES", {
            get: function () { return EIcon._PAGELINES; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PIED_PIPER", {
            get: function () { return EIcon._PIED_PIPER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PIED_PIPER_ALT", {
            get: function () { return EIcon._PIED_PIPER_ALT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PINTEREST", {
            get: function () { return EIcon._PINTEREST; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PINTEREST_P", {
            get: function () { return EIcon._PINTEREST_P; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "PINTEREST_SQUARE", {
            get: function () { return EIcon._PINTEREST_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "QQ", {
            get: function () { return EIcon._QQ; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "RA", {
            get: function () { return EIcon._RA; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "REBEL", {
            get: function () { return EIcon._REBEL; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "REDDIT", {
            get: function () { return EIcon._REDDIT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "REDDIT_SQUARE", {
            get: function () { return EIcon._REDDIT_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "RENREN", {
            get: function () { return EIcon._RENREN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SELLSY", {
            get: function () { return EIcon._SELLSY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SHIRTSINBULK", {
            get: function () { return EIcon._SHIRTSINBULK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SIMPLYBUILT", {
            get: function () { return EIcon._SIMPLYBUILT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SKYATLAS", {
            get: function () { return EIcon._SKYATLAS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SKYPE", {
            get: function () { return EIcon._SKYPE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SLACK", {
            get: function () { return EIcon._SLACK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SLIDESHARE", {
            get: function () { return EIcon._SLIDESHARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SOUNDCLOUD", {
            get: function () { return EIcon._SOUNDCLOUD; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "SPOTIFY", {
            get: function () { return EIcon._SPOTIFY; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STACK_EXCHANGE", {
            get: function () { return EIcon._STACK_EXCHANGE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STACK_OVERFLOW", {
            get: function () { return EIcon._STACK_OVERFLOW; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STEAM", {
            get: function () { return EIcon._STEAM; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STEAM_SQUARE", {
            get: function () { return EIcon._STEAM_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STUMBLEUPON", {
            get: function () { return EIcon._STUMBLEUPON; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "STUMBLEUPON_CIRCLE", {
            get: function () { return EIcon._STUMBLEUPON_CIRCLE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TENCENT_WEIBO", {
            get: function () { return EIcon._TENCENT_WEIBO; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TRELLO", {
            get: function () { return EIcon._TRELLO; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TUMBLR", {
            get: function () { return EIcon._TUMBLR; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TUMBLR_SQUARE", {
            get: function () { return EIcon._TUMBLR_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TWITCH", {
            get: function () { return EIcon._TWITCH; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TWITTER", {
            get: function () { return EIcon._TWITTER; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "TWITTER_SQUARE", {
            get: function () { return EIcon._TWITTER_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "VIACOIN", {
            get: function () { return EIcon._VIACOIN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "VIMEO_SQUARE", {
            get: function () { return EIcon._VIMEO_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "VINE", {
            get: function () { return EIcon._VINE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "VK", {
            get: function () { return EIcon._VK; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "WECHAT", {
            get: function () { return EIcon._WECHAT; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "WEIBO", {
            get: function () { return EIcon._WEIBO; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "WEIXIN", {
            get: function () { return EIcon._WEIXIN; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "WHATSAPP", {
            get: function () { return EIcon._WHATSAPP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "WINDOWS", {
            get: function () { return EIcon._WINDOWS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "WORDPRESS", {
            get: function () { return EIcon._WORDPRESS; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "XING", {
            get: function () { return EIcon._XING; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "XING_SQUARE", {
            get: function () { return EIcon._XING_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "Y_COMBINATOR_SQUARE", {
            get: function () { return EIcon._Y_COMBINATOR_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "YAHOO", {
            get: function () { return EIcon._YAHOO; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "YC_SQUARE", {
            get: function () { return EIcon._YC_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "YELP", {
            get: function () { return EIcon._YELP; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "YOUTUBE", {
            get: function () { return EIcon._YOUTUBE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon, "YOUTUBE_SQUARE", {
            get: function () { return EIcon._YOUTUBE_SQUARE; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EIcon.prototype, "className", {
            get: function () {
                return this._value;
            },
            enumerable: true,
            configurable: true
        });
        return EIcon;
    }());
    EIcon.__500PX = new EIcon("fa-500px");
    EIcon._AMAZON = new EIcon("fa-amazon");
    EIcon._BALANCE_SCALE = new EIcon("fa-balance-scale");
    EIcon._BATTERY_0 = new EIcon("fa-battery-0");
    EIcon._BATTERY_1 = new EIcon("fa-battery-1");
    EIcon._BATTERY_2 = new EIcon("fa-battery-2");
    EIcon._BATTERY_3 = new EIcon("fa-battery-3");
    EIcon._BATTERY_4 = new EIcon("fa-battery-4");
    EIcon._BATTERY_EMPTY = new EIcon("fa-battery-empty");
    EIcon._BATTERY_FULL = new EIcon("fa-battery-full");
    EIcon._BATTERY_HALF = new EIcon("fa-battery-half");
    EIcon._BATTERY_QUARTER = new EIcon("fa-battery-quarter");
    EIcon._BATTERY_THREE_QUARTERS = new EIcon("fa-battery-three-quarters");
    EIcon._BLACK_TIE = new EIcon("fa-black-tie");
    EIcon._CALENDAR_CHECK_O = new EIcon("fa-calendar-check-o");
    EIcon._CALENDAR_MINUS_O = new EIcon("fa-calendar-minus-o");
    EIcon._CALENDAR_PLUS_O = new EIcon("fa-calendar-plus-o");
    EIcon._CALENDAR_TIMES_O = new EIcon("fa-calendar-times-o");
    EIcon._CC_DINERS_CLUB = new EIcon("fa-cc-diners-club");
    EIcon._CC_JCB = new EIcon("fa-cc-jcb");
    EIcon._CHROME = new EIcon("fa-chrome");
    EIcon._CLONE = new EIcon("fa-clone");
    EIcon._COMMENTING = new EIcon("fa-commenting");
    EIcon._COMMENTING_O = new EIcon("fa-commenting-o");
    EIcon._CONTAO = new EIcon("fa-contao");
    EIcon._CREATIVE_COMMONS = new EIcon("fa-creative-commons");
    EIcon._EXPEDITEDSSL = new EIcon("fa-expeditedssl");
    EIcon._FIREFOX = new EIcon("fa-firefox");
    EIcon._FONTICONS = new EIcon("fa-fonticons");
    EIcon._GENDERLESS = new EIcon("fa-genderless");
    EIcon._GET_POCKET = new EIcon("fa-get-pocket");
    EIcon._GG = new EIcon("fa-gg");
    EIcon._GG_CIRCLE = new EIcon("fa-gg-circle");
    EIcon._HAND_GRAB_O = new EIcon("fa-hand-grab-o");
    EIcon._HAND_LIZARD_O = new EIcon("fa-hand-lizard-o");
    EIcon._HAND_PAPER_O = new EIcon("fa-hand-paper-o");
    EIcon._HAND_PEACE_O = new EIcon("fa-hand-peace-o");
    EIcon._HAND_POINTER_O = new EIcon("fa-hand-pointer-o");
    EIcon._HAND_ROCK_O = new EIcon("fa-hand-rock-o");
    EIcon._HAND_SCISSORS_O = new EIcon("fa-hand-scissors-o");
    EIcon._HAND_SPOCK_O = new EIcon("fa-hand-spock-o");
    EIcon._HAND_STOP_O = new EIcon("fa-hand-stop-o");
    EIcon._HOURGLASS = new EIcon("fa-hourglass");
    EIcon._HOURGLASS_1 = new EIcon("fa-hourglass-1");
    EIcon._HOURGLASS_2 = new EIcon("fa-hourglass-2");
    EIcon._HOURGLASS_3 = new EIcon("fa-hourglass-3");
    EIcon._HOURGLASS_END = new EIcon("fa-hourglass-end");
    EIcon._HOURGLASS_HALF = new EIcon("fa-hourglass-half");
    EIcon._HOURGLASS_O = new EIcon("fa-hourglass-o");
    EIcon._HOURGLASS_START = new EIcon("fa-hourglass-start");
    EIcon._HOUZZ = new EIcon("fa-houzz");
    EIcon._I_CURSOR = new EIcon("fa-i-cursor");
    EIcon._INDUSTRY = new EIcon("fa-industry");
    EIcon._INTERNET_EXPLORER = new EIcon("fa-internet-explorer");
    EIcon._MAP = new EIcon("fa-map");
    EIcon._MAP_O = new EIcon("fa-map-o");
    EIcon._MAP_PIN = new EIcon("fa-map-pin");
    EIcon._MAP_SIGNS = new EIcon("fa-map-signs");
    EIcon._MOUSE_POINTER = new EIcon("fa-mouse-pointer");
    EIcon._OBJECT_GROUP = new EIcon("fa-object-group");
    EIcon._OBJECT_UNGROUP = new EIcon("fa-object-ungroup");
    EIcon._ODNOKLASSNIKI = new EIcon("fa-odnoklassniki");
    EIcon._ODNOKLASSNIKI_SQUARE = new EIcon("fa-odnoklassniki-square");
    EIcon._OPENCART = new EIcon("fa-opencart");
    EIcon._OPERA = new EIcon("fa-opera");
    EIcon._OPTIN_MONSTER = new EIcon("fa-optin-monster");
    EIcon._REGISTERED = new EIcon("fa-registered");
    EIcon._SAFARI = new EIcon("fa-safari");
    EIcon._STICKY_NOTE = new EIcon("fa-sticky-note");
    EIcon._STICKY_NOTE_O = new EIcon("fa-sticky-note-o");
    EIcon._TELEVISION = new EIcon("fa-television");
    EIcon._TRADEMARK = new EIcon("fa-trademark");
    EIcon._TRIPADVISOR = new EIcon("fa-tripadvisor");
    EIcon._TV = new EIcon("fa-tv");
    EIcon._VIMEO = new EIcon("fa-vimeo");
    EIcon._WIKIPEDIA_W = new EIcon("fa-wikipedia-w");
    EIcon._Y_COMBINATOR = new EIcon("fa-y-combinator");
    EIcon._YC = new EIcon("fa-yc");
    EIcon._ADJUST = new EIcon("fa-adjust");
    EIcon._ANCHOR = new EIcon("fa-anchor");
    EIcon._ARCHIVE = new EIcon("fa-archive");
    EIcon._AREA_CHART = new EIcon("fa-area-chart");
    EIcon._ARROWS = new EIcon("fa-arrows");
    EIcon._ARROWS_H = new EIcon("fa-arrows-h");
    EIcon._ARROWS_V = new EIcon("fa-arrows-v");
    EIcon._ASTERISK = new EIcon("fa-asterisk");
    EIcon._AT = new EIcon("fa-at");
    EIcon._AUTOMOBILE = new EIcon("fa-automobile");
    EIcon._BAN = new EIcon("fa-ban");
    EIcon._BANK = new EIcon("fa-bank");
    EIcon._BAR_CHART = new EIcon("fa-bar-chart");
    EIcon._BAR_CHART_O = new EIcon("fa-bar-chart-o");
    EIcon._BARCODE = new EIcon("fa-barcode");
    EIcon._BARS = new EIcon("fa-bars");
    EIcon._BED = new EIcon("fa-bed");
    EIcon._BEER = new EIcon("fa-beer");
    EIcon._BELL = new EIcon("fa-bell");
    EIcon._BELL_O = new EIcon("fa-bell-o");
    EIcon._BELL_SLASH = new EIcon("fa-bell-slash");
    EIcon._BELL_SLASH_O = new EIcon("fa-bell-slash-o");
    EIcon._BICYCLE = new EIcon("fa-bicycle");
    EIcon._BINOCULARS = new EIcon("fa-binoculars");
    EIcon._BIRTHDAY_CAKE = new EIcon("fa-birthday-cake");
    EIcon._BOLT = new EIcon("fa-bolt");
    EIcon._BOMB = new EIcon("fa-bomb");
    EIcon._BOOK = new EIcon("fa-book");
    EIcon._BOOKMARK = new EIcon("fa-bookmark");
    EIcon._BOOKMARK_O = new EIcon("fa-bookmark-o");
    EIcon._BRIEFCASE = new EIcon("fa-briefcase");
    EIcon._BUG = new EIcon("fa-bug");
    EIcon._BUILDING = new EIcon("fa-building");
    EIcon._BUILDING_O = new EIcon("fa-building-o");
    EIcon._BULLHORN = new EIcon("fa-bullhorn");
    EIcon._BULLSEYE = new EIcon("fa-bullseye");
    EIcon._BUS = new EIcon("fa-bus");
    EIcon._CAB = new EIcon("fa-cab");
    EIcon._CALCULATOR = new EIcon("fa-calculator");
    EIcon._CALENDAR = new EIcon("fa-calendar");
    EIcon._CAMERA = new EIcon("fa-camera");
    EIcon._CAMERA_RETRO = new EIcon("fa-camera-retro");
    EIcon._CAR = new EIcon("fa-car");
    EIcon._CARET_SQUARE_O_DOWN = new EIcon("fa-caret-square-o-down");
    EIcon._CARET_SQUARE_O_LEFT = new EIcon("fa-caret-square-o-left");
    EIcon._CARET_SQUARE_O_RIGHT = new EIcon("fa-caret-square-o-right");
    EIcon._CARET_SQUARE_O_UP = new EIcon("fa-caret-square-o-up");
    EIcon._CART_ARROW_DOWN = new EIcon("fa-cart-arrow-down");
    EIcon._CART_PLUS = new EIcon("fa-cart-plus");
    EIcon._CC = new EIcon("fa-cc");
    EIcon._CERTIFICATE = new EIcon("fa-certificate");
    EIcon._CHECK = new EIcon("fa-check");
    EIcon._CHECK_CIRCLE = new EIcon("fa-check-circle");
    EIcon._CHECK_CIRCLE_O = new EIcon("fa-check-circle-o");
    EIcon._CHECK_SQUARE = new EIcon("fa-check-square");
    EIcon._CHECK_SQUARE_O = new EIcon("fa-check-square-o");
    EIcon._CHILD = new EIcon("fa-child");
    EIcon._CIRCLE = new EIcon("fa-circle");
    EIcon._CIRCLE_O = new EIcon("fa-circle-o");
    EIcon._CIRCLE_O_NOTCH = new EIcon("fa-circle-o-notch");
    EIcon._CIRCLE_THIN = new EIcon("fa-circle-thin");
    EIcon._CLOCK_O = new EIcon("fa-clock-o");
    EIcon._CLOSE = new EIcon("fa-close");
    EIcon._CLOUD = new EIcon("fa-cloud");
    EIcon._CLOUD_DOWNLOAD = new EIcon("fa-cloud-download");
    EIcon._CLOUD_UPLOAD = new EIcon("fa-cloud-upload");
    EIcon._CODE = new EIcon("fa-code");
    EIcon._CODE_FORK = new EIcon("fa-code-fork");
    EIcon._COFFEE = new EIcon("fa-coffee");
    EIcon._COG = new EIcon("fa-cog");
    EIcon._COGS = new EIcon("fa-cogs");
    EIcon._COMMENT = new EIcon("fa-comment");
    EIcon._COMMENT_O = new EIcon("fa-comment-o");
    EIcon._COMMENTS = new EIcon("fa-comments");
    EIcon._COMMENTS_O = new EIcon("fa-comments-o");
    EIcon._COMPASS = new EIcon("fa-compass");
    EIcon._COPYRIGHT = new EIcon("fa-copyright");
    EIcon._CREDIT_CARD = new EIcon("fa-credit-card");
    EIcon._CROP = new EIcon("fa-crop");
    EIcon._CROSSHAIRS = new EIcon("fa-crosshairs");
    EIcon._CUBE = new EIcon("fa-cube");
    EIcon._CUBES = new EIcon("fa-cubes");
    EIcon._CUTLERY = new EIcon("fa-cutlery");
    EIcon._DASHBOARD = new EIcon("fa-dashboard");
    EIcon._DATABASE = new EIcon("fa-database");
    EIcon._DESKTOP = new EIcon("fa-desktop");
    EIcon._DIAMOND = new EIcon("fa-diamond");
    EIcon._DOT_CIRCLE_O = new EIcon("fa-dot-circle-o");
    EIcon._DOWNLOAD = new EIcon("fa-download");
    EIcon._EDIT = new EIcon("fa-edit");
    EIcon._ELLIPSIS_H = new EIcon("fa-ellipsis-h");
    EIcon._ELLIPSIS_V = new EIcon("fa-ellipsis-v");
    EIcon._ENVELOPE = new EIcon("fa-envelope");
    EIcon._ENVELOPE_O = new EIcon("fa-envelope-o");
    EIcon._ENVELOPE_SQUARE = new EIcon("fa-envelope-square");
    EIcon._ERASER = new EIcon("fa-eraser");
    EIcon._EXCHANGE = new EIcon("fa-exchange");
    EIcon._EXCLAMATION = new EIcon("fa-exclamation");
    EIcon._EXCLAMATION_CIRCLE = new EIcon("fa-exclamation-circle");
    EIcon._EXCLAMATION_TRIANGLE = new EIcon("fa-exclamation-triangle");
    EIcon._EXTERNAL_LINK = new EIcon("fa-external-link");
    EIcon._EXTERNAL_LINK_SQUARE = new EIcon("fa-external-link-square");
    EIcon._EYE = new EIcon("fa-eye");
    EIcon._EYE_SLASH = new EIcon("fa-eye-slash");
    EIcon._EYEDROPPER = new EIcon("fa-eyedropper");
    EIcon._FAX = new EIcon("fa-fax");
    EIcon._FEED = new EIcon("fa-feed");
    EIcon._FEMALE = new EIcon("fa-female");
    EIcon._FIGHTER_JET = new EIcon("fa-fighter-jet");
    EIcon._FILE_ARCHIVE_O = new EIcon("fa-file-archive-o");
    EIcon._FILE_AUDIO_O = new EIcon("fa-file-audio-o");
    EIcon._FILE_CODE_O = new EIcon("fa-file-code-o");
    EIcon._FILE_EXCEL_O = new EIcon("fa-file-excel-o");
    EIcon._FILE_IMAGE_O = new EIcon("fa-file-image-o");
    EIcon._FILE_MOVIE_O = new EIcon("fa-file-movie-o");
    EIcon._FILE_PDF_O = new EIcon("fa-file-pdf-o");
    EIcon._FILE_PHOTO_O = new EIcon("fa-file-photo-o");
    EIcon._FILE_PICTURE_O = new EIcon("fa-file-picture-o");
    EIcon._FILE_POWERPOINT_O = new EIcon("fa-file-powerpoint-o");
    EIcon._FILE_SOUND_O = new EIcon("fa-file-sound-o");
    EIcon._FILE_VIDEO_O = new EIcon("fa-file-video-o");
    EIcon._FILE_WORD_O = new EIcon("fa-file-word-o");
    EIcon._FILE_ZIP_O = new EIcon("fa-file-zip-o");
    EIcon._FILM = new EIcon("fa-film");
    EIcon._FILTER = new EIcon("fa-filter");
    EIcon._FIRE = new EIcon("fa-fire");
    EIcon._FIRE_EXTINGUISHER = new EIcon("fa-fire-extinguisher");
    EIcon._FLAG = new EIcon("fa-flag");
    EIcon._FLAG_CHECKERED = new EIcon("fa-flag-checkered");
    EIcon._FLAG_O = new EIcon("fa-flag-o");
    EIcon._FLASH = new EIcon("fa-flash");
    EIcon._FLASK = new EIcon("fa-flask");
    EIcon._FOLDER = new EIcon("fa-folder");
    EIcon._FOLDER_O = new EIcon("fa-folder-o");
    EIcon._FOLDER_OPEN = new EIcon("fa-folder-open");
    EIcon._FOLDER_OPEN_O = new EIcon("fa-folder-open-o");
    EIcon._FROWN_O = new EIcon("fa-frown-o");
    EIcon._FUTBOL_O = new EIcon("fa-futbol-o");
    EIcon._GAMEPAD = new EIcon("fa-gamepad");
    EIcon._GAVEL = new EIcon("fa-gavel");
    EIcon._GEAR = new EIcon("fa-gear");
    EIcon._GEARS = new EIcon("fa-gears");
    EIcon._GIFT = new EIcon("fa-gift");
    EIcon._GLASS = new EIcon("fa-glass");
    EIcon._GLOBE = new EIcon("fa-globe");
    EIcon._GRADUATION_CAP = new EIcon("fa-graduation-cap");
    EIcon._GROUP = new EIcon("fa-group");
    EIcon._HDD_O = new EIcon("fa-hdd-o");
    EIcon._HEADPHONES = new EIcon("fa-headphones");
    EIcon._HEART = new EIcon("fa-heart");
    EIcon._HEART_O = new EIcon("fa-heart-o");
    EIcon._HEARTBEAT = new EIcon("fa-heartbeat");
    EIcon._HISTORY = new EIcon("fa-history");
    EIcon._HOME = new EIcon("fa-home");
    EIcon._HOTEL = new EIcon("fa-hotel");
    EIcon._IMAGE = new EIcon("fa-image");
    EIcon._INBOX = new EIcon("fa-inbox");
    EIcon._INFO = new EIcon("fa-info");
    EIcon._INFO_CIRCLE = new EIcon("fa-info-circle");
    EIcon._INSTITUTION = new EIcon("fa-institution");
    EIcon._KEY = new EIcon("fa-key");
    EIcon._KEYBOARD_O = new EIcon("fa-keyboard-o");
    EIcon._LANGUAGE = new EIcon("fa-language");
    EIcon._LAPTOP = new EIcon("fa-laptop");
    EIcon._LEAF = new EIcon("fa-leaf");
    EIcon._LEGAL = new EIcon("fa-legal");
    EIcon._LEMON_O = new EIcon("fa-lemon-o");
    EIcon._LEVEL_DOWN = new EIcon("fa-level-down");
    EIcon._LEVEL_UP = new EIcon("fa-level-up");
    EIcon._LIFE_BOUY = new EIcon("fa-life-bouy");
    EIcon._LIFE_BUOY = new EIcon("fa-life-buoy");
    EIcon._LIFE_RING = new EIcon("fa-life-ring");
    EIcon._LIFE_SAVER = new EIcon("fa-life-saver");
    EIcon._LIGHTBULB_O = new EIcon("fa-lightbulb-o");
    EIcon._LINE_CHART = new EIcon("fa-line-chart");
    EIcon._LOCATION_ARROW = new EIcon("fa-location-arrow");
    EIcon._LOCK = new EIcon("fa-lock");
    EIcon._MAGIC = new EIcon("fa-magic");
    EIcon._MAGNET = new EIcon("fa-magnet");
    EIcon._MAIL_FORWARD = new EIcon("fa-mail-forward");
    EIcon._MAIL_REPLY = new EIcon("fa-mail-reply");
    EIcon._MAIL_REPLY_ALL = new EIcon("fa-mail-reply-all");
    EIcon._MALE = new EIcon("fa-male");
    EIcon._MAP_MARKER = new EIcon("fa-map-marker");
    EIcon._MEH_O = new EIcon("fa-meh-o");
    EIcon._MICROPHONE = new EIcon("fa-microphone");
    EIcon._MICROPHONE_SLASH = new EIcon("fa-microphone-slash");
    EIcon._MINUS = new EIcon("fa-minus");
    EIcon._MINUS_CIRCLE = new EIcon("fa-minus-circle");
    EIcon._MINUS_SQUARE = new EIcon("fa-minus-square");
    EIcon._MINUS_SQUARE_O = new EIcon("fa-minus-square-o");
    EIcon._MOBILE = new EIcon("fa-mobile");
    EIcon._MOBILE_PHONE = new EIcon("fa-mobile-phone");
    EIcon._MONEY = new EIcon("fa-money");
    EIcon._MOON_O = new EIcon("fa-moon-o");
    EIcon._MORTAR_BOARD = new EIcon("fa-mortar-board");
    EIcon._MOTORCYCLE = new EIcon("fa-motorcycle");
    EIcon._MUSIC = new EIcon("fa-music");
    EIcon._NAVICON = new EIcon("fa-navicon");
    EIcon._NEWSPAPER_O = new EIcon("fa-newspaper-o");
    EIcon._PAINT_BRUSH = new EIcon("fa-paint-brush");
    EIcon._PAPER_PLANE = new EIcon("fa-paper-plane");
    EIcon._PAPER_PLANE_O = new EIcon("fa-paper-plane-o");
    EIcon._PAW = new EIcon("fa-paw");
    EIcon._PENCIL = new EIcon("fa-pencil");
    EIcon._PENCIL_SQUARE = new EIcon("fa-pencil-square");
    EIcon._PENCIL_SQUARE_O = new EIcon("fa-pencil-square-o");
    EIcon._PHONE = new EIcon("fa-phone");
    EIcon._PHONE_SQUARE = new EIcon("fa-phone-square");
    EIcon._PHOTO = new EIcon("fa-photo");
    EIcon._PICTURE_O = new EIcon("fa-picture-o");
    EIcon._PIE_CHART = new EIcon("fa-pie-chart");
    EIcon._PLANE = new EIcon("fa-plane");
    EIcon._PLUG = new EIcon("fa-plug");
    EIcon._PLUS = new EIcon("fa-plus");
    EIcon._PLUS_CIRCLE = new EIcon("fa-plus-circle");
    EIcon._PLUS_SQUARE = new EIcon("fa-plus-square");
    EIcon._PLUS_SQUARE_O = new EIcon("fa-plus-square-o");
    EIcon._POWER_OFF = new EIcon("fa-power-off");
    EIcon._PRINT = new EIcon("fa-print");
    EIcon._PUZZLE_PIECE = new EIcon("fa-puzzle-piece");
    EIcon._QRCODE = new EIcon("fa-qrcode");
    EIcon._QUESTION = new EIcon("fa-question");
    EIcon._QUESTION_CIRCLE = new EIcon("fa-question-circle");
    EIcon._QUOTE_LEFT = new EIcon("fa-quote-left");
    EIcon._QUOTE_RIGHT = new EIcon("fa-quote-right");
    EIcon._RANDOM = new EIcon("fa-random");
    EIcon._RECYCLE = new EIcon("fa-recycle");
    EIcon._REFRESH = new EIcon("fa-refresh");
    EIcon._REMOVE = new EIcon("fa-remove");
    EIcon._REORDER = new EIcon("fa-reorder");
    EIcon._REPLY = new EIcon("fa-reply");
    EIcon._REPLY_ALL = new EIcon("fa-reply-all");
    EIcon._RETWEET = new EIcon("fa-retweet");
    EIcon._ROAD = new EIcon("fa-road");
    EIcon._ROCKET = new EIcon("fa-rocket");
    EIcon._RSS = new EIcon("fa-rss");
    EIcon._RSS_SQUARE = new EIcon("fa-rss-square");
    EIcon._SEARCH = new EIcon("fa-search");
    EIcon._SEARCH_MINUS = new EIcon("fa-search-minus");
    EIcon._SEARCH_PLUS = new EIcon("fa-search-plus");
    EIcon._SEND = new EIcon("fa-send");
    EIcon._SEND_O = new EIcon("fa-send-o");
    EIcon._SERVER = new EIcon("fa-server");
    EIcon._SHARE = new EIcon("fa-share");
    EIcon._SHARE_ALT = new EIcon("fa-share-alt");
    EIcon._SHARE_ALT_SQUARE = new EIcon("fa-share-alt-square");
    EIcon._SHARE_SQUARE = new EIcon("fa-share-square");
    EIcon._SHARE_SQUARE_O = new EIcon("fa-share-square-o");
    EIcon._SHIELD = new EIcon("fa-shield");
    EIcon._SHIP = new EIcon("fa-ship");
    EIcon._SHOPPING_CART = new EIcon("fa-shopping-cart");
    EIcon._SIGN_IN = new EIcon("fa-sign-in");
    EIcon._SIGN_OUT = new EIcon("fa-sign-out");
    EIcon._SIGNAL = new EIcon("fa-signal");
    EIcon._SITEMAP = new EIcon("fa-sitemap");
    EIcon._SLIDERS = new EIcon("fa-sliders");
    EIcon._SMILE_O = new EIcon("fa-smile-o");
    EIcon._SOCCER_BALL_O = new EIcon("fa-soccer-ball-o");
    EIcon._SORT = new EIcon("fa-sort");
    EIcon._SORT_ALPHA_ASC = new EIcon("fa-sort-alpha-asc");
    EIcon._SORT_ALPHA_DESC = new EIcon("fa-sort-alpha-desc");
    EIcon._SORT_AMOUNT_ASC = new EIcon("fa-sort-amount-asc");
    EIcon._SORT_AMOUNT_DESC = new EIcon("fa-sort-amount-desc");
    EIcon._SORT_ASC = new EIcon("fa-sort-asc");
    EIcon._SORT_DESC = new EIcon("fa-sort-desc");
    EIcon._SORT_DOWN = new EIcon("fa-sort-down");
    EIcon._SORT_NUMERIC_ASC = new EIcon("fa-sort-numeric-asc");
    EIcon._SORT_NUMERIC_DESC = new EIcon("fa-sort-numeric-desc");
    EIcon._SORT_UP = new EIcon("fa-sort-up");
    EIcon._SPACE_SHUTTLE = new EIcon("fa-space-shuttle");
    EIcon._SPINNER = new EIcon("fa-spinner");
    EIcon._SPOON = new EIcon("fa-spoon");
    EIcon._SQUARE = new EIcon("fa-square");
    EIcon._SQUARE_O = new EIcon("fa-square-o");
    EIcon._STAR = new EIcon("fa-star");
    EIcon._STAR_HALF = new EIcon("fa-star-half");
    EIcon._STAR_HALF_EMPTY = new EIcon("fa-star-half-empty");
    EIcon._STAR_HALF_FULL = new EIcon("fa-star-half-full");
    EIcon._STAR_HALF_O = new EIcon("fa-star-half-o");
    EIcon._STAR_O = new EIcon("fa-star-o");
    EIcon._STREET_VIEW = new EIcon("fa-street-view");
    EIcon._SUITCASE = new EIcon("fa-suitcase");
    EIcon._SUN_O = new EIcon("fa-sun-o");
    EIcon._SUPPORT = new EIcon("fa-support");
    EIcon._TABLET = new EIcon("fa-tablet");
    EIcon._TACHOMETER = new EIcon("fa-tachometer");
    EIcon._TAG = new EIcon("fa-tag");
    EIcon._TAGS = new EIcon("fa-tags");
    EIcon._TASKS = new EIcon("fa-tasks");
    EIcon._TAXI = new EIcon("fa-taxi");
    EIcon._TERMINAL = new EIcon("fa-terminal");
    EIcon._THUMB_TACK = new EIcon("fa-thumb-tack");
    EIcon._THUMBS_DOWN = new EIcon("fa-thumbs-down");
    EIcon._THUMBS_O_DOWN = new EIcon("fa-thumbs-o-down");
    EIcon._THUMBS_O_UP = new EIcon("fa-thumbs-o-up");
    EIcon._THUMBS_UP = new EIcon("fa-thumbs-up");
    EIcon._TICKET = new EIcon("fa-ticket");
    EIcon._TIMES = new EIcon("fa-times");
    EIcon._TIMES_CIRCLE = new EIcon("fa-times-circle");
    EIcon._TIMES_CIRCLE_O = new EIcon("fa-times-circle-o");
    EIcon._TINT = new EIcon("fa-tint");
    EIcon._TOGGLE_DOWN = new EIcon("fa-toggle-down");
    EIcon._TOGGLE_LEFT = new EIcon("fa-toggle-left");
    EIcon._TOGGLE_OFF = new EIcon("fa-toggle-off");
    EIcon._TOGGLE_ON = new EIcon("fa-toggle-on");
    EIcon._TOGGLE_RIGHT = new EIcon("fa-toggle-right");
    EIcon._TOGGLE_UP = new EIcon("fa-toggle-up");
    EIcon._TRASH = new EIcon("fa-trash");
    EIcon._TRASH_O = new EIcon("fa-trash-o");
    EIcon._TREE = new EIcon("fa-tree");
    EIcon._TROPHY = new EIcon("fa-trophy");
    EIcon._TRUCK = new EIcon("fa-truck");
    EIcon._TTY = new EIcon("fa-tty");
    EIcon._UMBRELLA = new EIcon("fa-umbrella");
    EIcon._UNIVERSITY = new EIcon("fa-university");
    EIcon._UNLOCK = new EIcon("fa-unlock");
    EIcon._UNLOCK_ALT = new EIcon("fa-unlock-alt");
    EIcon._UNSORTED = new EIcon("fa-unsorted");
    EIcon._UPLOAD = new EIcon("fa-upload");
    EIcon._USER = new EIcon("fa-user");
    EIcon._USER_PLUS = new EIcon("fa-user-plus");
    EIcon._USER_SECRET = new EIcon("fa-user-secret");
    EIcon._USER_TIMES = new EIcon("fa-user-times");
    EIcon._USERS = new EIcon("fa-users");
    EIcon._VIDEO_CAMERA = new EIcon("fa-video-camera");
    EIcon._VOLUME_DOWN = new EIcon("fa-volume-down");
    EIcon._VOLUME_OFF = new EIcon("fa-volume-off");
    EIcon._VOLUME_UP = new EIcon("fa-volume-up");
    EIcon._WARNING = new EIcon("fa-warning");
    EIcon._WHEELCHAIR = new EIcon("fa-wheelchair");
    EIcon._WIFI = new EIcon("fa-wifi");
    EIcon._WRENCH = new EIcon("fa-wrench");
    EIcon._HAND_O_DOWN = new EIcon("fa-hand-o-down");
    EIcon._HAND_O_LEFT = new EIcon("fa-hand-o-left");
    EIcon._HAND_O_RIGHT = new EIcon("fa-hand-o-right");
    EIcon._HAND_O_UP = new EIcon("fa-hand-o-up");
    EIcon._AMBULANCE = new EIcon("fa-ambulance");
    EIcon._SUBWAY = new EIcon("fa-subway");
    EIcon._TRAIN = new EIcon("fa-train");
    EIcon._INTERSEX = new EIcon("fa-intersex");
    EIcon._MARS = new EIcon("fa-mars");
    EIcon._MARS_DOUBLE = new EIcon("fa-mars-double");
    EIcon._MARS_STROKE = new EIcon("fa-mars-stroke");
    EIcon._MARS_STROKE_H = new EIcon("fa-mars-stroke-h");
    EIcon._MARS_STROKE_V = new EIcon("fa-mars-stroke-v");
    EIcon._MERCURY = new EIcon("fa-mercury");
    EIcon._NEUTER = new EIcon("fa-neuter");
    EIcon._TRANSGENDER = new EIcon("fa-transgender");
    EIcon._TRANSGENDER_ALT = new EIcon("fa-transgender-alt");
    EIcon._VENUS = new EIcon("fa-venus");
    EIcon._VENUS_DOUBLE = new EIcon("fa-venus-double");
    EIcon._VENUS_MARS = new EIcon("fa-venus-mars");
    EIcon._FILE = new EIcon("fa-file");
    EIcon._FILE_O = new EIcon("fa-file-o");
    EIcon._FILE_TEXT = new EIcon("fa-file-text");
    EIcon._FILE_TEXT_O = new EIcon("fa-file-text-o");
    EIcon._CC_AMEX = new EIcon("fa-cc-amex");
    EIcon._CC_DISCOVER = new EIcon("fa-cc-discover");
    EIcon._CC_MASTERCARD = new EIcon("fa-cc-mastercard");
    EIcon._CC_PAYPAL = new EIcon("fa-cc-paypal");
    EIcon._CC_STRIPE = new EIcon("fa-cc-stripe");
    EIcon._CC_VISA = new EIcon("fa-cc-visa");
    EIcon._GOOGLE_WALLET = new EIcon("fa-google-wallet");
    EIcon._PAYPAL = new EIcon("fa-paypal");
    EIcon._BITCOIN = new EIcon("fa-bitcoin");
    EIcon._BTC = new EIcon("fa-btc");
    EIcon._CNY = new EIcon("fa-cny");
    EIcon._DOLLAR = new EIcon("fa-dollar");
    EIcon._EUR = new EIcon("fa-eur");
    EIcon._EURO = new EIcon("fa-euro");
    EIcon._GBP = new EIcon("fa-gbp");
    EIcon._ILS = new EIcon("fa-ils");
    EIcon._INR = new EIcon("fa-inr");
    EIcon._JPY = new EIcon("fa-jpy");
    EIcon._KRW = new EIcon("fa-krw");
    EIcon._RMB = new EIcon("fa-rmb");
    EIcon._ROUBLE = new EIcon("fa-rouble");
    EIcon._RUB = new EIcon("fa-rub");
    EIcon._RUBLE = new EIcon("fa-ruble");
    EIcon._RUPEE = new EIcon("fa-rupee");
    EIcon._SHEKEL = new EIcon("fa-shekel");
    EIcon._SHEQEL = new EIcon("fa-sheqel");
    EIcon._TRY = new EIcon("fa-try");
    EIcon._TURKISH_LIRA = new EIcon("fa-turkish-lira");
    EIcon._USD = new EIcon("fa-usd");
    EIcon._WON = new EIcon("fa-won");
    EIcon._YEN = new EIcon("fa-yen");
    EIcon._ALIGN_CENTER = new EIcon("fa-align-center");
    EIcon._ALIGN_JUSTIFY = new EIcon("fa-align-justify");
    EIcon._ALIGN_LEFT = new EIcon("fa-align-left");
    EIcon._ALIGN_RIGHT = new EIcon("fa-align-right");
    EIcon._BOLD = new EIcon("fa-bold");
    EIcon._CHAIN = new EIcon("fa-chain");
    EIcon._CHAIN_BROKEN = new EIcon("fa-chain-broken");
    EIcon._CLIPBOARD = new EIcon("fa-clipboard");
    EIcon._COLUMNS = new EIcon("fa-columns");
    EIcon._COPY = new EIcon("fa-copy");
    EIcon._CUT = new EIcon("fa-cut");
    EIcon._DEDENT = new EIcon("fa-dedent");
    EIcon._FILES_O = new EIcon("fa-files-o");
    EIcon._FLOPPY_O = new EIcon("fa-floppy-o");
    EIcon._FONT = new EIcon("fa-font");
    EIcon._HEADER = new EIcon("fa-header");
    EIcon._INDENT = new EIcon("fa-indent");
    EIcon._ITALIC = new EIcon("fa-italic");
    EIcon._LINK = new EIcon("fa-link");
    EIcon._LIST = new EIcon("fa-list");
    EIcon._LIST_ALT = new EIcon("fa-list-alt");
    EIcon._LIST_OL = new EIcon("fa-list-ol");
    EIcon._LIST_UL = new EIcon("fa-list-ul");
    EIcon._OUTDENT = new EIcon("fa-outdent");
    EIcon._PAPERCLIP = new EIcon("fa-paperclip");
    EIcon._PARAGRAPH = new EIcon("fa-paragraph");
    EIcon._PASTE = new EIcon("fa-paste");
    EIcon._REPEAT = new EIcon("fa-repeat");
    EIcon._ROTATE_LEFT = new EIcon("fa-rotate-left");
    EIcon._ROTATE_RIGHT = new EIcon("fa-rotate-right");
    EIcon._SAVE = new EIcon("fa-save");
    EIcon._SCISSORS = new EIcon("fa-scissors");
    EIcon._STRIKETHROUGH = new EIcon("fa-strikethrough");
    EIcon._SUBSCRIPT = new EIcon("fa-subscript");
    EIcon._SUPERSCRIPT = new EIcon("fa-superscript");
    EIcon._TABLE = new EIcon("fa-table");
    EIcon._TEXT_HEIGHT = new EIcon("fa-text-height");
    EIcon._TEXT_WIDTH = new EIcon("fa-text-width");
    EIcon._TH = new EIcon("fa-th");
    EIcon._TH_LARGE = new EIcon("fa-th-large");
    EIcon._TH_LIST = new EIcon("fa-th-list");
    EIcon._UNDERLINE = new EIcon("fa-underline");
    EIcon._UNDO = new EIcon("fa-undo");
    EIcon._UNLINK = new EIcon("fa-unlink");
    EIcon._ANGLE_DOUBLE_DOWN = new EIcon("fa-angle-double-down");
    EIcon._ANGLE_DOUBLE_LEFT = new EIcon("fa-angle-double-left");
    EIcon._ANGLE_DOUBLE_RIGHT = new EIcon("fa-angle-double-right");
    EIcon._ANGLE_DOUBLE_UP = new EIcon("fa-angle-double-up");
    EIcon._ANGLE_DOWN = new EIcon("fa-angle-down");
    EIcon._ANGLE_LEFT = new EIcon("fa-angle-left");
    EIcon._ANGLE_RIGHT = new EIcon("fa-angle-right");
    EIcon._ANGLE_UP = new EIcon("fa-angle-up");
    EIcon._ARROW_CIRCLE_DOWN = new EIcon("fa-arrow-circle-down");
    EIcon._ARROW_CIRCLE_LEFT = new EIcon("fa-arrow-circle-left");
    EIcon._ARROW_CIRCLE_O_DOWN = new EIcon("fa-arrow-circle-o-down");
    EIcon._ARROW_CIRCLE_O_LEFT = new EIcon("fa-arrow-circle-o-left");
    EIcon._ARROW_CIRCLE_O_RIGHT = new EIcon("fa-arrow-circle-o-right");
    EIcon._ARROW_CIRCLE_O_UP = new EIcon("fa-arrow-circle-o-up");
    EIcon._ARROW_CIRCLE_RIGHT = new EIcon("fa-arrow-circle-right");
    EIcon._ARROW_CIRCLE_UP = new EIcon("fa-arrow-circle-up");
    EIcon._ARROW_DOWN = new EIcon("fa-arrow-down");
    EIcon._ARROW_LEFT = new EIcon("fa-arrow-left");
    EIcon._ARROW_RIGHT = new EIcon("fa-arrow-right");
    EIcon._ARROW_UP = new EIcon("fa-arrow-up");
    EIcon._ARROWS_ALT = new EIcon("fa-arrows-alt");
    EIcon._CARET_DOWN = new EIcon("fa-caret-down");
    EIcon._CARET_LEFT = new EIcon("fa-caret-left");
    EIcon._CARET_RIGHT = new EIcon("fa-caret-right");
    EIcon._CARET_UP = new EIcon("fa-caret-up");
    EIcon._CHEVRON_CIRCLE_DOWN = new EIcon("fa-chevron-circle-down");
    EIcon._CHEVRON_CIRCLE_LEFT = new EIcon("fa-chevron-circle-left");
    EIcon._CHEVRON_CIRCLE_RIGHT = new EIcon("fa-chevron-circle-right");
    EIcon._CHEVRON_CIRCLE_UP = new EIcon("fa-chevron-circle-up");
    EIcon._CHEVRON_DOWN = new EIcon("fa-chevron-down");
    EIcon._CHEVRON_LEFT = new EIcon("fa-chevron-left");
    EIcon._CHEVRON_RIGHT = new EIcon("fa-chevron-right");
    EIcon._CHEVRON_UP = new EIcon("fa-chevron-up");
    EIcon._LONG_ARROW_DOWN = new EIcon("fa-long-arrow-down");
    EIcon._LONG_ARROW_LEFT = new EIcon("fa-long-arrow-left");
    EIcon._LONG_ARROW_RIGHT = new EIcon("fa-long-arrow-right");
    EIcon._LONG_ARROW_UP = new EIcon("fa-long-arrow-up");
    EIcon._BACKWARD = new EIcon("fa-backward");
    EIcon._COMPRESS = new EIcon("fa-compress");
    EIcon._EJECT = new EIcon("fa-eject");
    EIcon._EXPAND = new EIcon("fa-expand");
    EIcon._FAST_BACKWARD = new EIcon("fa-fast-backward");
    EIcon._FAST_FORWARD = new EIcon("fa-fast-forward");
    EIcon._FORWARD = new EIcon("fa-forward");
    EIcon._PAUSE = new EIcon("fa-pause");
    EIcon._PLAY = new EIcon("fa-play");
    EIcon._PLAY_CIRCLE = new EIcon("fa-play-circle");
    EIcon._PLAY_CIRCLE_O = new EIcon("fa-play-circle-o");
    EIcon._STEP_BACKWARD = new EIcon("fa-step-backward");
    EIcon._STEP_FORWARD = new EIcon("fa-step-forward");
    EIcon._STOP = new EIcon("fa-stop");
    EIcon._YOUTUBE_PLAY = new EIcon("fa-youtube-play");
    EIcon._ADN = new EIcon("fa-adn");
    EIcon._ANDROID = new EIcon("fa-android");
    EIcon._ANGELLIST = new EIcon("fa-angellist");
    EIcon._APPLE = new EIcon("fa-apple");
    EIcon._BEHANCE = new EIcon("fa-behance");
    EIcon._BEHANCE_SQUARE = new EIcon("fa-behance-square");
    EIcon._BITBUCKET = new EIcon("fa-bitbucket");
    EIcon._BITBUCKET_SQUARE = new EIcon("fa-bitbucket-square");
    EIcon._BUYSELLADS = new EIcon("fa-buysellads");
    EIcon._CODEPEN = new EIcon("fa-codepen");
    EIcon._CONNECTDEVELOP = new EIcon("fa-connectdevelop");
    EIcon._CSS3 = new EIcon("fa-css3");
    EIcon._DASHCUBE = new EIcon("fa-dashcube");
    EIcon._DELICIOUS = new EIcon("fa-delicious");
    EIcon._DEVIANTART = new EIcon("fa-deviantart");
    EIcon._DIGG = new EIcon("fa-digg");
    EIcon._DRIBBBLE = new EIcon("fa-dribbble");
    EIcon._DROPBOX = new EIcon("fa-dropbox");
    EIcon._DRUPAL = new EIcon("fa-drupal");
    EIcon._EMPIRE = new EIcon("fa-empire");
    EIcon._FACEBOOK = new EIcon("fa-facebook");
    EIcon._FACEBOOK_F = new EIcon("fa-facebook-f");
    EIcon._FACEBOOK_OFFICIAL = new EIcon("fa-facebook-official");
    EIcon._FACEBOOK_SQUARE = new EIcon("fa-facebook-square");
    EIcon._FLICKR = new EIcon("fa-flickr");
    EIcon._FORUMBEE = new EIcon("fa-forumbee");
    EIcon._FOURSQUARE = new EIcon("fa-foursquare");
    EIcon._GE = new EIcon("fa-ge");
    EIcon._GIT = new EIcon("fa-git");
    EIcon._GIT_SQUARE = new EIcon("fa-git-square");
    EIcon._GITHUB = new EIcon("fa-github");
    EIcon._GITHUB_ALT = new EIcon("fa-github-alt");
    EIcon._GITHUB_SQUARE = new EIcon("fa-github-square");
    EIcon._GITTIP = new EIcon("fa-gittip");
    EIcon._GOOGLE = new EIcon("fa-google");
    EIcon._GOOGLE_PLUS = new EIcon("fa-google-plus");
    EIcon._GOOGLE_PLUS_SQUARE = new EIcon("fa-google-plus-square");
    EIcon._GRATIPAY = new EIcon("fa-gratipay");
    EIcon._HACKER_NEWS = new EIcon("fa-hacker-news");
    EIcon._HTML5 = new EIcon("fa-html5");
    EIcon._INSTAGRAM = new EIcon("fa-instagram");
    EIcon._IOXHOST = new EIcon("fa-ioxhost");
    EIcon._JOOMLA = new EIcon("fa-joomla");
    EIcon._JSFIDDLE = new EIcon("fa-jsfiddle");
    EIcon._LASTFM = new EIcon("fa-lastfm");
    EIcon._LASTFM_SQUARE = new EIcon("fa-lastfm-square");
    EIcon._LEANPUB = new EIcon("fa-leanpub");
    EIcon._LINKEDIN = new EIcon("fa-linkedin");
    EIcon._LINKEDIN_SQUARE = new EIcon("fa-linkedin-square");
    EIcon._LINUX = new EIcon("fa-linux");
    EIcon._MAXCDN = new EIcon("fa-maxcdn");
    EIcon._MEANPATH = new EIcon("fa-meanpath");
    EIcon._MEDIUM = new EIcon("fa-medium");
    EIcon._OPENID = new EIcon("fa-openid");
    EIcon._PAGELINES = new EIcon("fa-pagelines");
    EIcon._PIED_PIPER = new EIcon("fa-pied-piper");
    EIcon._PIED_PIPER_ALT = new EIcon("fa-pied-piper-alt");
    EIcon._PINTEREST = new EIcon("fa-pinterest");
    EIcon._PINTEREST_P = new EIcon("fa-pinterest-p");
    EIcon._PINTEREST_SQUARE = new EIcon("fa-pinterest-square");
    EIcon._QQ = new EIcon("fa-qq");
    EIcon._RA = new EIcon("fa-ra");
    EIcon._REBEL = new EIcon("fa-rebel");
    EIcon._REDDIT = new EIcon("fa-reddit");
    EIcon._REDDIT_SQUARE = new EIcon("fa-reddit-square");
    EIcon._RENREN = new EIcon("fa-renren");
    EIcon._SELLSY = new EIcon("fa-sellsy");
    EIcon._SHIRTSINBULK = new EIcon("fa-shirtsinbulk");
    EIcon._SIMPLYBUILT = new EIcon("fa-simplybuilt");
    EIcon._SKYATLAS = new EIcon("fa-skyatlas");
    EIcon._SKYPE = new EIcon("fa-skype");
    EIcon._SLACK = new EIcon("fa-slack");
    EIcon._SLIDESHARE = new EIcon("fa-slideshare");
    EIcon._SOUNDCLOUD = new EIcon("fa-soundcloud");
    EIcon._SPOTIFY = new EIcon("fa-spotify");
    EIcon._STACK_EXCHANGE = new EIcon("fa-stack-exchange");
    EIcon._STACK_OVERFLOW = new EIcon("fa-stack-overflow");
    EIcon._STEAM = new EIcon("fa-steam");
    EIcon._STEAM_SQUARE = new EIcon("fa-steam-square");
    EIcon._STUMBLEUPON = new EIcon("fa-stumbleupon");
    EIcon._STUMBLEUPON_CIRCLE = new EIcon("fa-stumbleupon-circle");
    EIcon._TENCENT_WEIBO = new EIcon("fa-tencent-weibo");
    EIcon._TRELLO = new EIcon("fa-trello");
    EIcon._TUMBLR = new EIcon("fa-tumblr");
    EIcon._TUMBLR_SQUARE = new EIcon("fa-tumblr-square");
    EIcon._TWITCH = new EIcon("fa-twitch");
    EIcon._TWITTER = new EIcon("fa-twitter");
    EIcon._TWITTER_SQUARE = new EIcon("fa-twitter-square");
    EIcon._VIACOIN = new EIcon("fa-viacoin");
    EIcon._VIMEO_SQUARE = new EIcon("fa-vimeo-square");
    EIcon._VINE = new EIcon("fa-vine");
    EIcon._VK = new EIcon("fa-vk");
    EIcon._WECHAT = new EIcon("fa-wechat");
    EIcon._WEIBO = new EIcon("fa-weibo");
    EIcon._WEIXIN = new EIcon("fa-weixin");
    EIcon._WHATSAPP = new EIcon("fa-whatsapp");
    EIcon._WINDOWS = new EIcon("fa-windows");
    EIcon._WORDPRESS = new EIcon("fa-wordpress");
    EIcon._XING = new EIcon("fa-xing");
    EIcon._XING_SQUARE = new EIcon("fa-xing-square");
    EIcon._Y_COMBINATOR_SQUARE = new EIcon("fa-y-combinator-square");
    EIcon._YAHOO = new EIcon("fa-yahoo");
    EIcon._YC_SQUARE = new EIcon("fa-yc-square");
    EIcon._YELP = new EIcon("fa-yelp");
    EIcon._YOUTUBE = new EIcon("fa-youtube");
    EIcon._YOUTUBE_SQUARE = new EIcon("fa-youtube-square");
    cubee.EIcon = EIcon;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var APopup = (function () {
        function APopup(modal, autoClose, glassColor) {
            if (modal === void 0) { modal = true; }
            if (autoClose === void 0) { autoClose = true; }
            if (glassColor === void 0) { glassColor = cubee.Color.argb(0x00000000); }
            var _this = this;
            this._modal = false;
            this._autoClose = true;
            this._glassColor = cubee.Color.TRANSPARENT;
            this._translateX = new cubee.NumberProperty(0, false, false);
            this._translateY = new cubee.NumberProperty(0, false, false);
            this._center = new cubee.BooleanProperty(false, false, false);
            this._popupRoot = null;
            this._rootComponentContainer = null;
            this._rootComponent = null;
            this._visible = false;
            this._modal = modal;
            this._autoClose = autoClose;
            this._glassColor = glassColor;
            this._popupRoot = new cubee.Panel();
            this._popupRoot.element.style.left = "0px";
            this._popupRoot.element.style.top = "0px";
            this._popupRoot.element.style.right = "0px";
            this._popupRoot.element.style.bottom = "0px";
            this._popupRoot.element.style.position = "fixed";
            this._popupRoot.element.style.overflow = "auto";
            if (glassColor != null) {
                this._popupRoot.background = new cubee.ColorBackground(glassColor);
            }
            if (modal || autoClose) {
                this._popupRoot.element.style.pointerEvents = "all";
            }
            else {
                this._popupRoot.element.style.pointerEvents = "none";
                this._popupRoot.pointerTransparent = true;
            }
            this._rootComponentContainer = new cubee.Panel();
            this._rootComponentContainer.TranslateX.bind(new cubee.Expression(function () {
                var baseX = 0;
                if (_this._popupRoot.clientWidth > _this._rootComponentContainer.boundsWidth) {
                    if (_this._center.value) {
                        baseX = (_this._popupRoot.clientWidth - _this._rootComponentContainer.boundsWidth) / 2;
                    }
                    baseX += _this._translateX.value;
                }
                return baseX;
            }, this._center, this._popupRoot.ClientWidth, this._translateX, this._rootComponentContainer.BoundsWidth));
            this._rootComponentContainer.TranslateY.bind(new cubee.Expression(function () {
                var baseY = 0;
                if (_this._popupRoot.clientHeight > _this._rootComponentContainer.boundsHeight) {
                    if (_this._center.value) {
                        baseY = (_this._popupRoot.clientHeight - _this._rootComponentContainer.boundsHeight) / 2;
                    }
                    baseY += _this._translateY.value;
                }
                return baseY;
            }, this._center, this._popupRoot.ClientHeight, this._translateY, this._rootComponentContainer.BoundsHeight));
            this._popupRoot.children.add(this._rootComponentContainer);
            this._rootComponentContainer.onClick.addListener(function (evt) {
                evt.stopPropagation();
            });
            if (autoClose) {
                this._popupRoot.onClick.addListener(function () {
                    _this.close();
                });
            }
        }
        Object.defineProperty(APopup.prototype, "__popupRoot", {
            get: function () {
                return this._popupRoot;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(APopup.prototype, "rootComponent", {
            get: function () {
                return this._rootComponent;
            },
            set: function (rootComponent) {
                this._rootComponentContainer.children.clear();
                this._rootComponent = null;
                if (rootComponent != null) {
                    this._rootComponentContainer.children.add(rootComponent);
                }
                this._rootComponent = rootComponent;
            },
            enumerable: true,
            configurable: true
        });
        APopup.prototype.show = function () {
            if (this._visible) {
                throw "This popup is already shown.";
            }
            var body = document.getElementsByTagName("body")[0];
            body.appendChild(this._popupRoot.element);
            Popups._addPopup(this);
            this._visible = true;
        };
        APopup.prototype.close = function () {
            if (!this._visible) {
                throw "This popup isn't shown.";
            }
            if (!this.isCloseAllowed()) {
                return false;
            }
            var body = document.getElementsByTagName("body")[0];
            body.removeChild(this._popupRoot.element);
            Popups._removePopup(this);
            this._visible = false;
            this.onClosed();
            return true;
        };
        APopup.prototype.isCloseAllowed = function () {
            return true;
        };
        APopup.prototype.onClosed = function () {
        };
        Object.defineProperty(APopup.prototype, "modal", {
            get: function () {
                return this._modal;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(APopup.prototype, "autoClose", {
            get: function () {
                return this._autoClose;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(APopup.prototype, "glassColor", {
            get: function () {
                return this._glassColor;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(APopup.prototype, "TranslateX", {
            get: function () {
                return this._translateX;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(APopup.prototype, "translateX", {
            get: function () {
                return this.TranslateX.value;
            },
            set: function (value) {
                this.TranslateX.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(APopup.prototype, "TranslateY", {
            get: function () {
                return this._translateY;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(APopup.prototype, "translateY", {
            get: function () {
                return this.TranslateY.value;
            },
            set: function (value) {
                this.TranslateY.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(APopup.prototype, "Center", {
            get: function () {
                return this._center;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(APopup.prototype, "center", {
            get: function () {
                return this.Center.value;
            },
            set: function (value) {
                this.Center.value = value;
            },
            enumerable: true,
            configurable: true
        });
        APopup.prototype._layout = function () {
            this._popupRoot.width = window.innerWidth;
            this._popupRoot.height = window.innerHeight;
            this._popupRoot.layout();
        };
        return APopup;
    }());
    cubee.APopup = APopup;
    var Popups = (function () {
        function Popups() {
            throw "Can not instantiate Popups class.";
        }
        Popups._addPopup = function (popup) {
            Popups._popups.push(popup);
            Popups._requestLayout();
        };
        Popups._removePopup = function (popup) {
            var idx = Popups._popups.indexOf(popup);
            if (idx > -1) {
                Popups._popups.splice(idx, 1);
                Popups._requestLayout();
            }
        };
        Popups._requestLayout = function () {
            Popups._layoutRunOnce.run();
        };
        Popups.layout = function () {
            Popups._popups.forEach(function (popup) {
                popup._layout();
            });
        };
        return Popups;
    }());
    Popups._popups = [];
    Popups._layoutRunOnce = new cubee.RunOnce(function () {
        Popups.layout();
    });
    cubee.Popups = Popups;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var ATreeItem = (function (_super) {
        __extends(ATreeItem, _super);
        function ATreeItem() {
            return _super.apply(this, arguments) || this;
        }
        return ATreeItem;
    }(cubee.AUserControl));
    cubee.ATreeItem = ATreeItem;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var FolderTreeItem = (function (_super) {
        __extends(FolderTreeItem, _super);
        function FolderTreeItem() {
            return _super.apply(this, arguments) || this;
        }
        return FolderTreeItem;
    }(cubee.AUserControl));
    cubee.FolderTreeItem = FolderTreeItem;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var LeafTreeItem = (function (_super) {
        __extends(LeafTreeItem, _super);
        function LeafTreeItem() {
            return _super.apply(this, arguments) || this;
        }
        return LeafTreeItem;
    }(cubee.AUserControl));
    cubee.LeafTreeItem = LeafTreeItem;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var TreView = (function (_super) {
        __extends(TreView, _super);
        function TreView() {
            return _super.apply(this, arguments) || this;
        }
        return TreView;
    }(cubee.AUserControl));
    cubee.TreView = TreView;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var HSplitPanel = (function (_super) {
        __extends(HSplitPanel, _super);
        function HSplitPanel() {
            var _this = _super.apply(this, arguments) || this;
            _this.leftPanel = SplitPanelContainer.create();
            _this.rightPanel = SplitPanelContainer.create();
            return _this;
        }
        return HSplitPanel;
    }(cubee.AUserControl));
    cubee.HSplitPanel = HSplitPanel;
    var VSplitPanel = (function (_super) {
        __extends(VSplitPanel, _super);
        function VSplitPanel() {
            return _super.apply(this, arguments) || this;
        }
        return VSplitPanel;
    }(cubee.AUserControl));
    cubee.VSplitPanel = VSplitPanel;
    var SplitPanelContainer = (function (_super) {
        __extends(SplitPanelContainer, _super);
        function SplitPanelContainer() {
            return _super.call(this) || this;
        }
        SplitPanelContainer.create = function () {
            return new SplitPanelContainer();
        };
        Object.defineProperty(SplitPanelContainer.prototype, "children", {
            get: function () {
                return this.children_inner;
            },
            enumerable: true,
            configurable: true
        });
        return SplitPanelContainer;
    }(cubee.AUserControl));
    cubee.SplitPanelContainer = SplitPanelContainer;
})(cubee || (cubee = {}));
var cubee;
(function (cubee) {
    var CubeePanel = (function () {
        function CubeePanel(element) {
            var _this = this;
            this._layoutRunOnce = null;
            this._contentPanel = null;
            this._rootComponent = null;
            this._left = -1;
            this._top = -1;
            this._clientWidth = -1;
            this._clientHeight = -1;
            this._offsetWidth = -1;
            this._offsetHeight = -1;
            this._element = element;
            window.addEventListener("onresize", function (evt) {
                _this.requestLayout();
            });
            this._contentPanel = new cubee.Panel();
            this._contentPanel.element.style.pointerEvents = "none";
            this._contentPanel.pointerTransparent = true;
            this._contentPanel.setCubeePanel(this);
            this._element.appendChild(this._contentPanel.element);
            this.checkBounds();
            this.requestLayout();
            var t = new cubee.Timer(function () {
                cubee.EventQueue.Instance.invokeLater(function () {
                    _this.checkBounds();
                });
            });
            t.start(100, true);
        }
        CubeePanel.prototype.checkBounds = function () {
            var newLeft = this._element.offsetLeft;
            var newTop = this._element.offsetTop;
            var newClientWidth = this._element.clientWidth;
            var newClientHeight = this._element.clientHeight;
            var newOffsetWidth = this._element.offsetWidth;
            var newOffsetHeight = this._element.offsetHeight;
            if (newLeft != this._left || newTop != this._top || newClientWidth != this._clientWidth || newClientHeight != this._clientHeight
                || newOffsetWidth != this._offsetWidth || newOffsetHeight != this._offsetHeight) {
                this._left = newLeft;
                this._top = newTop;
                this._clientWidth = newClientWidth;
                this._clientHeight = newClientHeight;
                this._offsetWidth = newOffsetWidth;
                this._offsetHeight = newOffsetHeight;
                this._contentPanel.width = this._offsetWidth;
                this._contentPanel.height = this._offsetHeight;
                if (this._element.style.position == "absolute") {
                    this._contentPanel.translateX = 0;
                    this._contentPanel.translateY = 0;
                }
                else {
                    this._contentPanel.translateX = 0;
                    this._contentPanel.translateY = 0;
                }
                this.requestLayout();
            }
        };
        CubeePanel.prototype.requestLayout = function () {
            var _this = this;
            if (this._layoutRunOnce == null) {
                this._layoutRunOnce = new cubee.RunOnce(function () {
                    _this.layout();
                });
            }
            this._layoutRunOnce.run();
        };
        CubeePanel.prototype.layout = function () {
            cubee.Popups._requestLayout();
            this._contentPanel.layout();
        };
        Object.defineProperty(CubeePanel.prototype, "rootComponent", {
            get: function () {
                return this._rootComponent;
            },
            set: function (rootComponent) {
                this._contentPanel.children.clear();
                this._rootComponent = null;
                if (rootComponent != null) {
                    this._contentPanel.children.add(rootComponent);
                    this._rootComponent = rootComponent;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CubeePanel.prototype, "ClientWidth", {
            get: function () {
                return this._contentPanel.ClientWidth;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CubeePanel.prototype, "clientWidth", {
            get: function () {
                return this.ClientWidth.value;
            },
            set: function (value) {
                this.ClientWidth.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CubeePanel.prototype, "ClientHeight", {
            get: function () {
                return this._contentPanel.ClientHeight;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CubeePanel.prototype, "clientHeight", {
            get: function () {
                return this.ClientHeight.value;
            },
            set: function (value) {
                this.ClientHeight.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CubeePanel.prototype, "BoundsWidth", {
            get: function () {
                return this._contentPanel.BoundsWidth;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CubeePanel.prototype, "boundsWidth", {
            get: function () {
                return this.BoundsWidth.value;
            },
            set: function (value) {
                this.BoundsWidth.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CubeePanel.prototype, "BoundsHeight", {
            get: function () {
                return this._contentPanel.BoundsHeight;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CubeePanel.prototype, "boundsHeight", {
            get: function () {
                return this.BoundsHeight.value;
            },
            set: function (value) {
                this.BoundsHeight.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CubeePanel.prototype, "BoundsLeft", {
            get: function () {
                return this._contentPanel.BoundsLeft;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CubeePanel.prototype, "boundsLeft", {
            get: function () {
                return this.BoundsLeft.value;
            },
            set: function (value) {
                this.BoundsLeft.value = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CubeePanel.prototype, "BoundsTop", {
            get: function () {
                return this._contentPanel.BoundsTop;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CubeePanel.prototype, "boundsTop", {
            get: function () {
                return this.BoundsTop.value;
            },
            set: function (value) {
                this.BoundsTop.value = value;
            },
            enumerable: true,
            configurable: true
        });
        return CubeePanel;
    }());
    cubee.CubeePanel = CubeePanel;
})(cubee || (cubee = {}));
//# sourceMappingURL=data:application/json;base64,